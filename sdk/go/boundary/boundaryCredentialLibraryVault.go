// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The credential library for Vault resource allows you to configure a Boundary credential library for Vault.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/katasec/pulumi-boundary/sdk/go/boundary"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			org, err := boundary.NewBoundaryScope(ctx, "org", &boundary.BoundaryScopeArgs{
//				Description:           pulumi.String("My first scope!"),
//				ScopeId:               pulumi.String("global"),
//				AutoCreateAdminRole:   pulumi.Bool(true),
//				AutoCreateDefaultRole: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			project, err := boundary.NewBoundaryScope(ctx, "project", &boundary.BoundaryScopeArgs{
//				Description:         pulumi.String("My first scope!"),
//				ScopeId:             org.ID(),
//				AutoCreateAdminRole: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			fooBoundaryCredentialStoreVault, err := boundary.NewBoundaryCredentialStoreVault(ctx, "fooBoundaryCredentialStoreVault", &boundary.BoundaryCredentialStoreVaultArgs{
//				Description: pulumi.String("My first Vault credential store!"),
//				Address:     pulumi.String("http://127.0.0.1:8200"),
//				Token:       pulumi.String("s.0ufRo6XEGU2jOqnIr7OlFYP5"),
//				ScopeId:     project.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = boundary.NewBoundaryCredentialLibraryVault(ctx, "fooBoundaryCredentialLibraryVault", &boundary.BoundaryCredentialLibraryVaultArgs{
//				Description:       pulumi.String("My first Vault credential library!"),
//				CredentialStoreId: fooBoundaryCredentialStoreVault.ID(),
//				Path:              pulumi.String("my/secret/foo"),
//				HttpMethod:        pulumi.String("GET"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = boundary.NewBoundaryCredentialLibraryVault(ctx, "bar", &boundary.BoundaryCredentialLibraryVaultArgs{
//				Description:       pulumi.String("My second Vault credential library!"),
//				CredentialStoreId: fooBoundaryCredentialStoreVault.ID(),
//				Path:              pulumi.String("my/secret/bar"),
//				HttpMethod:        pulumi.String("POST"),
//				HttpRequestBody:   pulumi.String(fmt.Sprintf("{\n  \"key\": \"Value\",\n}\n")),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import boundary:index/boundaryCredentialLibraryVault:BoundaryCredentialLibraryVault foo <my-id>
//
// ```
type BoundaryCredentialLibraryVault struct {
	pulumi.CustomResourceState

	// The ID of the credential store that this library belongs to.
	CredentialStoreId pulumi.StringOutput `pulumi:"credentialStoreId"`
	// The type of credential the library generates.
	CredentialType pulumi.StringPtrOutput `pulumi:"credentialType"`
	// The Vault credential library description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'
	HttpMethod pulumi.StringPtrOutput `pulumi:"httpMethod"`
	// The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `httpMethod` is set to `POST`.
	HttpRequestBody pulumi.StringPtrOutput `pulumi:"httpRequestBody"`
	// The Vault credential library name. Defaults to the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The path in Vault to request credentials from.
	Path pulumi.StringOutput `pulumi:"path"`
}

// NewBoundaryCredentialLibraryVault registers a new resource with the given unique name, arguments, and options.
func NewBoundaryCredentialLibraryVault(ctx *pulumi.Context,
	name string, args *BoundaryCredentialLibraryVaultArgs, opts ...pulumi.ResourceOption) (*BoundaryCredentialLibraryVault, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CredentialStoreId == nil {
		return nil, errors.New("invalid value for required argument 'CredentialStoreId'")
	}
	if args.Path == nil {
		return nil, errors.New("invalid value for required argument 'Path'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BoundaryCredentialLibraryVault
	err := ctx.RegisterResource("boundary:index/boundaryCredentialLibraryVault:BoundaryCredentialLibraryVault", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBoundaryCredentialLibraryVault gets an existing BoundaryCredentialLibraryVault resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBoundaryCredentialLibraryVault(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BoundaryCredentialLibraryVaultState, opts ...pulumi.ResourceOption) (*BoundaryCredentialLibraryVault, error) {
	var resource BoundaryCredentialLibraryVault
	err := ctx.ReadResource("boundary:index/boundaryCredentialLibraryVault:BoundaryCredentialLibraryVault", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BoundaryCredentialLibraryVault resources.
type boundaryCredentialLibraryVaultState struct {
	// The ID of the credential store that this library belongs to.
	CredentialStoreId *string `pulumi:"credentialStoreId"`
	// The type of credential the library generates.
	CredentialType *string `pulumi:"credentialType"`
	// The Vault credential library description.
	Description *string `pulumi:"description"`
	// The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'
	HttpMethod *string `pulumi:"httpMethod"`
	// The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `httpMethod` is set to `POST`.
	HttpRequestBody *string `pulumi:"httpRequestBody"`
	// The Vault credential library name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The path in Vault to request credentials from.
	Path *string `pulumi:"path"`
}

type BoundaryCredentialLibraryVaultState struct {
	// The ID of the credential store that this library belongs to.
	CredentialStoreId pulumi.StringPtrInput
	// The type of credential the library generates.
	CredentialType pulumi.StringPtrInput
	// The Vault credential library description.
	Description pulumi.StringPtrInput
	// The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'
	HttpMethod pulumi.StringPtrInput
	// The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `httpMethod` is set to `POST`.
	HttpRequestBody pulumi.StringPtrInput
	// The Vault credential library name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The path in Vault to request credentials from.
	Path pulumi.StringPtrInput
}

func (BoundaryCredentialLibraryVaultState) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryCredentialLibraryVaultState)(nil)).Elem()
}

type boundaryCredentialLibraryVaultArgs struct {
	// The ID of the credential store that this library belongs to.
	CredentialStoreId string `pulumi:"credentialStoreId"`
	// The type of credential the library generates.
	CredentialType *string `pulumi:"credentialType"`
	// The Vault credential library description.
	Description *string `pulumi:"description"`
	// The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'
	HttpMethod *string `pulumi:"httpMethod"`
	// The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `httpMethod` is set to `POST`.
	HttpRequestBody *string `pulumi:"httpRequestBody"`
	// The Vault credential library name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The path in Vault to request credentials from.
	Path string `pulumi:"path"`
}

// The set of arguments for constructing a BoundaryCredentialLibraryVault resource.
type BoundaryCredentialLibraryVaultArgs struct {
	// The ID of the credential store that this library belongs to.
	CredentialStoreId pulumi.StringInput
	// The type of credential the library generates.
	CredentialType pulumi.StringPtrInput
	// The Vault credential library description.
	Description pulumi.StringPtrInput
	// The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'
	HttpMethod pulumi.StringPtrInput
	// The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `httpMethod` is set to `POST`.
	HttpRequestBody pulumi.StringPtrInput
	// The Vault credential library name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The path in Vault to request credentials from.
	Path pulumi.StringInput
}

func (BoundaryCredentialLibraryVaultArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryCredentialLibraryVaultArgs)(nil)).Elem()
}

type BoundaryCredentialLibraryVaultInput interface {
	pulumi.Input

	ToBoundaryCredentialLibraryVaultOutput() BoundaryCredentialLibraryVaultOutput
	ToBoundaryCredentialLibraryVaultOutputWithContext(ctx context.Context) BoundaryCredentialLibraryVaultOutput
}

func (*BoundaryCredentialLibraryVault) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryCredentialLibraryVault)(nil)).Elem()
}

func (i *BoundaryCredentialLibraryVault) ToBoundaryCredentialLibraryVaultOutput() BoundaryCredentialLibraryVaultOutput {
	return i.ToBoundaryCredentialLibraryVaultOutputWithContext(context.Background())
}

func (i *BoundaryCredentialLibraryVault) ToBoundaryCredentialLibraryVaultOutputWithContext(ctx context.Context) BoundaryCredentialLibraryVaultOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryCredentialLibraryVaultOutput)
}

// BoundaryCredentialLibraryVaultArrayInput is an input type that accepts BoundaryCredentialLibraryVaultArray and BoundaryCredentialLibraryVaultArrayOutput values.
// You can construct a concrete instance of `BoundaryCredentialLibraryVaultArrayInput` via:
//
//	BoundaryCredentialLibraryVaultArray{ BoundaryCredentialLibraryVaultArgs{...} }
type BoundaryCredentialLibraryVaultArrayInput interface {
	pulumi.Input

	ToBoundaryCredentialLibraryVaultArrayOutput() BoundaryCredentialLibraryVaultArrayOutput
	ToBoundaryCredentialLibraryVaultArrayOutputWithContext(context.Context) BoundaryCredentialLibraryVaultArrayOutput
}

type BoundaryCredentialLibraryVaultArray []BoundaryCredentialLibraryVaultInput

func (BoundaryCredentialLibraryVaultArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryCredentialLibraryVault)(nil)).Elem()
}

func (i BoundaryCredentialLibraryVaultArray) ToBoundaryCredentialLibraryVaultArrayOutput() BoundaryCredentialLibraryVaultArrayOutput {
	return i.ToBoundaryCredentialLibraryVaultArrayOutputWithContext(context.Background())
}

func (i BoundaryCredentialLibraryVaultArray) ToBoundaryCredentialLibraryVaultArrayOutputWithContext(ctx context.Context) BoundaryCredentialLibraryVaultArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryCredentialLibraryVaultArrayOutput)
}

// BoundaryCredentialLibraryVaultMapInput is an input type that accepts BoundaryCredentialLibraryVaultMap and BoundaryCredentialLibraryVaultMapOutput values.
// You can construct a concrete instance of `BoundaryCredentialLibraryVaultMapInput` via:
//
//	BoundaryCredentialLibraryVaultMap{ "key": BoundaryCredentialLibraryVaultArgs{...} }
type BoundaryCredentialLibraryVaultMapInput interface {
	pulumi.Input

	ToBoundaryCredentialLibraryVaultMapOutput() BoundaryCredentialLibraryVaultMapOutput
	ToBoundaryCredentialLibraryVaultMapOutputWithContext(context.Context) BoundaryCredentialLibraryVaultMapOutput
}

type BoundaryCredentialLibraryVaultMap map[string]BoundaryCredentialLibraryVaultInput

func (BoundaryCredentialLibraryVaultMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryCredentialLibraryVault)(nil)).Elem()
}

func (i BoundaryCredentialLibraryVaultMap) ToBoundaryCredentialLibraryVaultMapOutput() BoundaryCredentialLibraryVaultMapOutput {
	return i.ToBoundaryCredentialLibraryVaultMapOutputWithContext(context.Background())
}

func (i BoundaryCredentialLibraryVaultMap) ToBoundaryCredentialLibraryVaultMapOutputWithContext(ctx context.Context) BoundaryCredentialLibraryVaultMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryCredentialLibraryVaultMapOutput)
}

type BoundaryCredentialLibraryVaultOutput struct{ *pulumi.OutputState }

func (BoundaryCredentialLibraryVaultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryCredentialLibraryVault)(nil)).Elem()
}

func (o BoundaryCredentialLibraryVaultOutput) ToBoundaryCredentialLibraryVaultOutput() BoundaryCredentialLibraryVaultOutput {
	return o
}

func (o BoundaryCredentialLibraryVaultOutput) ToBoundaryCredentialLibraryVaultOutputWithContext(ctx context.Context) BoundaryCredentialLibraryVaultOutput {
	return o
}

// The ID of the credential store that this library belongs to.
func (o BoundaryCredentialLibraryVaultOutput) CredentialStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCredentialLibraryVault) pulumi.StringOutput { return v.CredentialStoreId }).(pulumi.StringOutput)
}

// The type of credential the library generates.
func (o BoundaryCredentialLibraryVaultOutput) CredentialType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryCredentialLibraryVault) pulumi.StringPtrOutput { return v.CredentialType }).(pulumi.StringPtrOutput)
}

// The Vault credential library description.
func (o BoundaryCredentialLibraryVaultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryCredentialLibraryVault) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'
func (o BoundaryCredentialLibraryVaultOutput) HttpMethod() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryCredentialLibraryVault) pulumi.StringPtrOutput { return v.HttpMethod }).(pulumi.StringPtrOutput)
}

// The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `httpMethod` is set to `POST`.
func (o BoundaryCredentialLibraryVaultOutput) HttpRequestBody() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryCredentialLibraryVault) pulumi.StringPtrOutput { return v.HttpRequestBody }).(pulumi.StringPtrOutput)
}

// The Vault credential library name. Defaults to the resource name.
func (o BoundaryCredentialLibraryVaultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCredentialLibraryVault) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The path in Vault to request credentials from.
func (o BoundaryCredentialLibraryVaultOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCredentialLibraryVault) pulumi.StringOutput { return v.Path }).(pulumi.StringOutput)
}

type BoundaryCredentialLibraryVaultArrayOutput struct{ *pulumi.OutputState }

func (BoundaryCredentialLibraryVaultArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryCredentialLibraryVault)(nil)).Elem()
}

func (o BoundaryCredentialLibraryVaultArrayOutput) ToBoundaryCredentialLibraryVaultArrayOutput() BoundaryCredentialLibraryVaultArrayOutput {
	return o
}

func (o BoundaryCredentialLibraryVaultArrayOutput) ToBoundaryCredentialLibraryVaultArrayOutputWithContext(ctx context.Context) BoundaryCredentialLibraryVaultArrayOutput {
	return o
}

func (o BoundaryCredentialLibraryVaultArrayOutput) Index(i pulumi.IntInput) BoundaryCredentialLibraryVaultOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BoundaryCredentialLibraryVault {
		return vs[0].([]*BoundaryCredentialLibraryVault)[vs[1].(int)]
	}).(BoundaryCredentialLibraryVaultOutput)
}

type BoundaryCredentialLibraryVaultMapOutput struct{ *pulumi.OutputState }

func (BoundaryCredentialLibraryVaultMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryCredentialLibraryVault)(nil)).Elem()
}

func (o BoundaryCredentialLibraryVaultMapOutput) ToBoundaryCredentialLibraryVaultMapOutput() BoundaryCredentialLibraryVaultMapOutput {
	return o
}

func (o BoundaryCredentialLibraryVaultMapOutput) ToBoundaryCredentialLibraryVaultMapOutputWithContext(ctx context.Context) BoundaryCredentialLibraryVaultMapOutput {
	return o
}

func (o BoundaryCredentialLibraryVaultMapOutput) MapIndex(k pulumi.StringInput) BoundaryCredentialLibraryVaultOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BoundaryCredentialLibraryVault {
		return vs[0].(map[string]*BoundaryCredentialLibraryVault)[vs[1].(string)]
	}).(BoundaryCredentialLibraryVaultOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryCredentialLibraryVaultInput)(nil)).Elem(), &BoundaryCredentialLibraryVault{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryCredentialLibraryVaultArrayInput)(nil)).Elem(), BoundaryCredentialLibraryVaultArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryCredentialLibraryVaultMapInput)(nil)).Elem(), BoundaryCredentialLibraryVaultMap{})
	pulumi.RegisterOutputType(BoundaryCredentialLibraryVaultOutput{})
	pulumi.RegisterOutputType(BoundaryCredentialLibraryVaultArrayOutput{})
	pulumi.RegisterOutputType(BoundaryCredentialLibraryVaultMapOutput{})
}
