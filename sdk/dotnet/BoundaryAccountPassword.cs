// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Katasec.Boundary
{
    /// <summary>
    /// The account resource allows you to configure a Boundary account.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Boundary = Katasec.Boundary;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var org = new Boundary.BoundaryScope("org", new()
    ///     {
    ///         Description = "My first scope!",
    ///         ScopeId = "global",
    ///         AutoCreateAdminRole = true,
    ///         AutoCreateDefaultRole = true,
    ///     });
    /// 
    ///     var password = new Boundary.BoundaryAuthMethod("password", new()
    ///     {
    ///         ScopeId = org.Id,
    ///         Type = "password",
    ///     });
    /// 
    ///     var jeff = new Boundary.BoundaryAccountPassword("jeff", new()
    ///     {
    ///         AuthMethodId = password.Id,
    ///         Type = "password",
    ///         LoginName = "jeff",
    ///         Password = "$uper$ecure",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import boundary:index/boundaryAccountPassword:BoundaryAccountPassword foo &lt;my-id&gt;
    /// ```
    /// </summary>
    [BoundaryResourceType("boundary:index/boundaryAccountPassword:BoundaryAccountPassword")]
    public partial class BoundaryAccountPassword : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The resource ID for the auth method.
        /// </summary>
        [Output("authMethodId")]
        public Output<string> AuthMethodId { get; private set; } = null!;

        /// <summary>
        /// The account description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The login name for this account.
        /// </summary>
        [Output("loginName")]
        public Output<string?> LoginName { get; private set; } = null!;

        /// <summary>
        /// The account name. Defaults to the resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The account password. Only set on create, changes will not be reflected when updating account.
        /// </summary>
        [Output("password")]
        public Output<string?> Password { get; private set; } = null!;

        /// <summary>
        /// The resource type.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a BoundaryAccountPassword resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BoundaryAccountPassword(string name, BoundaryAccountPasswordArgs args, CustomResourceOptions? options = null)
            : base("boundary:index/boundaryAccountPassword:BoundaryAccountPassword", name, args ?? new BoundaryAccountPasswordArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BoundaryAccountPassword(string name, Input<string> id, BoundaryAccountPasswordState? state = null, CustomResourceOptions? options = null)
            : base("boundary:index/boundaryAccountPassword:BoundaryAccountPassword", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/katasec/pulumi-boundary/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BoundaryAccountPassword resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BoundaryAccountPassword Get(string name, Input<string> id, BoundaryAccountPasswordState? state = null, CustomResourceOptions? options = null)
        {
            return new BoundaryAccountPassword(name, id, state, options);
        }
    }

    public sealed class BoundaryAccountPasswordArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource ID for the auth method.
        /// </summary>
        [Input("authMethodId", required: true)]
        public Input<string> AuthMethodId { get; set; } = null!;

        /// <summary>
        /// The account description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The login name for this account.
        /// </summary>
        [Input("loginName")]
        public Input<string>? LoginName { get; set; }

        /// <summary>
        /// The account name. Defaults to the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The account password. Only set on create, changes will not be reflected when updating account.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The resource type.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public BoundaryAccountPasswordArgs()
        {
        }
        public static new BoundaryAccountPasswordArgs Empty => new BoundaryAccountPasswordArgs();
    }

    public sealed class BoundaryAccountPasswordState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource ID for the auth method.
        /// </summary>
        [Input("authMethodId")]
        public Input<string>? AuthMethodId { get; set; }

        /// <summary>
        /// The account description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The login name for this account.
        /// </summary>
        [Input("loginName")]
        public Input<string>? LoginName { get; set; }

        /// <summary>
        /// The account name. Defaults to the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The account password. Only set on create, changes will not be reflected when updating account.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// The resource type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public BoundaryAccountPasswordState()
        {
        }
        public static new BoundaryAccountPasswordState Empty => new BoundaryAccountPasswordState();
    }
}
