# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = ['BoundaryHostSetPluginArgs', 'BoundaryHostSetPlugin']

@pulumi.input_type
class BoundaryHostSetPluginArgs:
    def __init__(__self__, *,
                 host_catalog_id: pulumi.Input[str],
                 attributes_json: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 preferred_endpoints: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 sync_interval_seconds: Optional[pulumi.Input[int]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a BoundaryHostSetPlugin resource.
        :param pulumi.Input[str] host_catalog_id: The catalog for the host set.
        :param pulumi.Input[str] attributes_json: The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
        :param pulumi.Input[str] description: The host set description.
        :param pulumi.Input[str] name: The host set name. Defaults to the resource name.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] preferred_endpoints: The ordered list of preferred endpoints.
        :param pulumi.Input[int] sync_interval_seconds: The value to set for the sync interval seconds.
        :param pulumi.Input[str] type: The type of host set
        """
        pulumi.set(__self__, "host_catalog_id", host_catalog_id)
        if attributes_json is not None:
            pulumi.set(__self__, "attributes_json", attributes_json)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if preferred_endpoints is not None:
            pulumi.set(__self__, "preferred_endpoints", preferred_endpoints)
        if sync_interval_seconds is not None:
            pulumi.set(__self__, "sync_interval_seconds", sync_interval_seconds)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="hostCatalogId")
    def host_catalog_id(self) -> pulumi.Input[str]:
        """
        The catalog for the host set.
        """
        return pulumi.get(self, "host_catalog_id")

    @host_catalog_id.setter
    def host_catalog_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "host_catalog_id", value)

    @property
    @pulumi.getter(name="attributesJson")
    def attributes_json(self) -> Optional[pulumi.Input[str]]:
        """
        The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
        """
        return pulumi.get(self, "attributes_json")

    @attributes_json.setter
    def attributes_json(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "attributes_json", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The host set description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The host set name. Defaults to the resource name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="preferredEndpoints")
    def preferred_endpoints(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The ordered list of preferred endpoints.
        """
        return pulumi.get(self, "preferred_endpoints")

    @preferred_endpoints.setter
    def preferred_endpoints(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "preferred_endpoints", value)

    @property
    @pulumi.getter(name="syncIntervalSeconds")
    def sync_interval_seconds(self) -> Optional[pulumi.Input[int]]:
        """
        The value to set for the sync interval seconds.
        """
        return pulumi.get(self, "sync_interval_seconds")

    @sync_interval_seconds.setter
    def sync_interval_seconds(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "sync_interval_seconds", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of host set
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


@pulumi.input_type
class _BoundaryHostSetPluginState:
    def __init__(__self__, *,
                 attributes_json: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 host_catalog_id: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 preferred_endpoints: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 sync_interval_seconds: Optional[pulumi.Input[int]] = None,
                 type: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering BoundaryHostSetPlugin resources.
        :param pulumi.Input[str] attributes_json: The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
        :param pulumi.Input[str] description: The host set description.
        :param pulumi.Input[str] host_catalog_id: The catalog for the host set.
        :param pulumi.Input[str] name: The host set name. Defaults to the resource name.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] preferred_endpoints: The ordered list of preferred endpoints.
        :param pulumi.Input[int] sync_interval_seconds: The value to set for the sync interval seconds.
        :param pulumi.Input[str] type: The type of host set
        """
        if attributes_json is not None:
            pulumi.set(__self__, "attributes_json", attributes_json)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if host_catalog_id is not None:
            pulumi.set(__self__, "host_catalog_id", host_catalog_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if preferred_endpoints is not None:
            pulumi.set(__self__, "preferred_endpoints", preferred_endpoints)
        if sync_interval_seconds is not None:
            pulumi.set(__self__, "sync_interval_seconds", sync_interval_seconds)
        if type is not None:
            pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter(name="attributesJson")
    def attributes_json(self) -> Optional[pulumi.Input[str]]:
        """
        The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
        """
        return pulumi.get(self, "attributes_json")

    @attributes_json.setter
    def attributes_json(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "attributes_json", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        The host set description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="hostCatalogId")
    def host_catalog_id(self) -> Optional[pulumi.Input[str]]:
        """
        The catalog for the host set.
        """
        return pulumi.get(self, "host_catalog_id")

    @host_catalog_id.setter
    def host_catalog_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "host_catalog_id", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        The host set name. Defaults to the resource name.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="preferredEndpoints")
    def preferred_endpoints(self) -> Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]:
        """
        The ordered list of preferred endpoints.
        """
        return pulumi.get(self, "preferred_endpoints")

    @preferred_endpoints.setter
    def preferred_endpoints(self, value: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]]):
        pulumi.set(self, "preferred_endpoints", value)

    @property
    @pulumi.getter(name="syncIntervalSeconds")
    def sync_interval_seconds(self) -> Optional[pulumi.Input[int]]:
        """
        The value to set for the sync interval seconds.
        """
        return pulumi.get(self, "sync_interval_seconds")

    @sync_interval_seconds.setter
    def sync_interval_seconds(self, value: Optional[pulumi.Input[int]]):
        pulumi.set(self, "sync_interval_seconds", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        The type of host set
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)


class BoundaryHostSetPlugin(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 attributes_json: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 host_catalog_id: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 preferred_endpoints: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 sync_interval_seconds: Optional[pulumi.Input[int]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        The host_set_plugin resource allows you to configure a Boundary host set. Host sets are always part of a host catalog, so a host catalog resource should be used inline or you should have the host catalog ID in hand to successfully configure a host set.

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] attributes_json: The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
        :param pulumi.Input[str] description: The host set description.
        :param pulumi.Input[str] host_catalog_id: The catalog for the host set.
        :param pulumi.Input[str] name: The host set name. Defaults to the resource name.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] preferred_endpoints: The ordered list of preferred endpoints.
        :param pulumi.Input[int] sync_interval_seconds: The value to set for the sync interval seconds.
        :param pulumi.Input[str] type: The type of host set
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: BoundaryHostSetPluginArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        The host_set_plugin resource allows you to configure a Boundary host set. Host sets are always part of a host catalog, so a host catalog resource should be used inline or you should have the host catalog ID in hand to successfully configure a host set.

        :param str resource_name: The name of the resource.
        :param BoundaryHostSetPluginArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(BoundaryHostSetPluginArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 attributes_json: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 host_catalog_id: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 preferred_endpoints: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
                 sync_interval_seconds: Optional[pulumi.Input[int]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = BoundaryHostSetPluginArgs.__new__(BoundaryHostSetPluginArgs)

            __props__.__dict__["attributes_json"] = attributes_json
            __props__.__dict__["description"] = description
            if host_catalog_id is None and not opts.urn:
                raise TypeError("Missing required property 'host_catalog_id'")
            __props__.__dict__["host_catalog_id"] = host_catalog_id
            __props__.__dict__["name"] = name
            __props__.__dict__["preferred_endpoints"] = preferred_endpoints
            __props__.__dict__["sync_interval_seconds"] = sync_interval_seconds
            __props__.__dict__["type"] = type
        super(BoundaryHostSetPlugin, __self__).__init__(
            'boundary:index/boundaryHostSetPlugin:BoundaryHostSetPlugin',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            attributes_json: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            host_catalog_id: Optional[pulumi.Input[str]] = None,
            name: Optional[pulumi.Input[str]] = None,
            preferred_endpoints: Optional[pulumi.Input[Sequence[pulumi.Input[str]]]] = None,
            sync_interval_seconds: Optional[pulumi.Input[int]] = None,
            type: Optional[pulumi.Input[str]] = None) -> 'BoundaryHostSetPlugin':
        """
        Get an existing BoundaryHostSetPlugin resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] attributes_json: The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
        :param pulumi.Input[str] description: The host set description.
        :param pulumi.Input[str] host_catalog_id: The catalog for the host set.
        :param pulumi.Input[str] name: The host set name. Defaults to the resource name.
        :param pulumi.Input[Sequence[pulumi.Input[str]]] preferred_endpoints: The ordered list of preferred endpoints.
        :param pulumi.Input[int] sync_interval_seconds: The value to set for the sync interval seconds.
        :param pulumi.Input[str] type: The type of host set
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _BoundaryHostSetPluginState.__new__(_BoundaryHostSetPluginState)

        __props__.__dict__["attributes_json"] = attributes_json
        __props__.__dict__["description"] = description
        __props__.__dict__["host_catalog_id"] = host_catalog_id
        __props__.__dict__["name"] = name
        __props__.__dict__["preferred_endpoints"] = preferred_endpoints
        __props__.__dict__["sync_interval_seconds"] = sync_interval_seconds
        __props__.__dict__["type"] = type
        return BoundaryHostSetPlugin(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="attributesJson")
    def attributes_json(self) -> pulumi.Output[Optional[str]]:
        """
        The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
        """
        return pulumi.get(self, "attributes_json")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        The host set description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="hostCatalogId")
    def host_catalog_id(self) -> pulumi.Output[str]:
        """
        The catalog for the host set.
        """
        return pulumi.get(self, "host_catalog_id")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        The host set name. Defaults to the resource name.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="preferredEndpoints")
    def preferred_endpoints(self) -> pulumi.Output[Optional[Sequence[str]]]:
        """
        The ordered list of preferred endpoints.
        """
        return pulumi.get(self, "preferred_endpoints")

    @property
    @pulumi.getter(name="syncIntervalSeconds")
    def sync_interval_seconds(self) -> pulumi.Output[Optional[int]]:
        """
        The value to set for the sync interval seconds.
        """
        return pulumi.get(self, "sync_interval_seconds")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[Optional[str]]:
        """
        The type of host set
        """
        return pulumi.get(self, "type")

