// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The host catalog resource allows you to configure a Boundary plugin-type host catalog. Host catalogs are always part of a project, so a project resource should be used inline or you should have the project ID in hand to successfully configure a host catalog.
 */
export class BoundaryHostCatalogPlugin extends pulumi.CustomResource {
    /**
     * Get an existing BoundaryHostCatalogPlugin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BoundaryHostCatalogPluginState, opts?: pulumi.CustomResourceOptions): BoundaryHostCatalogPlugin {
        return new BoundaryHostCatalogPlugin(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'boundary:index/boundaryHostCatalogPlugin:BoundaryHostCatalogPlugin';

    /**
     * Returns true if the given object is an instance of BoundaryHostCatalogPlugin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BoundaryHostCatalogPlugin {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BoundaryHostCatalogPlugin.__pulumiType;
    }

    /**
     * The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
     */
    public readonly attributesJson!: pulumi.Output<string | undefined>;
    /**
     * The host catalog description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Internal only. Used to force update so that we can always check the value of secrets.
     */
    public readonly internalForceUpdate!: pulumi.Output<string>;
    /**
     * Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
     */
    public readonly internalHmacUsedForSecretsConfigHmac!: pulumi.Output<string>;
    /**
     * Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
     */
    public readonly internalSecretsConfigHmac!: pulumi.Output<string>;
    /**
     * The host catalog name. Defaults to the resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the plugin that should back the resource. This or pluginName must be defined.
     */
    public readonly pluginId!: pulumi.Output<string>;
    /**
     * The name of the plugin that should back the resource. This or pluginId must be defined.
     */
    public readonly pluginName!: pulumi.Output<string>;
    /**
     * The scope ID in which the resource is created.
     */
    public readonly scopeId!: pulumi.Output<string>;
    /**
     * The HMAC'd secrets value returned from the server.
     */
    public readonly secretsHmac!: pulumi.Output<string>;
    /**
     * The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
     */
    public readonly secretsJson!: pulumi.Output<string | undefined>;

    /**
     * Create a BoundaryHostCatalogPlugin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BoundaryHostCatalogPluginArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BoundaryHostCatalogPluginArgs | BoundaryHostCatalogPluginState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BoundaryHostCatalogPluginState | undefined;
            resourceInputs["attributesJson"] = state ? state.attributesJson : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["internalForceUpdate"] = state ? state.internalForceUpdate : undefined;
            resourceInputs["internalHmacUsedForSecretsConfigHmac"] = state ? state.internalHmacUsedForSecretsConfigHmac : undefined;
            resourceInputs["internalSecretsConfigHmac"] = state ? state.internalSecretsConfigHmac : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pluginId"] = state ? state.pluginId : undefined;
            resourceInputs["pluginName"] = state ? state.pluginName : undefined;
            resourceInputs["scopeId"] = state ? state.scopeId : undefined;
            resourceInputs["secretsHmac"] = state ? state.secretsHmac : undefined;
            resourceInputs["secretsJson"] = state ? state.secretsJson : undefined;
        } else {
            const args = argsOrState as BoundaryHostCatalogPluginArgs | undefined;
            if ((!args || args.scopeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scopeId'");
            }
            resourceInputs["attributesJson"] = args ? args.attributesJson : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["internalForceUpdate"] = args ? args.internalForceUpdate : undefined;
            resourceInputs["internalHmacUsedForSecretsConfigHmac"] = args ? args.internalHmacUsedForSecretsConfigHmac : undefined;
            resourceInputs["internalSecretsConfigHmac"] = args ? args.internalSecretsConfigHmac : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pluginId"] = args ? args.pluginId : undefined;
            resourceInputs["pluginName"] = args ? args.pluginName : undefined;
            resourceInputs["scopeId"] = args ? args.scopeId : undefined;
            resourceInputs["secretsHmac"] = args ? args.secretsHmac : undefined;
            resourceInputs["secretsJson"] = args ? args.secretsJson : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BoundaryHostCatalogPlugin.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BoundaryHostCatalogPlugin resources.
 */
export interface BoundaryHostCatalogPluginState {
    /**
     * The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
     */
    attributesJson?: pulumi.Input<string>;
    /**
     * The host catalog description.
     */
    description?: pulumi.Input<string>;
    /**
     * Internal only. Used to force update so that we can always check the value of secrets.
     */
    internalForceUpdate?: pulumi.Input<string>;
    /**
     * Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
     */
    internalHmacUsedForSecretsConfigHmac?: pulumi.Input<string>;
    /**
     * Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
     */
    internalSecretsConfigHmac?: pulumi.Input<string>;
    /**
     * The host catalog name. Defaults to the resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the plugin that should back the resource. This or pluginName must be defined.
     */
    pluginId?: pulumi.Input<string>;
    /**
     * The name of the plugin that should back the resource. This or pluginId must be defined.
     */
    pluginName?: pulumi.Input<string>;
    /**
     * The scope ID in which the resource is created.
     */
    scopeId?: pulumi.Input<string>;
    /**
     * The HMAC'd secrets value returned from the server.
     */
    secretsHmac?: pulumi.Input<string>;
    /**
     * The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
     */
    secretsJson?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BoundaryHostCatalogPlugin resource.
 */
export interface BoundaryHostCatalogPluginArgs {
    /**
     * The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
     */
    attributesJson?: pulumi.Input<string>;
    /**
     * The host catalog description.
     */
    description?: pulumi.Input<string>;
    /**
     * Internal only. Used to force update so that we can always check the value of secrets.
     */
    internalForceUpdate?: pulumi.Input<string>;
    /**
     * Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
     */
    internalHmacUsedForSecretsConfigHmac?: pulumi.Input<string>;
    /**
     * Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
     */
    internalSecretsConfigHmac?: pulumi.Input<string>;
    /**
     * The host catalog name. Defaults to the resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the plugin that should back the resource. This or pluginName must be defined.
     */
    pluginId?: pulumi.Input<string>;
    /**
     * The name of the plugin that should back the resource. This or pluginId must be defined.
     */
    pluginName?: pulumi.Input<string>;
    /**
     * The scope ID in which the resource is created.
     */
    scopeId: pulumi.Input<string>;
    /**
     * The HMAC'd secrets value returned from the server.
     */
    secretsHmac?: pulumi.Input<string>;
    /**
     * The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
     */
    secretsJson?: pulumi.Input<string>;
}
