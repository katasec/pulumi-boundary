# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

import types

__config__ = pulumi.Config('boundary')


class _ExportableConfig(types.ModuleType):
    @property
    def addr(self) -> Optional[str]:
        """
        The base url of the Boundary API, e.g. "http://127.0.0.1:9200". If not set, it will be read from the "BOUNDARY_ADDR" env
        var.
        """
        return __config__.get('addr')

    @property
    def auth_method_id(self) -> Optional[str]:
        """
        The auth method ID e.g. ampw_1234567890
        """
        return __config__.get('authMethodId')

    @property
    def password_auth_method_login_name(self) -> Optional[str]:
        """
        The auth method login name for password-style auth methods
        """
        return __config__.get('passwordAuthMethodLoginName')

    @property
    def password_auth_method_password(self) -> Optional[str]:
        """
        The auth method password for password-style auth methods
        """
        return __config__.get('passwordAuthMethodPassword')

    @property
    def recovery_kms_hcl(self) -> Optional[str]:
        """
        Can be a heredoc string or a path on disk. If set, the string/file will be parsed as HCL and used with the recovery KMS
        mechanism. While this is set, it will override any other authentication information; the KMS mechanism will always be
        used. See Boundary's KMS docs for examples: https://boundaryproject.io/docs/configuration/kms
        """
        return __config__.get('recoveryKmsHcl')

    @property
    def tls_insecure(self) -> Optional[bool]:
        """
        When set to true, does not validate the Boundary API endpoint certificate
        """
        return __config__.get_bool('tlsInsecure')

    @property
    def token(self) -> Optional[str]:
        """
        The Boundary token to use, as a string or path on disk containing just the string. If set, the token read here will be
        used in place of authenticating with the auth method specified in "auth_method_id", although the recovery KMS mechanism
        will still override this. Can also be set with the BOUNDARY_TOKEN environment variable.
        """
        return __config__.get('token')

