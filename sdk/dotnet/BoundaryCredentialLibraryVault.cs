// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Katasec.Boundary
{
    /// <summary>
    /// The credential library for Vault resource allows you to configure a Boundary credential library for Vault.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Boundary = Katasec.Boundary;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var org = new Boundary.BoundaryScope("org", new()
    ///     {
    ///         Description = "My first scope!",
    ///         ScopeId = "global",
    ///         AutoCreateAdminRole = true,
    ///         AutoCreateDefaultRole = true,
    ///     });
    /// 
    ///     var project = new Boundary.BoundaryScope("project", new()
    ///     {
    ///         Description = "My first scope!",
    ///         ScopeId = org.Id,
    ///         AutoCreateAdminRole = true,
    ///     });
    /// 
    ///     var fooBoundaryCredentialStoreVault = new Boundary.BoundaryCredentialStoreVault("fooBoundaryCredentialStoreVault", new()
    ///     {
    ///         Description = "My first Vault credential store!",
    ///         Address = "http://127.0.0.1:8200",
    ///         Token = "s.0ufRo6XEGU2jOqnIr7OlFYP5",
    ///         ScopeId = project.Id,
    ///     });
    /// 
    ///     var fooBoundaryCredentialLibraryVault = new Boundary.BoundaryCredentialLibraryVault("fooBoundaryCredentialLibraryVault", new()
    ///     {
    ///         Description = "My first Vault credential library!",
    ///         CredentialStoreId = fooBoundaryCredentialStoreVault.Id,
    ///         Path = "my/secret/foo",
    ///         HttpMethod = "GET",
    ///     });
    /// 
    ///     var bar = new Boundary.BoundaryCredentialLibraryVault("bar", new()
    ///     {
    ///         Description = "My second Vault credential library!",
    ///         CredentialStoreId = fooBoundaryCredentialStoreVault.Id,
    ///         Path = "my/secret/bar",
    ///         HttpMethod = "POST",
    ///         HttpRequestBody = @"{
    ///   ""key"": ""Value"",
    /// }
    /// ",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import boundary:index/boundaryCredentialLibraryVault:BoundaryCredentialLibraryVault foo &lt;my-id&gt;
    /// ```
    /// </summary>
    [BoundaryResourceType("boundary:index/boundaryCredentialLibraryVault:BoundaryCredentialLibraryVault")]
    public partial class BoundaryCredentialLibraryVault : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the credential store that this library belongs to.
        /// </summary>
        [Output("credentialStoreId")]
        public Output<string> CredentialStoreId { get; private set; } = null!;

        /// <summary>
        /// The type of credential the library generates.
        /// </summary>
        [Output("credentialType")]
        public Output<string?> CredentialType { get; private set; } = null!;

        /// <summary>
        /// The Vault credential library description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'
        /// </summary>
        [Output("httpMethod")]
        public Output<string?> HttpMethod { get; private set; } = null!;

        /// <summary>
        /// The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `http_method` is set to `POST`.
        /// </summary>
        [Output("httpRequestBody")]
        public Output<string?> HttpRequestBody { get; private set; } = null!;

        /// <summary>
        /// The Vault credential library name. Defaults to the resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The path in Vault to request credentials from.
        /// </summary>
        [Output("path")]
        public Output<string> Path { get; private set; } = null!;


        /// <summary>
        /// Create a BoundaryCredentialLibraryVault resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BoundaryCredentialLibraryVault(string name, BoundaryCredentialLibraryVaultArgs args, CustomResourceOptions? options = null)
            : base("boundary:index/boundaryCredentialLibraryVault:BoundaryCredentialLibraryVault", name, args ?? new BoundaryCredentialLibraryVaultArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BoundaryCredentialLibraryVault(string name, Input<string> id, BoundaryCredentialLibraryVaultState? state = null, CustomResourceOptions? options = null)
            : base("boundary:index/boundaryCredentialLibraryVault:BoundaryCredentialLibraryVault", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/katasec/pulumi-boundary/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BoundaryCredentialLibraryVault resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BoundaryCredentialLibraryVault Get(string name, Input<string> id, BoundaryCredentialLibraryVaultState? state = null, CustomResourceOptions? options = null)
        {
            return new BoundaryCredentialLibraryVault(name, id, state, options);
        }
    }

    public sealed class BoundaryCredentialLibraryVaultArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the credential store that this library belongs to.
        /// </summary>
        [Input("credentialStoreId", required: true)]
        public Input<string> CredentialStoreId { get; set; } = null!;

        /// <summary>
        /// The type of credential the library generates.
        /// </summary>
        [Input("credentialType")]
        public Input<string>? CredentialType { get; set; }

        /// <summary>
        /// The Vault credential library description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'
        /// </summary>
        [Input("httpMethod")]
        public Input<string>? HttpMethod { get; set; }

        /// <summary>
        /// The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `http_method` is set to `POST`.
        /// </summary>
        [Input("httpRequestBody")]
        public Input<string>? HttpRequestBody { get; set; }

        /// <summary>
        /// The Vault credential library name. Defaults to the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The path in Vault to request credentials from.
        /// </summary>
        [Input("path", required: true)]
        public Input<string> Path { get; set; } = null!;

        public BoundaryCredentialLibraryVaultArgs()
        {
        }
        public static new BoundaryCredentialLibraryVaultArgs Empty => new BoundaryCredentialLibraryVaultArgs();
    }

    public sealed class BoundaryCredentialLibraryVaultState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the credential store that this library belongs to.
        /// </summary>
        [Input("credentialStoreId")]
        public Input<string>? CredentialStoreId { get; set; }

        /// <summary>
        /// The type of credential the library generates.
        /// </summary>
        [Input("credentialType")]
        public Input<string>? CredentialType { get; set; }

        /// <summary>
        /// The Vault credential library description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'
        /// </summary>
        [Input("httpMethod")]
        public Input<string>? HttpMethod { get; set; }

        /// <summary>
        /// The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `http_method` is set to `POST`.
        /// </summary>
        [Input("httpRequestBody")]
        public Input<string>? HttpRequestBody { get; set; }

        /// <summary>
        /// The Vault credential library name. Defaults to the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The path in Vault to request credentials from.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        public BoundaryCredentialLibraryVaultState()
        {
        }
        public static new BoundaryCredentialLibraryVaultState Empty => new BoundaryCredentialLibraryVaultState();
    }
}
