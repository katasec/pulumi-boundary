// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The target resource allows you to configure a Boundary target.
//
// ## Import
//
// ```sh
//
//	$ pulumi import boundary:index/boundaryTarget:BoundaryTarget foo <my-id>
//
// ```
type BoundaryTarget struct {
	pulumi.CustomResourceState

	// A list of brokered credential source ID's.
	BrokeredCredentialSourceIds pulumi.StringArrayOutput `pulumi:"brokeredCredentialSourceIds"`
	// The default port for this target.
	DefaultPort pulumi.IntPtrOutput `pulumi:"defaultPort"`
	// The target description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// A list of host source ID's.
	HostSourceIds pulumi.StringArrayOutput `pulumi:"hostSourceIds"`
	// A list of injected application credential source ID's.
	InjectedApplicationCredentialSourceIds pulumi.StringArrayOutput `pulumi:"injectedApplicationCredentialSourceIds"`
	// The target name. Defaults to the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The scope ID in which the resource is created. Defaults to the provider's `defaultScope` if unset.
	ScopeId                pulumi.StringOutput `pulumi:"scopeId"`
	SessionConnectionLimit pulumi.IntOutput    `pulumi:"sessionConnectionLimit"`
	SessionMaxSeconds      pulumi.IntOutput    `pulumi:"sessionMaxSeconds"`
	// The target resource type.
	Type pulumi.StringOutput `pulumi:"type"`
	// Boolean expression to filter the workers for this target
	WorkerFilter pulumi.StringPtrOutput `pulumi:"workerFilter"`
}

// NewBoundaryTarget registers a new resource with the given unique name, arguments, and options.
func NewBoundaryTarget(ctx *pulumi.Context,
	name string, args *BoundaryTargetArgs, opts ...pulumi.ResourceOption) (*BoundaryTarget, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ScopeId == nil {
		return nil, errors.New("invalid value for required argument 'ScopeId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BoundaryTarget
	err := ctx.RegisterResource("boundary:index/boundaryTarget:BoundaryTarget", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBoundaryTarget gets an existing BoundaryTarget resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBoundaryTarget(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BoundaryTargetState, opts ...pulumi.ResourceOption) (*BoundaryTarget, error) {
	var resource BoundaryTarget
	err := ctx.ReadResource("boundary:index/boundaryTarget:BoundaryTarget", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BoundaryTarget resources.
type boundaryTargetState struct {
	// A list of brokered credential source ID's.
	BrokeredCredentialSourceIds []string `pulumi:"brokeredCredentialSourceIds"`
	// The default port for this target.
	DefaultPort *int `pulumi:"defaultPort"`
	// The target description.
	Description *string `pulumi:"description"`
	// A list of host source ID's.
	HostSourceIds []string `pulumi:"hostSourceIds"`
	// A list of injected application credential source ID's.
	InjectedApplicationCredentialSourceIds []string `pulumi:"injectedApplicationCredentialSourceIds"`
	// The target name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The scope ID in which the resource is created. Defaults to the provider's `defaultScope` if unset.
	ScopeId                *string `pulumi:"scopeId"`
	SessionConnectionLimit *int    `pulumi:"sessionConnectionLimit"`
	SessionMaxSeconds      *int    `pulumi:"sessionMaxSeconds"`
	// The target resource type.
	Type *string `pulumi:"type"`
	// Boolean expression to filter the workers for this target
	WorkerFilter *string `pulumi:"workerFilter"`
}

type BoundaryTargetState struct {
	// A list of brokered credential source ID's.
	BrokeredCredentialSourceIds pulumi.StringArrayInput
	// The default port for this target.
	DefaultPort pulumi.IntPtrInput
	// The target description.
	Description pulumi.StringPtrInput
	// A list of host source ID's.
	HostSourceIds pulumi.StringArrayInput
	// A list of injected application credential source ID's.
	InjectedApplicationCredentialSourceIds pulumi.StringArrayInput
	// The target name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The scope ID in which the resource is created. Defaults to the provider's `defaultScope` if unset.
	ScopeId                pulumi.StringPtrInput
	SessionConnectionLimit pulumi.IntPtrInput
	SessionMaxSeconds      pulumi.IntPtrInput
	// The target resource type.
	Type pulumi.StringPtrInput
	// Boolean expression to filter the workers for this target
	WorkerFilter pulumi.StringPtrInput
}

func (BoundaryTargetState) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryTargetState)(nil)).Elem()
}

type boundaryTargetArgs struct {
	// A list of brokered credential source ID's.
	BrokeredCredentialSourceIds []string `pulumi:"brokeredCredentialSourceIds"`
	// The default port for this target.
	DefaultPort *int `pulumi:"defaultPort"`
	// The target description.
	Description *string `pulumi:"description"`
	// A list of host source ID's.
	HostSourceIds []string `pulumi:"hostSourceIds"`
	// A list of injected application credential source ID's.
	InjectedApplicationCredentialSourceIds []string `pulumi:"injectedApplicationCredentialSourceIds"`
	// The target name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The scope ID in which the resource is created. Defaults to the provider's `defaultScope` if unset.
	ScopeId                string `pulumi:"scopeId"`
	SessionConnectionLimit *int   `pulumi:"sessionConnectionLimit"`
	SessionMaxSeconds      *int   `pulumi:"sessionMaxSeconds"`
	// The target resource type.
	Type string `pulumi:"type"`
	// Boolean expression to filter the workers for this target
	WorkerFilter *string `pulumi:"workerFilter"`
}

// The set of arguments for constructing a BoundaryTarget resource.
type BoundaryTargetArgs struct {
	// A list of brokered credential source ID's.
	BrokeredCredentialSourceIds pulumi.StringArrayInput
	// The default port for this target.
	DefaultPort pulumi.IntPtrInput
	// The target description.
	Description pulumi.StringPtrInput
	// A list of host source ID's.
	HostSourceIds pulumi.StringArrayInput
	// A list of injected application credential source ID's.
	InjectedApplicationCredentialSourceIds pulumi.StringArrayInput
	// The target name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The scope ID in which the resource is created. Defaults to the provider's `defaultScope` if unset.
	ScopeId                pulumi.StringInput
	SessionConnectionLimit pulumi.IntPtrInput
	SessionMaxSeconds      pulumi.IntPtrInput
	// The target resource type.
	Type pulumi.StringInput
	// Boolean expression to filter the workers for this target
	WorkerFilter pulumi.StringPtrInput
}

func (BoundaryTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryTargetArgs)(nil)).Elem()
}

type BoundaryTargetInput interface {
	pulumi.Input

	ToBoundaryTargetOutput() BoundaryTargetOutput
	ToBoundaryTargetOutputWithContext(ctx context.Context) BoundaryTargetOutput
}

func (*BoundaryTarget) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryTarget)(nil)).Elem()
}

func (i *BoundaryTarget) ToBoundaryTargetOutput() BoundaryTargetOutput {
	return i.ToBoundaryTargetOutputWithContext(context.Background())
}

func (i *BoundaryTarget) ToBoundaryTargetOutputWithContext(ctx context.Context) BoundaryTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryTargetOutput)
}

// BoundaryTargetArrayInput is an input type that accepts BoundaryTargetArray and BoundaryTargetArrayOutput values.
// You can construct a concrete instance of `BoundaryTargetArrayInput` via:
//
//	BoundaryTargetArray{ BoundaryTargetArgs{...} }
type BoundaryTargetArrayInput interface {
	pulumi.Input

	ToBoundaryTargetArrayOutput() BoundaryTargetArrayOutput
	ToBoundaryTargetArrayOutputWithContext(context.Context) BoundaryTargetArrayOutput
}

type BoundaryTargetArray []BoundaryTargetInput

func (BoundaryTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryTarget)(nil)).Elem()
}

func (i BoundaryTargetArray) ToBoundaryTargetArrayOutput() BoundaryTargetArrayOutput {
	return i.ToBoundaryTargetArrayOutputWithContext(context.Background())
}

func (i BoundaryTargetArray) ToBoundaryTargetArrayOutputWithContext(ctx context.Context) BoundaryTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryTargetArrayOutput)
}

// BoundaryTargetMapInput is an input type that accepts BoundaryTargetMap and BoundaryTargetMapOutput values.
// You can construct a concrete instance of `BoundaryTargetMapInput` via:
//
//	BoundaryTargetMap{ "key": BoundaryTargetArgs{...} }
type BoundaryTargetMapInput interface {
	pulumi.Input

	ToBoundaryTargetMapOutput() BoundaryTargetMapOutput
	ToBoundaryTargetMapOutputWithContext(context.Context) BoundaryTargetMapOutput
}

type BoundaryTargetMap map[string]BoundaryTargetInput

func (BoundaryTargetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryTarget)(nil)).Elem()
}

func (i BoundaryTargetMap) ToBoundaryTargetMapOutput() BoundaryTargetMapOutput {
	return i.ToBoundaryTargetMapOutputWithContext(context.Background())
}

func (i BoundaryTargetMap) ToBoundaryTargetMapOutputWithContext(ctx context.Context) BoundaryTargetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryTargetMapOutput)
}

type BoundaryTargetOutput struct{ *pulumi.OutputState }

func (BoundaryTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryTarget)(nil)).Elem()
}

func (o BoundaryTargetOutput) ToBoundaryTargetOutput() BoundaryTargetOutput {
	return o
}

func (o BoundaryTargetOutput) ToBoundaryTargetOutputWithContext(ctx context.Context) BoundaryTargetOutput {
	return o
}

// A list of brokered credential source ID's.
func (o BoundaryTargetOutput) BrokeredCredentialSourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BoundaryTarget) pulumi.StringArrayOutput { return v.BrokeredCredentialSourceIds }).(pulumi.StringArrayOutput)
}

// The default port for this target.
func (o BoundaryTargetOutput) DefaultPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BoundaryTarget) pulumi.IntPtrOutput { return v.DefaultPort }).(pulumi.IntPtrOutput)
}

// The target description.
func (o BoundaryTargetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryTarget) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// A list of host source ID's.
func (o BoundaryTargetOutput) HostSourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BoundaryTarget) pulumi.StringArrayOutput { return v.HostSourceIds }).(pulumi.StringArrayOutput)
}

// A list of injected application credential source ID's.
func (o BoundaryTargetOutput) InjectedApplicationCredentialSourceIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *BoundaryTarget) pulumi.StringArrayOutput { return v.InjectedApplicationCredentialSourceIds }).(pulumi.StringArrayOutput)
}

// The target name. Defaults to the resource name.
func (o BoundaryTargetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryTarget) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The scope ID in which the resource is created. Defaults to the provider's `defaultScope` if unset.
func (o BoundaryTargetOutput) ScopeId() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryTarget) pulumi.StringOutput { return v.ScopeId }).(pulumi.StringOutput)
}

func (o BoundaryTargetOutput) SessionConnectionLimit() pulumi.IntOutput {
	return o.ApplyT(func(v *BoundaryTarget) pulumi.IntOutput { return v.SessionConnectionLimit }).(pulumi.IntOutput)
}

func (o BoundaryTargetOutput) SessionMaxSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v *BoundaryTarget) pulumi.IntOutput { return v.SessionMaxSeconds }).(pulumi.IntOutput)
}

// The target resource type.
func (o BoundaryTargetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryTarget) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Boolean expression to filter the workers for this target
func (o BoundaryTargetOutput) WorkerFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryTarget) pulumi.StringPtrOutput { return v.WorkerFilter }).(pulumi.StringPtrOutput)
}

type BoundaryTargetArrayOutput struct{ *pulumi.OutputState }

func (BoundaryTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryTarget)(nil)).Elem()
}

func (o BoundaryTargetArrayOutput) ToBoundaryTargetArrayOutput() BoundaryTargetArrayOutput {
	return o
}

func (o BoundaryTargetArrayOutput) ToBoundaryTargetArrayOutputWithContext(ctx context.Context) BoundaryTargetArrayOutput {
	return o
}

func (o BoundaryTargetArrayOutput) Index(i pulumi.IntInput) BoundaryTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BoundaryTarget {
		return vs[0].([]*BoundaryTarget)[vs[1].(int)]
	}).(BoundaryTargetOutput)
}

type BoundaryTargetMapOutput struct{ *pulumi.OutputState }

func (BoundaryTargetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryTarget)(nil)).Elem()
}

func (o BoundaryTargetMapOutput) ToBoundaryTargetMapOutput() BoundaryTargetMapOutput {
	return o
}

func (o BoundaryTargetMapOutput) ToBoundaryTargetMapOutputWithContext(ctx context.Context) BoundaryTargetMapOutput {
	return o
}

func (o BoundaryTargetMapOutput) MapIndex(k pulumi.StringInput) BoundaryTargetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BoundaryTarget {
		return vs[0].(map[string]*BoundaryTarget)[vs[1].(string)]
	}).(BoundaryTargetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryTargetInput)(nil)).Elem(), &BoundaryTarget{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryTargetArrayInput)(nil)).Elem(), BoundaryTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryTargetMapInput)(nil)).Elem(), BoundaryTargetMap{})
	pulumi.RegisterOutputType(BoundaryTargetOutput{})
	pulumi.RegisterOutputType(BoundaryTargetArrayOutput{})
	pulumi.RegisterOutputType(BoundaryTargetMapOutput{})
}
