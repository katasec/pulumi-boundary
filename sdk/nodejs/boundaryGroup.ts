// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The group resource allows you to configure a Boundary group.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as boundary from "@katasec/boundary";
 *
 * const org = new boundary.BoundaryScope("org", {
 *     description: "My first scope!",
 *     scopeId: "global",
 *     autoCreateAdminRole: true,
 *     autoCreateDefaultRole: true,
 * });
 * const foo = new boundary.BoundaryUser("foo", {
 *     description: "foo user",
 *     scopeId: org.id,
 * });
 * const example = new boundary.BoundaryGroup("example", {
 *     description: "My first group!",
 *     memberIds: [foo.id],
 *     scopeId: org.id,
 * });
 * ```
 *
 * Usage for project-specific group:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as boundary from "@katasec/boundary";
 *
 * const org = new boundary.BoundaryScope("org", {
 *     description: "My first scope!",
 *     scopeId: "global",
 *     autoCreateAdminRole: true,
 *     autoCreateDefaultRole: true,
 * });
 * const project = new boundary.BoundaryScope("project", {
 *     description: "My first scope!",
 *     scopeId: org.id,
 *     autoCreateAdminRole: true,
 * });
 * const foo = new boundary.BoundaryUser("foo", {
 *     description: "foo user",
 *     scopeId: org.id,
 * });
 * const example = new boundary.BoundaryGroup("example", {
 *     description: "My first group!",
 *     memberIds: [foo.id],
 *     scopeId: project.id,
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import boundary:index/boundaryGroup:BoundaryGroup foo <my-id>
 * ```
 */
export class BoundaryGroup extends pulumi.CustomResource {
    /**
     * Get an existing BoundaryGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BoundaryGroupState, opts?: pulumi.CustomResourceOptions): BoundaryGroup {
        return new BoundaryGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'boundary:index/boundaryGroup:BoundaryGroup';

    /**
     * Returns true if the given object is an instance of BoundaryGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BoundaryGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BoundaryGroup.__pulumiType;
    }

    /**
     * The group description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Resource IDs for group members, these are most likely boundary users.
     */
    public readonly memberIds!: pulumi.Output<string[] | undefined>;
    /**
     * The group name. Defaults to the resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The scope ID in which the resource is created. Defaults to the provider's `defaultScope` if unset.
     */
    public readonly scopeId!: pulumi.Output<string>;

    /**
     * Create a BoundaryGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BoundaryGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BoundaryGroupArgs | BoundaryGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BoundaryGroupState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["memberIds"] = state ? state.memberIds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["scopeId"] = state ? state.scopeId : undefined;
        } else {
            const args = argsOrState as BoundaryGroupArgs | undefined;
            if ((!args || args.scopeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'scopeId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["memberIds"] = args ? args.memberIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["scopeId"] = args ? args.scopeId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BoundaryGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BoundaryGroup resources.
 */
export interface BoundaryGroupState {
    /**
     * The group description.
     */
    description?: pulumi.Input<string>;
    /**
     * Resource IDs for group members, these are most likely boundary users.
     */
    memberIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The group name. Defaults to the resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The scope ID in which the resource is created. Defaults to the provider's `defaultScope` if unset.
     */
    scopeId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BoundaryGroup resource.
 */
export interface BoundaryGroupArgs {
    /**
     * The group description.
     */
    description?: pulumi.Input<string>;
    /**
     * Resource IDs for group members, these are most likely boundary users.
     */
    memberIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The group name. Defaults to the resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The scope ID in which the resource is created. Defaults to the provider's `defaultScope` if unset.
     */
    scopeId: pulumi.Input<string>;
}
