// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The auth method resource allows you to configure a Boundary auth_method_password.
type BoundaryAuthMethodPassword struct {
	pulumi.CustomResourceState

	// The auth method description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The minimum login name length.
	MinLoginNameLength pulumi.IntOutput `pulumi:"minLoginNameLength"`
	// The minimum password length.
	MinPasswordLength pulumi.IntOutput `pulumi:"minPasswordLength"`
	// The auth method name. Defaults to the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The scope ID.
	ScopeId pulumi.StringOutput `pulumi:"scopeId"`
	// The resource type, hardcoded per resource
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewBoundaryAuthMethodPassword registers a new resource with the given unique name, arguments, and options.
func NewBoundaryAuthMethodPassword(ctx *pulumi.Context,
	name string, args *BoundaryAuthMethodPasswordArgs, opts ...pulumi.ResourceOption) (*BoundaryAuthMethodPassword, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ScopeId == nil {
		return nil, errors.New("invalid value for required argument 'ScopeId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BoundaryAuthMethodPassword
	err := ctx.RegisterResource("boundary:index/boundaryAuthMethodPassword:BoundaryAuthMethodPassword", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBoundaryAuthMethodPassword gets an existing BoundaryAuthMethodPassword resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBoundaryAuthMethodPassword(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BoundaryAuthMethodPasswordState, opts ...pulumi.ResourceOption) (*BoundaryAuthMethodPassword, error) {
	var resource BoundaryAuthMethodPassword
	err := ctx.ReadResource("boundary:index/boundaryAuthMethodPassword:BoundaryAuthMethodPassword", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BoundaryAuthMethodPassword resources.
type boundaryAuthMethodPasswordState struct {
	// The auth method description.
	Description *string `pulumi:"description"`
	// The minimum login name length.
	MinLoginNameLength *int `pulumi:"minLoginNameLength"`
	// The minimum password length.
	MinPasswordLength *int `pulumi:"minPasswordLength"`
	// The auth method name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The scope ID.
	ScopeId *string `pulumi:"scopeId"`
	// The resource type, hardcoded per resource
	Type *string `pulumi:"type"`
}

type BoundaryAuthMethodPasswordState struct {
	// The auth method description.
	Description pulumi.StringPtrInput
	// The minimum login name length.
	MinLoginNameLength pulumi.IntPtrInput
	// The minimum password length.
	MinPasswordLength pulumi.IntPtrInput
	// The auth method name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The scope ID.
	ScopeId pulumi.StringPtrInput
	// The resource type, hardcoded per resource
	Type pulumi.StringPtrInput
}

func (BoundaryAuthMethodPasswordState) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryAuthMethodPasswordState)(nil)).Elem()
}

type boundaryAuthMethodPasswordArgs struct {
	// The auth method description.
	Description *string `pulumi:"description"`
	// The minimum login name length.
	MinLoginNameLength *int `pulumi:"minLoginNameLength"`
	// The minimum password length.
	MinPasswordLength *int `pulumi:"minPasswordLength"`
	// The auth method name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The scope ID.
	ScopeId string `pulumi:"scopeId"`
	// The resource type, hardcoded per resource
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a BoundaryAuthMethodPassword resource.
type BoundaryAuthMethodPasswordArgs struct {
	// The auth method description.
	Description pulumi.StringPtrInput
	// The minimum login name length.
	MinLoginNameLength pulumi.IntPtrInput
	// The minimum password length.
	MinPasswordLength pulumi.IntPtrInput
	// The auth method name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The scope ID.
	ScopeId pulumi.StringInput
	// The resource type, hardcoded per resource
	Type pulumi.StringPtrInput
}

func (BoundaryAuthMethodPasswordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryAuthMethodPasswordArgs)(nil)).Elem()
}

type BoundaryAuthMethodPasswordInput interface {
	pulumi.Input

	ToBoundaryAuthMethodPasswordOutput() BoundaryAuthMethodPasswordOutput
	ToBoundaryAuthMethodPasswordOutputWithContext(ctx context.Context) BoundaryAuthMethodPasswordOutput
}

func (*BoundaryAuthMethodPassword) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryAuthMethodPassword)(nil)).Elem()
}

func (i *BoundaryAuthMethodPassword) ToBoundaryAuthMethodPasswordOutput() BoundaryAuthMethodPasswordOutput {
	return i.ToBoundaryAuthMethodPasswordOutputWithContext(context.Background())
}

func (i *BoundaryAuthMethodPassword) ToBoundaryAuthMethodPasswordOutputWithContext(ctx context.Context) BoundaryAuthMethodPasswordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryAuthMethodPasswordOutput)
}

// BoundaryAuthMethodPasswordArrayInput is an input type that accepts BoundaryAuthMethodPasswordArray and BoundaryAuthMethodPasswordArrayOutput values.
// You can construct a concrete instance of `BoundaryAuthMethodPasswordArrayInput` via:
//
//	BoundaryAuthMethodPasswordArray{ BoundaryAuthMethodPasswordArgs{...} }
type BoundaryAuthMethodPasswordArrayInput interface {
	pulumi.Input

	ToBoundaryAuthMethodPasswordArrayOutput() BoundaryAuthMethodPasswordArrayOutput
	ToBoundaryAuthMethodPasswordArrayOutputWithContext(context.Context) BoundaryAuthMethodPasswordArrayOutput
}

type BoundaryAuthMethodPasswordArray []BoundaryAuthMethodPasswordInput

func (BoundaryAuthMethodPasswordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryAuthMethodPassword)(nil)).Elem()
}

func (i BoundaryAuthMethodPasswordArray) ToBoundaryAuthMethodPasswordArrayOutput() BoundaryAuthMethodPasswordArrayOutput {
	return i.ToBoundaryAuthMethodPasswordArrayOutputWithContext(context.Background())
}

func (i BoundaryAuthMethodPasswordArray) ToBoundaryAuthMethodPasswordArrayOutputWithContext(ctx context.Context) BoundaryAuthMethodPasswordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryAuthMethodPasswordArrayOutput)
}

// BoundaryAuthMethodPasswordMapInput is an input type that accepts BoundaryAuthMethodPasswordMap and BoundaryAuthMethodPasswordMapOutput values.
// You can construct a concrete instance of `BoundaryAuthMethodPasswordMapInput` via:
//
//	BoundaryAuthMethodPasswordMap{ "key": BoundaryAuthMethodPasswordArgs{...} }
type BoundaryAuthMethodPasswordMapInput interface {
	pulumi.Input

	ToBoundaryAuthMethodPasswordMapOutput() BoundaryAuthMethodPasswordMapOutput
	ToBoundaryAuthMethodPasswordMapOutputWithContext(context.Context) BoundaryAuthMethodPasswordMapOutput
}

type BoundaryAuthMethodPasswordMap map[string]BoundaryAuthMethodPasswordInput

func (BoundaryAuthMethodPasswordMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryAuthMethodPassword)(nil)).Elem()
}

func (i BoundaryAuthMethodPasswordMap) ToBoundaryAuthMethodPasswordMapOutput() BoundaryAuthMethodPasswordMapOutput {
	return i.ToBoundaryAuthMethodPasswordMapOutputWithContext(context.Background())
}

func (i BoundaryAuthMethodPasswordMap) ToBoundaryAuthMethodPasswordMapOutputWithContext(ctx context.Context) BoundaryAuthMethodPasswordMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryAuthMethodPasswordMapOutput)
}

type BoundaryAuthMethodPasswordOutput struct{ *pulumi.OutputState }

func (BoundaryAuthMethodPasswordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryAuthMethodPassword)(nil)).Elem()
}

func (o BoundaryAuthMethodPasswordOutput) ToBoundaryAuthMethodPasswordOutput() BoundaryAuthMethodPasswordOutput {
	return o
}

func (o BoundaryAuthMethodPasswordOutput) ToBoundaryAuthMethodPasswordOutputWithContext(ctx context.Context) BoundaryAuthMethodPasswordOutput {
	return o
}

// The auth method description.
func (o BoundaryAuthMethodPasswordOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryAuthMethodPassword) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The minimum login name length.
func (o BoundaryAuthMethodPasswordOutput) MinLoginNameLength() pulumi.IntOutput {
	return o.ApplyT(func(v *BoundaryAuthMethodPassword) pulumi.IntOutput { return v.MinLoginNameLength }).(pulumi.IntOutput)
}

// The minimum password length.
func (o BoundaryAuthMethodPasswordOutput) MinPasswordLength() pulumi.IntOutput {
	return o.ApplyT(func(v *BoundaryAuthMethodPassword) pulumi.IntOutput { return v.MinPasswordLength }).(pulumi.IntOutput)
}

// The auth method name. Defaults to the resource name.
func (o BoundaryAuthMethodPasswordOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryAuthMethodPassword) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The scope ID.
func (o BoundaryAuthMethodPasswordOutput) ScopeId() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryAuthMethodPassword) pulumi.StringOutput { return v.ScopeId }).(pulumi.StringOutput)
}

// The resource type, hardcoded per resource
func (o BoundaryAuthMethodPasswordOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryAuthMethodPassword) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type BoundaryAuthMethodPasswordArrayOutput struct{ *pulumi.OutputState }

func (BoundaryAuthMethodPasswordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryAuthMethodPassword)(nil)).Elem()
}

func (o BoundaryAuthMethodPasswordArrayOutput) ToBoundaryAuthMethodPasswordArrayOutput() BoundaryAuthMethodPasswordArrayOutput {
	return o
}

func (o BoundaryAuthMethodPasswordArrayOutput) ToBoundaryAuthMethodPasswordArrayOutputWithContext(ctx context.Context) BoundaryAuthMethodPasswordArrayOutput {
	return o
}

func (o BoundaryAuthMethodPasswordArrayOutput) Index(i pulumi.IntInput) BoundaryAuthMethodPasswordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BoundaryAuthMethodPassword {
		return vs[0].([]*BoundaryAuthMethodPassword)[vs[1].(int)]
	}).(BoundaryAuthMethodPasswordOutput)
}

type BoundaryAuthMethodPasswordMapOutput struct{ *pulumi.OutputState }

func (BoundaryAuthMethodPasswordMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryAuthMethodPassword)(nil)).Elem()
}

func (o BoundaryAuthMethodPasswordMapOutput) ToBoundaryAuthMethodPasswordMapOutput() BoundaryAuthMethodPasswordMapOutput {
	return o
}

func (o BoundaryAuthMethodPasswordMapOutput) ToBoundaryAuthMethodPasswordMapOutputWithContext(ctx context.Context) BoundaryAuthMethodPasswordMapOutput {
	return o
}

func (o BoundaryAuthMethodPasswordMapOutput) MapIndex(k pulumi.StringInput) BoundaryAuthMethodPasswordOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BoundaryAuthMethodPassword {
		return vs[0].(map[string]*BoundaryAuthMethodPassword)[vs[1].(string)]
	}).(BoundaryAuthMethodPasswordOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryAuthMethodPasswordInput)(nil)).Elem(), &BoundaryAuthMethodPassword{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryAuthMethodPasswordArrayInput)(nil)).Elem(), BoundaryAuthMethodPasswordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryAuthMethodPasswordMapInput)(nil)).Elem(), BoundaryAuthMethodPasswordMap{})
	pulumi.RegisterOutputType(BoundaryAuthMethodPasswordOutput{})
	pulumi.RegisterOutputType(BoundaryAuthMethodPasswordArrayOutput{})
	pulumi.RegisterOutputType(BoundaryAuthMethodPasswordMapOutput{})
}
