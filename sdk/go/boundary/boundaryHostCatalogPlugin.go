// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The host catalog resource allows you to configure a Boundary plugin-type host catalog. Host catalogs are always part of a project, so a project resource should be used inline or you should have the project ID in hand to successfully configure a host catalog.
type BoundaryHostCatalogPlugin struct {
	pulumi.CustomResourceState

	// The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
	AttributesJson pulumi.StringPtrOutput `pulumi:"attributesJson"`
	// The host catalog description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Internal only. Used to force update so that we can always check the value of secrets.
	InternalForceUpdate pulumi.StringOutput `pulumi:"internalForceUpdate"`
	// Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
	InternalHmacUsedForSecretsConfigHmac pulumi.StringOutput `pulumi:"internalHmacUsedForSecretsConfigHmac"`
	// Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
	InternalSecretsConfigHmac pulumi.StringOutput `pulumi:"internalSecretsConfigHmac"`
	// The host catalog name. Defaults to the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the plugin that should back the resource. This or pluginName must be defined.
	PluginId pulumi.StringOutput `pulumi:"pluginId"`
	// The name of the plugin that should back the resource. This or pluginId must be defined.
	PluginName pulumi.StringOutput `pulumi:"pluginName"`
	// The scope ID in which the resource is created.
	ScopeId pulumi.StringOutput `pulumi:"scopeId"`
	// The HMAC'd secrets value returned from the server.
	SecretsHmac pulumi.StringOutput `pulumi:"secretsHmac"`
	// The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
	SecretsJson pulumi.StringPtrOutput `pulumi:"secretsJson"`
}

// NewBoundaryHostCatalogPlugin registers a new resource with the given unique name, arguments, and options.
func NewBoundaryHostCatalogPlugin(ctx *pulumi.Context,
	name string, args *BoundaryHostCatalogPluginArgs, opts ...pulumi.ResourceOption) (*BoundaryHostCatalogPlugin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ScopeId == nil {
		return nil, errors.New("invalid value for required argument 'ScopeId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BoundaryHostCatalogPlugin
	err := ctx.RegisterResource("boundary:index/boundaryHostCatalogPlugin:BoundaryHostCatalogPlugin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBoundaryHostCatalogPlugin gets an existing BoundaryHostCatalogPlugin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBoundaryHostCatalogPlugin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BoundaryHostCatalogPluginState, opts ...pulumi.ResourceOption) (*BoundaryHostCatalogPlugin, error) {
	var resource BoundaryHostCatalogPlugin
	err := ctx.ReadResource("boundary:index/boundaryHostCatalogPlugin:BoundaryHostCatalogPlugin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BoundaryHostCatalogPlugin resources.
type boundaryHostCatalogPluginState struct {
	// The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
	AttributesJson *string `pulumi:"attributesJson"`
	// The host catalog description.
	Description *string `pulumi:"description"`
	// Internal only. Used to force update so that we can always check the value of secrets.
	InternalForceUpdate *string `pulumi:"internalForceUpdate"`
	// Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
	InternalHmacUsedForSecretsConfigHmac *string `pulumi:"internalHmacUsedForSecretsConfigHmac"`
	// Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
	InternalSecretsConfigHmac *string `pulumi:"internalSecretsConfigHmac"`
	// The host catalog name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The ID of the plugin that should back the resource. This or pluginName must be defined.
	PluginId *string `pulumi:"pluginId"`
	// The name of the plugin that should back the resource. This or pluginId must be defined.
	PluginName *string `pulumi:"pluginName"`
	// The scope ID in which the resource is created.
	ScopeId *string `pulumi:"scopeId"`
	// The HMAC'd secrets value returned from the server.
	SecretsHmac *string `pulumi:"secretsHmac"`
	// The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
	SecretsJson *string `pulumi:"secretsJson"`
}

type BoundaryHostCatalogPluginState struct {
	// The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
	AttributesJson pulumi.StringPtrInput
	// The host catalog description.
	Description pulumi.StringPtrInput
	// Internal only. Used to force update so that we can always check the value of secrets.
	InternalForceUpdate pulumi.StringPtrInput
	// Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
	InternalHmacUsedForSecretsConfigHmac pulumi.StringPtrInput
	// Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
	InternalSecretsConfigHmac pulumi.StringPtrInput
	// The host catalog name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The ID of the plugin that should back the resource. This or pluginName must be defined.
	PluginId pulumi.StringPtrInput
	// The name of the plugin that should back the resource. This or pluginId must be defined.
	PluginName pulumi.StringPtrInput
	// The scope ID in which the resource is created.
	ScopeId pulumi.StringPtrInput
	// The HMAC'd secrets value returned from the server.
	SecretsHmac pulumi.StringPtrInput
	// The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
	SecretsJson pulumi.StringPtrInput
}

func (BoundaryHostCatalogPluginState) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryHostCatalogPluginState)(nil)).Elem()
}

type boundaryHostCatalogPluginArgs struct {
	// The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
	AttributesJson *string `pulumi:"attributesJson"`
	// The host catalog description.
	Description *string `pulumi:"description"`
	// Internal only. Used to force update so that we can always check the value of secrets.
	InternalForceUpdate *string `pulumi:"internalForceUpdate"`
	// Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
	InternalHmacUsedForSecretsConfigHmac *string `pulumi:"internalHmacUsedForSecretsConfigHmac"`
	// Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
	InternalSecretsConfigHmac *string `pulumi:"internalSecretsConfigHmac"`
	// The host catalog name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The ID of the plugin that should back the resource. This or pluginName must be defined.
	PluginId *string `pulumi:"pluginId"`
	// The name of the plugin that should back the resource. This or pluginId must be defined.
	PluginName *string `pulumi:"pluginName"`
	// The scope ID in which the resource is created.
	ScopeId string `pulumi:"scopeId"`
	// The HMAC'd secrets value returned from the server.
	SecretsHmac *string `pulumi:"secretsHmac"`
	// The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
	SecretsJson *string `pulumi:"secretsJson"`
}

// The set of arguments for constructing a BoundaryHostCatalogPlugin resource.
type BoundaryHostCatalogPluginArgs struct {
	// The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
	AttributesJson pulumi.StringPtrInput
	// The host catalog description.
	Description pulumi.StringPtrInput
	// Internal only. Used to force update so that we can always check the value of secrets.
	InternalForceUpdate pulumi.StringPtrInput
	// Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
	InternalHmacUsedForSecretsConfigHmac pulumi.StringPtrInput
	// Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
	InternalSecretsConfigHmac pulumi.StringPtrInput
	// The host catalog name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The ID of the plugin that should back the resource. This or pluginName must be defined.
	PluginId pulumi.StringPtrInput
	// The name of the plugin that should back the resource. This or pluginId must be defined.
	PluginName pulumi.StringPtrInput
	// The scope ID in which the resource is created.
	ScopeId pulumi.StringInput
	// The HMAC'd secrets value returned from the server.
	SecretsHmac pulumi.StringPtrInput
	// The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
	SecretsJson pulumi.StringPtrInput
}

func (BoundaryHostCatalogPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryHostCatalogPluginArgs)(nil)).Elem()
}

type BoundaryHostCatalogPluginInput interface {
	pulumi.Input

	ToBoundaryHostCatalogPluginOutput() BoundaryHostCatalogPluginOutput
	ToBoundaryHostCatalogPluginOutputWithContext(ctx context.Context) BoundaryHostCatalogPluginOutput
}

func (*BoundaryHostCatalogPlugin) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryHostCatalogPlugin)(nil)).Elem()
}

func (i *BoundaryHostCatalogPlugin) ToBoundaryHostCatalogPluginOutput() BoundaryHostCatalogPluginOutput {
	return i.ToBoundaryHostCatalogPluginOutputWithContext(context.Background())
}

func (i *BoundaryHostCatalogPlugin) ToBoundaryHostCatalogPluginOutputWithContext(ctx context.Context) BoundaryHostCatalogPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryHostCatalogPluginOutput)
}

// BoundaryHostCatalogPluginArrayInput is an input type that accepts BoundaryHostCatalogPluginArray and BoundaryHostCatalogPluginArrayOutput values.
// You can construct a concrete instance of `BoundaryHostCatalogPluginArrayInput` via:
//
//	BoundaryHostCatalogPluginArray{ BoundaryHostCatalogPluginArgs{...} }
type BoundaryHostCatalogPluginArrayInput interface {
	pulumi.Input

	ToBoundaryHostCatalogPluginArrayOutput() BoundaryHostCatalogPluginArrayOutput
	ToBoundaryHostCatalogPluginArrayOutputWithContext(context.Context) BoundaryHostCatalogPluginArrayOutput
}

type BoundaryHostCatalogPluginArray []BoundaryHostCatalogPluginInput

func (BoundaryHostCatalogPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryHostCatalogPlugin)(nil)).Elem()
}

func (i BoundaryHostCatalogPluginArray) ToBoundaryHostCatalogPluginArrayOutput() BoundaryHostCatalogPluginArrayOutput {
	return i.ToBoundaryHostCatalogPluginArrayOutputWithContext(context.Background())
}

func (i BoundaryHostCatalogPluginArray) ToBoundaryHostCatalogPluginArrayOutputWithContext(ctx context.Context) BoundaryHostCatalogPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryHostCatalogPluginArrayOutput)
}

// BoundaryHostCatalogPluginMapInput is an input type that accepts BoundaryHostCatalogPluginMap and BoundaryHostCatalogPluginMapOutput values.
// You can construct a concrete instance of `BoundaryHostCatalogPluginMapInput` via:
//
//	BoundaryHostCatalogPluginMap{ "key": BoundaryHostCatalogPluginArgs{...} }
type BoundaryHostCatalogPluginMapInput interface {
	pulumi.Input

	ToBoundaryHostCatalogPluginMapOutput() BoundaryHostCatalogPluginMapOutput
	ToBoundaryHostCatalogPluginMapOutputWithContext(context.Context) BoundaryHostCatalogPluginMapOutput
}

type BoundaryHostCatalogPluginMap map[string]BoundaryHostCatalogPluginInput

func (BoundaryHostCatalogPluginMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryHostCatalogPlugin)(nil)).Elem()
}

func (i BoundaryHostCatalogPluginMap) ToBoundaryHostCatalogPluginMapOutput() BoundaryHostCatalogPluginMapOutput {
	return i.ToBoundaryHostCatalogPluginMapOutputWithContext(context.Background())
}

func (i BoundaryHostCatalogPluginMap) ToBoundaryHostCatalogPluginMapOutputWithContext(ctx context.Context) BoundaryHostCatalogPluginMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryHostCatalogPluginMapOutput)
}

type BoundaryHostCatalogPluginOutput struct{ *pulumi.OutputState }

func (BoundaryHostCatalogPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryHostCatalogPlugin)(nil)).Elem()
}

func (o BoundaryHostCatalogPluginOutput) ToBoundaryHostCatalogPluginOutput() BoundaryHostCatalogPluginOutput {
	return o
}

func (o BoundaryHostCatalogPluginOutput) ToBoundaryHostCatalogPluginOutputWithContext(ctx context.Context) BoundaryHostCatalogPluginOutput {
	return o
}

// The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
func (o BoundaryHostCatalogPluginOutput) AttributesJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryHostCatalogPlugin) pulumi.StringPtrOutput { return v.AttributesJson }).(pulumi.StringPtrOutput)
}

// The host catalog description.
func (o BoundaryHostCatalogPluginOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryHostCatalogPlugin) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Internal only. Used to force update so that we can always check the value of secrets.
func (o BoundaryHostCatalogPluginOutput) InternalForceUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryHostCatalogPlugin) pulumi.StringOutput { return v.InternalForceUpdate }).(pulumi.StringOutput)
}

// Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
func (o BoundaryHostCatalogPluginOutput) InternalHmacUsedForSecretsConfigHmac() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryHostCatalogPlugin) pulumi.StringOutput { return v.InternalHmacUsedForSecretsConfigHmac }).(pulumi.StringOutput)
}

// Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
func (o BoundaryHostCatalogPluginOutput) InternalSecretsConfigHmac() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryHostCatalogPlugin) pulumi.StringOutput { return v.InternalSecretsConfigHmac }).(pulumi.StringOutput)
}

// The host catalog name. Defaults to the resource name.
func (o BoundaryHostCatalogPluginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryHostCatalogPlugin) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the plugin that should back the resource. This or pluginName must be defined.
func (o BoundaryHostCatalogPluginOutput) PluginId() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryHostCatalogPlugin) pulumi.StringOutput { return v.PluginId }).(pulumi.StringOutput)
}

// The name of the plugin that should back the resource. This or pluginId must be defined.
func (o BoundaryHostCatalogPluginOutput) PluginName() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryHostCatalogPlugin) pulumi.StringOutput { return v.PluginName }).(pulumi.StringOutput)
}

// The scope ID in which the resource is created.
func (o BoundaryHostCatalogPluginOutput) ScopeId() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryHostCatalogPlugin) pulumi.StringOutput { return v.ScopeId }).(pulumi.StringOutput)
}

// The HMAC'd secrets value returned from the server.
func (o BoundaryHostCatalogPluginOutput) SecretsHmac() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryHostCatalogPlugin) pulumi.StringOutput { return v.SecretsHmac }).(pulumi.StringOutput)
}

// The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
func (o BoundaryHostCatalogPluginOutput) SecretsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryHostCatalogPlugin) pulumi.StringPtrOutput { return v.SecretsJson }).(pulumi.StringPtrOutput)
}

type BoundaryHostCatalogPluginArrayOutput struct{ *pulumi.OutputState }

func (BoundaryHostCatalogPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryHostCatalogPlugin)(nil)).Elem()
}

func (o BoundaryHostCatalogPluginArrayOutput) ToBoundaryHostCatalogPluginArrayOutput() BoundaryHostCatalogPluginArrayOutput {
	return o
}

func (o BoundaryHostCatalogPluginArrayOutput) ToBoundaryHostCatalogPluginArrayOutputWithContext(ctx context.Context) BoundaryHostCatalogPluginArrayOutput {
	return o
}

func (o BoundaryHostCatalogPluginArrayOutput) Index(i pulumi.IntInput) BoundaryHostCatalogPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BoundaryHostCatalogPlugin {
		return vs[0].([]*BoundaryHostCatalogPlugin)[vs[1].(int)]
	}).(BoundaryHostCatalogPluginOutput)
}

type BoundaryHostCatalogPluginMapOutput struct{ *pulumi.OutputState }

func (BoundaryHostCatalogPluginMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryHostCatalogPlugin)(nil)).Elem()
}

func (o BoundaryHostCatalogPluginMapOutput) ToBoundaryHostCatalogPluginMapOutput() BoundaryHostCatalogPluginMapOutput {
	return o
}

func (o BoundaryHostCatalogPluginMapOutput) ToBoundaryHostCatalogPluginMapOutputWithContext(ctx context.Context) BoundaryHostCatalogPluginMapOutput {
	return o
}

func (o BoundaryHostCatalogPluginMapOutput) MapIndex(k pulumi.StringInput) BoundaryHostCatalogPluginOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BoundaryHostCatalogPlugin {
		return vs[0].(map[string]*BoundaryHostCatalogPlugin)[vs[1].(string)]
	}).(BoundaryHostCatalogPluginOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryHostCatalogPluginInput)(nil)).Elem(), &BoundaryHostCatalogPlugin{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryHostCatalogPluginArrayInput)(nil)).Elem(), BoundaryHostCatalogPluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryHostCatalogPluginMapInput)(nil)).Elem(), BoundaryHostCatalogPluginMap{})
	pulumi.RegisterOutputType(BoundaryHostCatalogPluginOutput{})
	pulumi.RegisterOutputType(BoundaryHostCatalogPluginArrayOutput{})
	pulumi.RegisterOutputType(BoundaryHostCatalogPluginMapOutput{})
}
