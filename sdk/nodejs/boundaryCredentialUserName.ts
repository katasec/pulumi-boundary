// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The username/password credential resource allows you to configure a credential using a username and password pair.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as boundary from "@katasec/boundary";
 *
 * const org = new boundary.BoundaryScope("org", {
 *     description: "global scope",
 *     scopeId: "global",
 *     autoCreateAdminRole: true,
 *     autoCreateDefaultRole: true,
 * });
 * const project = new boundary.BoundaryScope("project", {
 *     description: "My first scope!",
 *     scopeId: org.id,
 *     autoCreateAdminRole: true,
 * });
 * const exampleBoundaryCredentialStoreStatic = new boundary.BoundaryCredentialStoreStatic("exampleBoundaryCredentialStoreStatic", {
 *     description: "My first static credential store!",
 *     scopeId: project.id,
 * });
 * const exampleBoundaryCredentialUserName = new boundary.BoundaryCredentialUserName("exampleBoundaryCredentialUserName", {
 *     description: "My first username password credential!",
 *     credentialStoreId: exampleBoundaryCredentialStoreStatic.id,
 *     username: "my-username",
 *     password: "my-password",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import boundary:index/boundaryCredentialUserName:BoundaryCredentialUserName example_username_password <my-id>
 * ```
 */
export class BoundaryCredentialUserName extends pulumi.CustomResource {
    /**
     * Get an existing BoundaryCredentialUserName resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BoundaryCredentialUserNameState, opts?: pulumi.CustomResourceOptions): BoundaryCredentialUserName {
        return new BoundaryCredentialUserName(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'boundary:index/boundaryCredentialUserName:BoundaryCredentialUserName';

    /**
     * Returns true if the given object is an instance of BoundaryCredentialUserName.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BoundaryCredentialUserName {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BoundaryCredentialUserName.__pulumiType;
    }

    /**
     * The credential store in which to save this username/password credential.
     */
    public readonly credentialStoreId!: pulumi.Output<string>;
    /**
     * The description of this username/password credential.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The name of this username/password credential. Defaults to the resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The password of this username/password credential.
     */
    public readonly password!: pulumi.Output<string>;
    /**
     * The password hmac.
     */
    public /*out*/ readonly passwordHmac!: pulumi.Output<string>;
    /**
     * The username of this username/password credential.
     */
    public readonly username!: pulumi.Output<string>;

    /**
     * Create a BoundaryCredentialUserName resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BoundaryCredentialUserNameArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BoundaryCredentialUserNameArgs | BoundaryCredentialUserNameState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BoundaryCredentialUserNameState | undefined;
            resourceInputs["credentialStoreId"] = state ? state.credentialStoreId : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["password"] = state ? state.password : undefined;
            resourceInputs["passwordHmac"] = state ? state.passwordHmac : undefined;
            resourceInputs["username"] = state ? state.username : undefined;
        } else {
            const args = argsOrState as BoundaryCredentialUserNameArgs | undefined;
            if ((!args || args.credentialStoreId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'credentialStoreId'");
            }
            if ((!args || args.password === undefined) && !opts.urn) {
                throw new Error("Missing required property 'password'");
            }
            if ((!args || args.username === undefined) && !opts.urn) {
                throw new Error("Missing required property 'username'");
            }
            resourceInputs["credentialStoreId"] = args ? args.credentialStoreId : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["password"] = args ? args.password : undefined;
            resourceInputs["username"] = args ? args.username : undefined;
            resourceInputs["passwordHmac"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BoundaryCredentialUserName.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BoundaryCredentialUserName resources.
 */
export interface BoundaryCredentialUserNameState {
    /**
     * The credential store in which to save this username/password credential.
     */
    credentialStoreId?: pulumi.Input<string>;
    /**
     * The description of this username/password credential.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of this username/password credential. Defaults to the resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The password of this username/password credential.
     */
    password?: pulumi.Input<string>;
    /**
     * The password hmac.
     */
    passwordHmac?: pulumi.Input<string>;
    /**
     * The username of this username/password credential.
     */
    username?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a BoundaryCredentialUserName resource.
 */
export interface BoundaryCredentialUserNameArgs {
    /**
     * The credential store in which to save this username/password credential.
     */
    credentialStoreId: pulumi.Input<string>;
    /**
     * The description of this username/password credential.
     */
    description?: pulumi.Input<string>;
    /**
     * The name of this username/password credential. Defaults to the resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The password of this username/password credential.
     */
    password: pulumi.Input<string>;
    /**
     * The username of this username/password credential.
     */
    username: pulumi.Input<string>;
}
