// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The managed group resource allows you to configure a Boundary group.
type BoundaryManagedGroup struct {
	pulumi.CustomResourceState

	// The resource ID for the auth method.
	AuthMethodId pulumi.StringOutput `pulumi:"authMethodId"`
	// The managed group description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Boolean expression to filter the workers for this managed group.
	Filter pulumi.StringOutput `pulumi:"filter"`
	// The managed group name. Defaults to the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewBoundaryManagedGroup registers a new resource with the given unique name, arguments, and options.
func NewBoundaryManagedGroup(ctx *pulumi.Context,
	name string, args *BoundaryManagedGroupArgs, opts ...pulumi.ResourceOption) (*BoundaryManagedGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthMethodId == nil {
		return nil, errors.New("invalid value for required argument 'AuthMethodId'")
	}
	if args.Filter == nil {
		return nil, errors.New("invalid value for required argument 'Filter'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BoundaryManagedGroup
	err := ctx.RegisterResource("boundary:index/boundaryManagedGroup:BoundaryManagedGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBoundaryManagedGroup gets an existing BoundaryManagedGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBoundaryManagedGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BoundaryManagedGroupState, opts ...pulumi.ResourceOption) (*BoundaryManagedGroup, error) {
	var resource BoundaryManagedGroup
	err := ctx.ReadResource("boundary:index/boundaryManagedGroup:BoundaryManagedGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BoundaryManagedGroup resources.
type boundaryManagedGroupState struct {
	// The resource ID for the auth method.
	AuthMethodId *string `pulumi:"authMethodId"`
	// The managed group description.
	Description *string `pulumi:"description"`
	// Boolean expression to filter the workers for this managed group.
	Filter *string `pulumi:"filter"`
	// The managed group name. Defaults to the resource name.
	Name *string `pulumi:"name"`
}

type BoundaryManagedGroupState struct {
	// The resource ID for the auth method.
	AuthMethodId pulumi.StringPtrInput
	// The managed group description.
	Description pulumi.StringPtrInput
	// Boolean expression to filter the workers for this managed group.
	Filter pulumi.StringPtrInput
	// The managed group name. Defaults to the resource name.
	Name pulumi.StringPtrInput
}

func (BoundaryManagedGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryManagedGroupState)(nil)).Elem()
}

type boundaryManagedGroupArgs struct {
	// The resource ID for the auth method.
	AuthMethodId string `pulumi:"authMethodId"`
	// The managed group description.
	Description *string `pulumi:"description"`
	// Boolean expression to filter the workers for this managed group.
	Filter string `pulumi:"filter"`
	// The managed group name. Defaults to the resource name.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a BoundaryManagedGroup resource.
type BoundaryManagedGroupArgs struct {
	// The resource ID for the auth method.
	AuthMethodId pulumi.StringInput
	// The managed group description.
	Description pulumi.StringPtrInput
	// Boolean expression to filter the workers for this managed group.
	Filter pulumi.StringInput
	// The managed group name. Defaults to the resource name.
	Name pulumi.StringPtrInput
}

func (BoundaryManagedGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryManagedGroupArgs)(nil)).Elem()
}

type BoundaryManagedGroupInput interface {
	pulumi.Input

	ToBoundaryManagedGroupOutput() BoundaryManagedGroupOutput
	ToBoundaryManagedGroupOutputWithContext(ctx context.Context) BoundaryManagedGroupOutput
}

func (*BoundaryManagedGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryManagedGroup)(nil)).Elem()
}

func (i *BoundaryManagedGroup) ToBoundaryManagedGroupOutput() BoundaryManagedGroupOutput {
	return i.ToBoundaryManagedGroupOutputWithContext(context.Background())
}

func (i *BoundaryManagedGroup) ToBoundaryManagedGroupOutputWithContext(ctx context.Context) BoundaryManagedGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryManagedGroupOutput)
}

// BoundaryManagedGroupArrayInput is an input type that accepts BoundaryManagedGroupArray and BoundaryManagedGroupArrayOutput values.
// You can construct a concrete instance of `BoundaryManagedGroupArrayInput` via:
//
//	BoundaryManagedGroupArray{ BoundaryManagedGroupArgs{...} }
type BoundaryManagedGroupArrayInput interface {
	pulumi.Input

	ToBoundaryManagedGroupArrayOutput() BoundaryManagedGroupArrayOutput
	ToBoundaryManagedGroupArrayOutputWithContext(context.Context) BoundaryManagedGroupArrayOutput
}

type BoundaryManagedGroupArray []BoundaryManagedGroupInput

func (BoundaryManagedGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryManagedGroup)(nil)).Elem()
}

func (i BoundaryManagedGroupArray) ToBoundaryManagedGroupArrayOutput() BoundaryManagedGroupArrayOutput {
	return i.ToBoundaryManagedGroupArrayOutputWithContext(context.Background())
}

func (i BoundaryManagedGroupArray) ToBoundaryManagedGroupArrayOutputWithContext(ctx context.Context) BoundaryManagedGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryManagedGroupArrayOutput)
}

// BoundaryManagedGroupMapInput is an input type that accepts BoundaryManagedGroupMap and BoundaryManagedGroupMapOutput values.
// You can construct a concrete instance of `BoundaryManagedGroupMapInput` via:
//
//	BoundaryManagedGroupMap{ "key": BoundaryManagedGroupArgs{...} }
type BoundaryManagedGroupMapInput interface {
	pulumi.Input

	ToBoundaryManagedGroupMapOutput() BoundaryManagedGroupMapOutput
	ToBoundaryManagedGroupMapOutputWithContext(context.Context) BoundaryManagedGroupMapOutput
}

type BoundaryManagedGroupMap map[string]BoundaryManagedGroupInput

func (BoundaryManagedGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryManagedGroup)(nil)).Elem()
}

func (i BoundaryManagedGroupMap) ToBoundaryManagedGroupMapOutput() BoundaryManagedGroupMapOutput {
	return i.ToBoundaryManagedGroupMapOutputWithContext(context.Background())
}

func (i BoundaryManagedGroupMap) ToBoundaryManagedGroupMapOutputWithContext(ctx context.Context) BoundaryManagedGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryManagedGroupMapOutput)
}

type BoundaryManagedGroupOutput struct{ *pulumi.OutputState }

func (BoundaryManagedGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryManagedGroup)(nil)).Elem()
}

func (o BoundaryManagedGroupOutput) ToBoundaryManagedGroupOutput() BoundaryManagedGroupOutput {
	return o
}

func (o BoundaryManagedGroupOutput) ToBoundaryManagedGroupOutputWithContext(ctx context.Context) BoundaryManagedGroupOutput {
	return o
}

// The resource ID for the auth method.
func (o BoundaryManagedGroupOutput) AuthMethodId() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryManagedGroup) pulumi.StringOutput { return v.AuthMethodId }).(pulumi.StringOutput)
}

// The managed group description.
func (o BoundaryManagedGroupOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryManagedGroup) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Boolean expression to filter the workers for this managed group.
func (o BoundaryManagedGroupOutput) Filter() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryManagedGroup) pulumi.StringOutput { return v.Filter }).(pulumi.StringOutput)
}

// The managed group name. Defaults to the resource name.
func (o BoundaryManagedGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryManagedGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type BoundaryManagedGroupArrayOutput struct{ *pulumi.OutputState }

func (BoundaryManagedGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryManagedGroup)(nil)).Elem()
}

func (o BoundaryManagedGroupArrayOutput) ToBoundaryManagedGroupArrayOutput() BoundaryManagedGroupArrayOutput {
	return o
}

func (o BoundaryManagedGroupArrayOutput) ToBoundaryManagedGroupArrayOutputWithContext(ctx context.Context) BoundaryManagedGroupArrayOutput {
	return o
}

func (o BoundaryManagedGroupArrayOutput) Index(i pulumi.IntInput) BoundaryManagedGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BoundaryManagedGroup {
		return vs[0].([]*BoundaryManagedGroup)[vs[1].(int)]
	}).(BoundaryManagedGroupOutput)
}

type BoundaryManagedGroupMapOutput struct{ *pulumi.OutputState }

func (BoundaryManagedGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryManagedGroup)(nil)).Elem()
}

func (o BoundaryManagedGroupMapOutput) ToBoundaryManagedGroupMapOutput() BoundaryManagedGroupMapOutput {
	return o
}

func (o BoundaryManagedGroupMapOutput) ToBoundaryManagedGroupMapOutputWithContext(ctx context.Context) BoundaryManagedGroupMapOutput {
	return o
}

func (o BoundaryManagedGroupMapOutput) MapIndex(k pulumi.StringInput) BoundaryManagedGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BoundaryManagedGroup {
		return vs[0].(map[string]*BoundaryManagedGroup)[vs[1].(string)]
	}).(BoundaryManagedGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryManagedGroupInput)(nil)).Elem(), &BoundaryManagedGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryManagedGroupArrayInput)(nil)).Elem(), BoundaryManagedGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryManagedGroupMapInput)(nil)).Elem(), BoundaryManagedGroupMap{})
	pulumi.RegisterOutputType(BoundaryManagedGroupOutput{})
	pulumi.RegisterOutputType(BoundaryManagedGroupArrayOutput{})
	pulumi.RegisterOutputType(BoundaryManagedGroupMapOutput{})
}
