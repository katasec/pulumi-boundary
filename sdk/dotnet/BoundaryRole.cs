// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Katasec.Boundary
{
    /// <summary>
    /// The role resource allows you to configure a Boundary role.
    /// 
    /// ## Example Usage
    /// 
    /// Basic usage:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Boundary = Katasec.Boundary;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var org = new Boundary.BoundaryScope("org", new()
    ///     {
    ///         Description = "My first scope!",
    ///         ScopeId = "global",
    ///         AutoCreateAdminRole = true,
    ///         AutoCreateDefaultRole = true,
    ///     });
    /// 
    ///     var example = new Boundary.BoundaryRole("example", new()
    ///     {
    ///         Description = "My first role!",
    ///         ScopeId = org.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Usage with a user resource:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Boundary = Katasec.Boundary;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var org = new Boundary.BoundaryScope("org", new()
    ///     {
    ///         Description = "My first scope!",
    ///         ScopeId = "global",
    ///         AutoCreateAdminRole = true,
    ///         AutoCreateDefaultRole = true,
    ///     });
    /// 
    ///     var foo = new Boundary.BoundaryUser("foo", new()
    ///     {
    ///         ScopeId = org.Id,
    ///     });
    /// 
    ///     var bar = new Boundary.BoundaryUser("bar", new()
    ///     {
    ///         ScopeId = org.Id,
    ///     });
    /// 
    ///     var example = new Boundary.BoundaryRole("example", new()
    ///     {
    ///         Description = "My first role!",
    ///         PrincipalIds = new[]
    ///         {
    ///             foo.Id,
    ///             bar.Id,
    ///         },
    ///         ScopeId = org.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Usage with user and grants resource:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Boundary = Katasec.Boundary;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var org = new Boundary.BoundaryScope("org", new()
    ///     {
    ///         Description = "My first scope!",
    ///         ScopeId = "global",
    ///         AutoCreateAdminRole = true,
    ///         AutoCreateDefaultRole = true,
    ///     });
    /// 
    ///     var readonlyBoundaryUser = new Boundary.BoundaryUser("readonlyBoundaryUser", new()
    ///     {
    ///         Description = "A readonly user",
    ///         ScopeId = org.Id,
    ///     });
    /// 
    ///     var readonlyBoundaryRole = new Boundary.BoundaryRole("readonlyBoundaryRole", new()
    ///     {
    ///         Description = "A readonly role",
    ///         PrincipalIds = new[]
    ///         {
    ///             readonlyBoundaryUser.Id,
    ///         },
    ///         GrantStrings = new[]
    ///         {
    ///             "id=*;type=*;actions=read",
    ///         },
    ///         ScopeId = org.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// Usage for a project-specific role:
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Boundary = Katasec.Boundary;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var org = new Boundary.BoundaryScope("org", new()
    ///     {
    ///         Description = "My first scope!",
    ///         ScopeId = "global",
    ///         AutoCreateAdminRole = true,
    ///         AutoCreateDefaultRole = true,
    ///     });
    /// 
    ///     var project = new Boundary.BoundaryScope("project", new()
    ///     {
    ///         Description = "My first scope!",
    ///         ScopeId = org.Id,
    ///         AutoCreateAdminRole = true,
    ///     });
    /// 
    ///     var readonlyBoundaryUser = new Boundary.BoundaryUser("readonlyBoundaryUser", new()
    ///     {
    ///         Description = "A readonly user",
    ///         ScopeId = org.Id,
    ///     });
    /// 
    ///     var readonlyBoundaryRole = new Boundary.BoundaryRole("readonlyBoundaryRole", new()
    ///     {
    ///         Description = "A readonly role",
    ///         PrincipalIds = new[]
    ///         {
    ///             readonlyBoundaryUser.Id,
    ///         },
    ///         GrantStrings = new[]
    ///         {
    ///             "id=*;type=*;actions=read",
    ///         },
    ///         ScopeId = project.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import boundary:index/boundaryRole:BoundaryRole foo &lt;my-id&gt;
    /// ```
    /// </summary>
    [BoundaryResourceType("boundary:index/boundaryRole:BoundaryRole")]
    public partial class BoundaryRole : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The role description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("grantScopeId")]
        public Output<string> GrantScopeId { get; private set; } = null!;

        /// <summary>
        /// A list of stringified grants for the role.
        /// </summary>
        [Output("grantStrings")]
        public Output<ImmutableArray<string>> GrantStrings { get; private set; } = null!;

        /// <summary>
        /// The role name. Defaults to the resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A list of principal (user or group) IDs to add as principals on the role.
        /// </summary>
        [Output("principalIds")]
        public Output<ImmutableArray<string>> PrincipalIds { get; private set; } = null!;

        /// <summary>
        /// The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.
        /// </summary>
        [Output("scopeId")]
        public Output<string> ScopeId { get; private set; } = null!;


        /// <summary>
        /// Create a BoundaryRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BoundaryRole(string name, BoundaryRoleArgs args, CustomResourceOptions? options = null)
            : base("boundary:index/boundaryRole:BoundaryRole", name, args ?? new BoundaryRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BoundaryRole(string name, Input<string> id, BoundaryRoleState? state = null, CustomResourceOptions? options = null)
            : base("boundary:index/boundaryRole:BoundaryRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/katasec/pulumi-boundary/releases/downloadv${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BoundaryRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BoundaryRole Get(string name, Input<string> id, BoundaryRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new BoundaryRole(name, id, state, options);
        }
    }

    public sealed class BoundaryRoleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The role description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("grantScopeId")]
        public Input<string>? GrantScopeId { get; set; }

        [Input("grantStrings")]
        private InputList<string>? _grantStrings;

        /// <summary>
        /// A list of stringified grants for the role.
        /// </summary>
        public InputList<string> GrantStrings
        {
            get => _grantStrings ?? (_grantStrings = new InputList<string>());
            set => _grantStrings = value;
        }

        /// <summary>
        /// The role name. Defaults to the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("principalIds")]
        private InputList<string>? _principalIds;

        /// <summary>
        /// A list of principal (user or group) IDs to add as principals on the role.
        /// </summary>
        public InputList<string> PrincipalIds
        {
            get => _principalIds ?? (_principalIds = new InputList<string>());
            set => _principalIds = value;
        }

        /// <summary>
        /// The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.
        /// </summary>
        [Input("scopeId", required: true)]
        public Input<string> ScopeId { get; set; } = null!;

        public BoundaryRoleArgs()
        {
        }
        public static new BoundaryRoleArgs Empty => new BoundaryRoleArgs();
    }

    public sealed class BoundaryRoleState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The role description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("grantScopeId")]
        public Input<string>? GrantScopeId { get; set; }

        [Input("grantStrings")]
        private InputList<string>? _grantStrings;

        /// <summary>
        /// A list of stringified grants for the role.
        /// </summary>
        public InputList<string> GrantStrings
        {
            get => _grantStrings ?? (_grantStrings = new InputList<string>());
            set => _grantStrings = value;
        }

        /// <summary>
        /// The role name. Defaults to the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("principalIds")]
        private InputList<string>? _principalIds;

        /// <summary>
        /// A list of principal (user or group) IDs to add as principals on the role.
        /// </summary>
        public InputList<string> PrincipalIds
        {
            get => _principalIds ?? (_principalIds = new InputList<string>());
            set => _principalIds = value;
        }

        /// <summary>
        /// The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.
        /// </summary>
        [Input("scopeId")]
        public Input<string>? ScopeId { get; set; }

        public BoundaryRoleState()
        {
        }
        public static new BoundaryRoleState Empty => new BoundaryRoleState();
    }
}
