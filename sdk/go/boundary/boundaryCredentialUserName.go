// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The username/password credential resource allows you to configure a credential using a username and password pair.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/katasec/pulumi-boundary/sdk/go/boundary"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			org, err := boundary.NewBoundaryScope(ctx, "org", &boundary.BoundaryScopeArgs{
//				Description:           pulumi.String("global scope"),
//				ScopeId:               pulumi.String("global"),
//				AutoCreateAdminRole:   pulumi.Bool(true),
//				AutoCreateDefaultRole: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			project, err := boundary.NewBoundaryScope(ctx, "project", &boundary.BoundaryScopeArgs{
//				Description:         pulumi.String("My first scope!"),
//				ScopeId:             org.ID(),
//				AutoCreateAdminRole: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			exampleBoundaryCredentialStoreStatic, err := boundary.NewBoundaryCredentialStoreStatic(ctx, "exampleBoundaryCredentialStoreStatic", &boundary.BoundaryCredentialStoreStaticArgs{
//				Description: pulumi.String("My first static credential store!"),
//				ScopeId:     project.ID(),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = boundary.NewBoundaryCredentialUserName(ctx, "exampleBoundaryCredentialUserName", &boundary.BoundaryCredentialUserNameArgs{
//				Description:       pulumi.String("My first username password credential!"),
//				CredentialStoreId: exampleBoundaryCredentialStoreStatic.ID(),
//				Username:          pulumi.String("my-username"),
//				Password:          pulumi.String("my-password"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import boundary:index/boundaryCredentialUserName:BoundaryCredentialUserName example_username_password <my-id>
//
// ```
type BoundaryCredentialUserName struct {
	pulumi.CustomResourceState

	// The credential store in which to save this username/password credential.
	CredentialStoreId pulumi.StringOutput `pulumi:"credentialStoreId"`
	// The description of this username/password credential.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of this username/password credential. Defaults to the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The password of this username/password credential.
	Password pulumi.StringOutput `pulumi:"password"`
	// The password hmac.
	PasswordHmac pulumi.StringOutput `pulumi:"passwordHmac"`
	// The username of this username/password credential.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewBoundaryCredentialUserName registers a new resource with the given unique name, arguments, and options.
func NewBoundaryCredentialUserName(ctx *pulumi.Context,
	name string, args *BoundaryCredentialUserNameArgs, opts ...pulumi.ResourceOption) (*BoundaryCredentialUserName, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CredentialStoreId == nil {
		return nil, errors.New("invalid value for required argument 'CredentialStoreId'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource BoundaryCredentialUserName
	err := ctx.RegisterResource("boundary:index/boundaryCredentialUserName:BoundaryCredentialUserName", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetBoundaryCredentialUserName gets an existing BoundaryCredentialUserName resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetBoundaryCredentialUserName(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *BoundaryCredentialUserNameState, opts ...pulumi.ResourceOption) (*BoundaryCredentialUserName, error) {
	var resource BoundaryCredentialUserName
	err := ctx.ReadResource("boundary:index/boundaryCredentialUserName:BoundaryCredentialUserName", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering BoundaryCredentialUserName resources.
type boundaryCredentialUserNameState struct {
	// The credential store in which to save this username/password credential.
	CredentialStoreId *string `pulumi:"credentialStoreId"`
	// The description of this username/password credential.
	Description *string `pulumi:"description"`
	// The name of this username/password credential. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The password of this username/password credential.
	Password *string `pulumi:"password"`
	// The password hmac.
	PasswordHmac *string `pulumi:"passwordHmac"`
	// The username of this username/password credential.
	Username *string `pulumi:"username"`
}

type BoundaryCredentialUserNameState struct {
	// The credential store in which to save this username/password credential.
	CredentialStoreId pulumi.StringPtrInput
	// The description of this username/password credential.
	Description pulumi.StringPtrInput
	// The name of this username/password credential. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The password of this username/password credential.
	Password pulumi.StringPtrInput
	// The password hmac.
	PasswordHmac pulumi.StringPtrInput
	// The username of this username/password credential.
	Username pulumi.StringPtrInput
}

func (BoundaryCredentialUserNameState) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryCredentialUserNameState)(nil)).Elem()
}

type boundaryCredentialUserNameArgs struct {
	// The credential store in which to save this username/password credential.
	CredentialStoreId string `pulumi:"credentialStoreId"`
	// The description of this username/password credential.
	Description *string `pulumi:"description"`
	// The name of this username/password credential. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The password of this username/password credential.
	Password string `pulumi:"password"`
	// The username of this username/password credential.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a BoundaryCredentialUserName resource.
type BoundaryCredentialUserNameArgs struct {
	// The credential store in which to save this username/password credential.
	CredentialStoreId pulumi.StringInput
	// The description of this username/password credential.
	Description pulumi.StringPtrInput
	// The name of this username/password credential. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The password of this username/password credential.
	Password pulumi.StringInput
	// The username of this username/password credential.
	Username pulumi.StringInput
}

func (BoundaryCredentialUserNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*boundaryCredentialUserNameArgs)(nil)).Elem()
}

type BoundaryCredentialUserNameInput interface {
	pulumi.Input

	ToBoundaryCredentialUserNameOutput() BoundaryCredentialUserNameOutput
	ToBoundaryCredentialUserNameOutputWithContext(ctx context.Context) BoundaryCredentialUserNameOutput
}

func (*BoundaryCredentialUserName) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryCredentialUserName)(nil)).Elem()
}

func (i *BoundaryCredentialUserName) ToBoundaryCredentialUserNameOutput() BoundaryCredentialUserNameOutput {
	return i.ToBoundaryCredentialUserNameOutputWithContext(context.Background())
}

func (i *BoundaryCredentialUserName) ToBoundaryCredentialUserNameOutputWithContext(ctx context.Context) BoundaryCredentialUserNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryCredentialUserNameOutput)
}

// BoundaryCredentialUserNameArrayInput is an input type that accepts BoundaryCredentialUserNameArray and BoundaryCredentialUserNameArrayOutput values.
// You can construct a concrete instance of `BoundaryCredentialUserNameArrayInput` via:
//
//	BoundaryCredentialUserNameArray{ BoundaryCredentialUserNameArgs{...} }
type BoundaryCredentialUserNameArrayInput interface {
	pulumi.Input

	ToBoundaryCredentialUserNameArrayOutput() BoundaryCredentialUserNameArrayOutput
	ToBoundaryCredentialUserNameArrayOutputWithContext(context.Context) BoundaryCredentialUserNameArrayOutput
}

type BoundaryCredentialUserNameArray []BoundaryCredentialUserNameInput

func (BoundaryCredentialUserNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryCredentialUserName)(nil)).Elem()
}

func (i BoundaryCredentialUserNameArray) ToBoundaryCredentialUserNameArrayOutput() BoundaryCredentialUserNameArrayOutput {
	return i.ToBoundaryCredentialUserNameArrayOutputWithContext(context.Background())
}

func (i BoundaryCredentialUserNameArray) ToBoundaryCredentialUserNameArrayOutputWithContext(ctx context.Context) BoundaryCredentialUserNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryCredentialUserNameArrayOutput)
}

// BoundaryCredentialUserNameMapInput is an input type that accepts BoundaryCredentialUserNameMap and BoundaryCredentialUserNameMapOutput values.
// You can construct a concrete instance of `BoundaryCredentialUserNameMapInput` via:
//
//	BoundaryCredentialUserNameMap{ "key": BoundaryCredentialUserNameArgs{...} }
type BoundaryCredentialUserNameMapInput interface {
	pulumi.Input

	ToBoundaryCredentialUserNameMapOutput() BoundaryCredentialUserNameMapOutput
	ToBoundaryCredentialUserNameMapOutputWithContext(context.Context) BoundaryCredentialUserNameMapOutput
}

type BoundaryCredentialUserNameMap map[string]BoundaryCredentialUserNameInput

func (BoundaryCredentialUserNameMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryCredentialUserName)(nil)).Elem()
}

func (i BoundaryCredentialUserNameMap) ToBoundaryCredentialUserNameMapOutput() BoundaryCredentialUserNameMapOutput {
	return i.ToBoundaryCredentialUserNameMapOutputWithContext(context.Background())
}

func (i BoundaryCredentialUserNameMap) ToBoundaryCredentialUserNameMapOutputWithContext(ctx context.Context) BoundaryCredentialUserNameMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BoundaryCredentialUserNameMapOutput)
}

type BoundaryCredentialUserNameOutput struct{ *pulumi.OutputState }

func (BoundaryCredentialUserNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BoundaryCredentialUserName)(nil)).Elem()
}

func (o BoundaryCredentialUserNameOutput) ToBoundaryCredentialUserNameOutput() BoundaryCredentialUserNameOutput {
	return o
}

func (o BoundaryCredentialUserNameOutput) ToBoundaryCredentialUserNameOutputWithContext(ctx context.Context) BoundaryCredentialUserNameOutput {
	return o
}

// The credential store in which to save this username/password credential.
func (o BoundaryCredentialUserNameOutput) CredentialStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCredentialUserName) pulumi.StringOutput { return v.CredentialStoreId }).(pulumi.StringOutput)
}

// The description of this username/password credential.
func (o BoundaryCredentialUserNameOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BoundaryCredentialUserName) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of this username/password credential. Defaults to the resource name.
func (o BoundaryCredentialUserNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCredentialUserName) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The password of this username/password credential.
func (o BoundaryCredentialUserNameOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCredentialUserName) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// The password hmac.
func (o BoundaryCredentialUserNameOutput) PasswordHmac() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCredentialUserName) pulumi.StringOutput { return v.PasswordHmac }).(pulumi.StringOutput)
}

// The username of this username/password credential.
func (o BoundaryCredentialUserNameOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *BoundaryCredentialUserName) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type BoundaryCredentialUserNameArrayOutput struct{ *pulumi.OutputState }

func (BoundaryCredentialUserNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*BoundaryCredentialUserName)(nil)).Elem()
}

func (o BoundaryCredentialUserNameArrayOutput) ToBoundaryCredentialUserNameArrayOutput() BoundaryCredentialUserNameArrayOutput {
	return o
}

func (o BoundaryCredentialUserNameArrayOutput) ToBoundaryCredentialUserNameArrayOutputWithContext(ctx context.Context) BoundaryCredentialUserNameArrayOutput {
	return o
}

func (o BoundaryCredentialUserNameArrayOutput) Index(i pulumi.IntInput) BoundaryCredentialUserNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *BoundaryCredentialUserName {
		return vs[0].([]*BoundaryCredentialUserName)[vs[1].(int)]
	}).(BoundaryCredentialUserNameOutput)
}

type BoundaryCredentialUserNameMapOutput struct{ *pulumi.OutputState }

func (BoundaryCredentialUserNameMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*BoundaryCredentialUserName)(nil)).Elem()
}

func (o BoundaryCredentialUserNameMapOutput) ToBoundaryCredentialUserNameMapOutput() BoundaryCredentialUserNameMapOutput {
	return o
}

func (o BoundaryCredentialUserNameMapOutput) ToBoundaryCredentialUserNameMapOutputWithContext(ctx context.Context) BoundaryCredentialUserNameMapOutput {
	return o
}

func (o BoundaryCredentialUserNameMapOutput) MapIndex(k pulumi.StringInput) BoundaryCredentialUserNameOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *BoundaryCredentialUserName {
		return vs[0].(map[string]*BoundaryCredentialUserName)[vs[1].(string)]
	}).(BoundaryCredentialUserNameOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryCredentialUserNameInput)(nil)).Elem(), &BoundaryCredentialUserName{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryCredentialUserNameArrayInput)(nil)).Elem(), BoundaryCredentialUserNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*BoundaryCredentialUserNameMapInput)(nil)).Elem(), BoundaryCredentialUserNameMap{})
	pulumi.RegisterOutputType(BoundaryCredentialUserNameOutput{})
	pulumi.RegisterOutputType(BoundaryCredentialUserNameArrayOutput{})
	pulumi.RegisterOutputType(BoundaryCredentialUserNameMapOutput{})
}
