// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace Katasec.Boundary
{
    /// <summary>
    /// Deprecated: use `boundary.BoundaryHostStatic` instead.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Boundary = Katasec.Boundary;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var org = new Boundary.BoundaryScope("org", new()
    ///     {
    ///         Description = "My first scope!",
    ///         ScopeId = "global",
    ///         AutoCreateAdminRole = true,
    ///         AutoCreateDefaultRole = true,
    ///     });
    /// 
    ///     var project = new Boundary.BoundaryScope("project", new()
    ///     {
    ///         Description = "My first scope!",
    ///         ScopeId = org.Id,
    ///         AutoCreateAdminRole = true,
    ///     });
    /// 
    ///     var @static = new Boundary.BoundaryHostCatalog("static", new()
    ///     {
    ///         Description = "My first host catalog!",
    ///         Type = "static",
    ///         ScopeId = project.Id,
    ///     });
    /// 
    ///     var example = new Boundary.BoundaryHost("example", new()
    ///     {
    ///         Type = "static",
    ///         Description = "My first host!",
    ///         Address = "10.0.0.1",
    ///         HostCatalogId = @static.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import boundary:index/boundaryHost:BoundaryHost foo &lt;my-id&gt;
    /// ```
    /// </summary>
    [BoundaryResourceType("boundary:index/boundaryHost:BoundaryHost")]
    public partial class BoundaryHost : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The static address of the host resource as `&lt;IP&gt;` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.
        /// </summary>
        [Output("address")]
        public Output<string?> Address { get; private set; } = null!;

        /// <summary>
        /// The host description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        [Output("hostCatalogId")]
        public Output<string> HostCatalogId { get; private set; } = null!;

        /// <summary>
        /// The host name. Defaults to the resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The type of host
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a BoundaryHost resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BoundaryHost(string name, BoundaryHostArgs args, CustomResourceOptions? options = null)
            : base("boundary:index/boundaryHost:BoundaryHost", name, args ?? new BoundaryHostArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BoundaryHost(string name, Input<string> id, BoundaryHostState? state = null, CustomResourceOptions? options = null)
            : base("boundary:index/boundaryHost:BoundaryHost", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/katasec/pulumi-boundary/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BoundaryHost resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BoundaryHost Get(string name, Input<string> id, BoundaryHostState? state = null, CustomResourceOptions? options = null)
        {
            return new BoundaryHost(name, id, state, options);
        }
    }

    public sealed class BoundaryHostArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The static address of the host resource as `&lt;IP&gt;` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// The host description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("hostCatalogId", required: true)]
        public Input<string> HostCatalogId { get; set; } = null!;

        /// <summary>
        /// The host name. Defaults to the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The type of host
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public BoundaryHostArgs()
        {
        }
        public static new BoundaryHostArgs Empty => new BoundaryHostArgs();
    }

    public sealed class BoundaryHostState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The static address of the host resource as `&lt;IP&gt;` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.
        /// </summary>
        [Input("address")]
        public Input<string>? Address { get; set; }

        /// <summary>
        /// The host description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("hostCatalogId")]
        public Input<string>? HostCatalogId { get; set; }

        /// <summary>
        /// The host name. Defaults to the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The type of host
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public BoundaryHostState()
        {
        }
        public static new BoundaryHostState Empty => new BoundaryHostState();
    }
}
