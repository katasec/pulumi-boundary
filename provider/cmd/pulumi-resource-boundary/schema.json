{
    "name": "boundary",
    "displayName": "Hashicorp Boundary",
    "description": "A Pulumi package for creating and managing boundary cloud resources.",
    "keywords": [
        "pulumi",
        "boundary",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`boundary` Terraform Provider](https://github.com/hashicorp/terraform-provider-boundary).",
    "repository": "https://github.com/katasec/pulumi-boundary",
    "logoUrl": "https://www.datocms-assets.com/2885/1620155080-brandhcboundaryprimaryattributedcolor.svg",
    "pluginDownloadURL": "https://github.com/katasec/pulumi-boundary/releases/downloadv${VERSION}",
    "publisher": "Katasec",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "rootNamespace": "Katasec"
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/katasec/pulumi-boundary/sdk/go/boundary"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing boundary cloud resources.",
            "packageName": "@katasec/boundary",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/hashicorp/terraform-provider-boundary)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-boundary` repo](https://github.com/katasec/pulumi-boundary/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-boundary` repo](https://github.com/hashicorp/terraform-provider-boundary/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "packageName": "katasec_boundary",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/hashicorp/terraform-provider-boundary)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-boundary` repo](https://github.com/katasec/pulumi-boundary/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-boundary` repo](https://github.com/hashicorp/terraform-provider-boundary/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "addr": {
                "type": "string",
                "description": "The base url of the Boundary API, e.g. \"http://127.0.0.1:9200\". If not set, it will be read from the \"BOUNDARY_ADDR\" env\nvar.\n"
            },
            "authMethodId": {
                "type": "string",
                "description": "The auth method ID e.g. ampw_1234567890\n"
            },
            "passwordAuthMethodLoginName": {
                "type": "string",
                "description": "The auth method login name for password-style auth methods\n"
            },
            "passwordAuthMethodPassword": {
                "type": "string",
                "description": "The auth method password for password-style auth methods\n"
            },
            "recoveryKmsHcl": {
                "type": "string",
                "description": "Can be a heredoc string or a path on disk. If set, the string/file will be parsed as HCL and used with the recovery KMS\nmechanism. While this is set, it will override any other authentication information; the KMS mechanism will always be\nused. See Boundary's KMS docs for examples: https://boundaryproject.io/docs/configuration/kms\n"
            },
            "tlsInsecure": {
                "type": "boolean",
                "description": "When set to true, does not validate the Boundary API endpoint certificate\n"
            },
            "token": {
                "type": "string",
                "description": "The Boundary token to use, as a string or path on disk containing just the string. If set, the token read here will be\nused in place of authenticating with the auth method specified in \"auth_method_id\", although the recovery KMS mechanism\nwill still override this. Can also be set with the BOUNDARY_TOKEN environment variable.\n"
            }
        },
        "defaults": [
            "addr"
        ]
    },
    "provider": {
        "description": "The provider type for the boundary package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "addr": {
                "type": "string",
                "description": "The base url of the Boundary API, e.g. \"http://127.0.0.1:9200\". If not set, it will be read from the \"BOUNDARY_ADDR\" env\nvar.\n"
            },
            "authMethodId": {
                "type": "string",
                "description": "The auth method ID e.g. ampw_1234567890\n"
            },
            "passwordAuthMethodLoginName": {
                "type": "string",
                "description": "The auth method login name for password-style auth methods\n"
            },
            "passwordAuthMethodPassword": {
                "type": "string",
                "description": "The auth method password for password-style auth methods\n"
            },
            "recoveryKmsHcl": {
                "type": "string",
                "description": "Can be a heredoc string or a path on disk. If set, the string/file will be parsed as HCL and used with the recovery KMS\nmechanism. While this is set, it will override any other authentication information; the KMS mechanism will always be\nused. See Boundary's KMS docs for examples: https://boundaryproject.io/docs/configuration/kms\n"
            },
            "tlsInsecure": {
                "type": "boolean",
                "description": "When set to true, does not validate the Boundary API endpoint certificate\n"
            },
            "token": {
                "type": "string",
                "description": "The Boundary token to use, as a string or path on disk containing just the string. If set, the token read here will be\nused in place of authenticating with the auth method specified in \"auth_method_id\", although the recovery KMS mechanism\nwill still override this. Can also be set with the BOUNDARY_TOKEN environment variable.\n"
            }
        },
        "required": [
            "addr"
        ],
        "inputProperties": {
            "addr": {
                "type": "string",
                "description": "The base url of the Boundary API, e.g. \"http://127.0.0.1:9200\". If not set, it will be read from the \"BOUNDARY_ADDR\" env\nvar.\n"
            },
            "authMethodId": {
                "type": "string",
                "description": "The auth method ID e.g. ampw_1234567890\n"
            },
            "passwordAuthMethodLoginName": {
                "type": "string",
                "description": "The auth method login name for password-style auth methods\n"
            },
            "passwordAuthMethodPassword": {
                "type": "string",
                "description": "The auth method password for password-style auth methods\n"
            },
            "recoveryKmsHcl": {
                "type": "string",
                "description": "Can be a heredoc string or a path on disk. If set, the string/file will be parsed as HCL and used with the recovery KMS\nmechanism. While this is set, it will override any other authentication information; the KMS mechanism will always be\nused. See Boundary's KMS docs for examples: https://boundaryproject.io/docs/configuration/kms\n"
            },
            "tlsInsecure": {
                "type": "boolean",
                "description": "When set to true, does not validate the Boundary API endpoint certificate\n"
            },
            "token": {
                "type": "string",
                "description": "The Boundary token to use, as a string or path on disk containing just the string. If set, the token read here will be\nused in place of authenticating with the auth method specified in \"auth_method_id\", although the recovery KMS mechanism\nwill still override this. Can also be set with the BOUNDARY_TOKEN environment variable.\n"
            }
        },
        "requiredInputs": [
            "addr"
        ]
    },
    "resources": {
        "boundary:index/boundaryAccount:BoundaryAccount": {
            "description": "Deprecated: use `boundary.BoundaryAccountPassword` instead.\n",
            "properties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "loginName": {
                    "type": "string",
                    "description": "The login name for this account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The account password. Only set on create, changes will not be reflected when updating account.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n"
                }
            },
            "required": [
                "authMethodId",
                "name",
                "type"
            ],
            "inputProperties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "loginName": {
                    "type": "string",
                    "description": "The login name for this account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The account password. Only set on create, changes will not be reflected when updating account.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "authMethodId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryAccount resources.\n",
                "properties": {
                    "authMethodId": {
                        "type": "string",
                        "description": "The resource ID for the auth method.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The account description.\n"
                    },
                    "loginName": {
                        "type": "string",
                        "description": "The login name for this account.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The account name. Defaults to the resource name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The account password. Only set on create, changes will not be reflected when updating account.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The resource type.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryAccountOidc:BoundaryAccountOidc": {
            "description": "The account resource allows you to configure a Boundary account.\n",
            "properties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The OIDC issuer.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The OIDC subject.\n"
                }
            },
            "required": [
                "authMethodId",
                "name"
            ],
            "inputProperties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The OIDC issuer.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The OIDC subject.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "authMethodId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryAccountOidc resources.\n",
                "properties": {
                    "authMethodId": {
                        "type": "string",
                        "description": "The resource ID for the auth method.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The account description.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The OIDC issuer.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The account name. Defaults to the resource name.\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "The OIDC subject.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryAccountPassword:BoundaryAccountPassword": {
            "description": "The account resource allows you to configure a Boundary account.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst password = new boundary.BoundaryAuthMethod(\"password\", {\n    scopeId: org.id,\n    type: \"password\",\n});\nconst jeff = new boundary.BoundaryAccountPassword(\"jeff\", {\n    authMethodId: password.id,\n    type: \"password\",\n    loginName: \"jeff\",\n    password: `$uper$ecure`,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\npassword = boundary.BoundaryAuthMethod(\"password\",\n    scope_id=org.id,\n    type=\"password\")\njeff = boundary.BoundaryAccountPassword(\"jeff\",\n    auth_method_id=password.id,\n    type=\"password\",\n    login_name=\"jeff\",\n    password=\"$uper$ecure\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var password = new Boundary.BoundaryAuthMethod(\"password\", new()\n    {\n        ScopeId = org.Id,\n        Type = \"password\",\n    });\n\n    var jeff = new Boundary.BoundaryAccountPassword(\"jeff\", new()\n    {\n        AuthMethodId = password.Id,\n        Type = \"password\",\n        LoginName = \"jeff\",\n        Password = \"$uper$ecure\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tpassword, err := boundary.NewBoundaryAuthMethod(ctx, \"password\", \u0026boundary.BoundaryAuthMethodArgs{\n\t\t\tScopeId: org.ID(),\n\t\t\tType:    pulumi.String(\"password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryAccountPassword(ctx, \"jeff\", \u0026boundary.BoundaryAccountPasswordArgs{\n\t\t\tAuthMethodId: password.ID(),\n\t\t\tType:         pulumi.String(\"password\"),\n\t\t\tLoginName:    pulumi.String(\"jeff\"),\n\t\t\tPassword:     pulumi.String(fmt.Sprintf(\"$uper$ecure\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryAuthMethod;\nimport com.pulumi.boundary.BoundaryAuthMethodArgs;\nimport com.pulumi.boundary.BoundaryAccountPassword;\nimport com.pulumi.boundary.BoundaryAccountPasswordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var password = new BoundaryAuthMethod(\"password\", BoundaryAuthMethodArgs.builder()        \n            .scopeId(org.id())\n            .type(\"password\")\n            .build());\n\n        var jeff = new BoundaryAccountPassword(\"jeff\", BoundaryAccountPasswordArgs.builder()        \n            .authMethodId(password.id())\n            .type(\"password\")\n            .loginName(\"jeff\")\n            .password(\"$uper$ecure\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  password:\n    type: boundary:BoundaryAuthMethod\n    properties:\n      scopeId: ${org.id}\n      type: password\n  jeff:\n    type: boundary:BoundaryAccountPassword\n    properties:\n      authMethodId: ${password.id}\n      type: password\n      loginName: jeff\n      password: $uper$ecure\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryAccountPassword:BoundaryAccountPassword foo \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "loginName": {
                    "type": "string",
                    "description": "The login name for this account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The account password. Only set on create, changes will not be reflected when updating account.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n"
                }
            },
            "required": [
                "authMethodId",
                "name",
                "type"
            ],
            "inputProperties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "loginName": {
                    "type": "string",
                    "description": "The login name for this account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The account password. Only set on create, changes will not be reflected when updating account.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "authMethodId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryAccountPassword resources.\n",
                "properties": {
                    "authMethodId": {
                        "type": "string",
                        "description": "The resource ID for the auth method.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The account description.\n"
                    },
                    "loginName": {
                        "type": "string",
                        "description": "The login name for this account.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The account name. Defaults to the resource name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The account password. Only set on create, changes will not be reflected when updating account.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The resource type.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryAuthMethod:BoundaryAuthMethod": {
            "description": "The auth method resource allows you to configure a Boundary auth_method.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst password = new boundary.BoundaryAuthMethod(\"password\", {\n    scopeId: org.id,\n    type: \"password\",\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\npassword = boundary.BoundaryAuthMethod(\"password\",\n    scope_id=org.id,\n    type=\"password\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var password = new Boundary.BoundaryAuthMethod(\"password\", new()\n    {\n        ScopeId = org.Id,\n        Type = \"password\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryAuthMethod(ctx, \"password\", \u0026boundary.BoundaryAuthMethodArgs{\n\t\t\tScopeId: org.ID(),\n\t\t\tType:    pulumi.String(\"password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryAuthMethod;\nimport com.pulumi.boundary.BoundaryAuthMethodArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var password = new BoundaryAuthMethod(\"password\", BoundaryAuthMethodArgs.builder()        \n            .scopeId(org.id())\n            .type(\"password\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  password:\n    type: boundary:BoundaryAuthMethod\n    properties:\n      scopeId: ${org.id}\n      type: password\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryAuthMethod:BoundaryAuthMethod foo \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "minLoginNameLength": {
                    "type": "integer",
                    "description": "The minimum login name length.\n",
                    "deprecationMessage": "Will be removed in favor of using attributes parameter"
                },
                "minPasswordLength": {
                    "type": "integer",
                    "description": "The minimum password length.\n",
                    "deprecationMessage": "Will be removed in favor of using attributes parameter"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n"
                }
            },
            "required": [
                "minLoginNameLength",
                "minPasswordLength",
                "name",
                "scopeId",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "minLoginNameLength": {
                    "type": "integer",
                    "description": "The minimum login name length.\n",
                    "deprecationMessage": "Will be removed in favor of using attributes parameter"
                },
                "minPasswordLength": {
                    "type": "integer",
                    "description": "The minimum password length.\n",
                    "deprecationMessage": "Will be removed in favor of using attributes parameter"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryAuthMethod resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The auth method description.\n"
                    },
                    "minLoginNameLength": {
                        "type": "integer",
                        "description": "The minimum login name length.\n",
                        "deprecationMessage": "Will be removed in favor of using attributes parameter"
                    },
                    "minPasswordLength": {
                        "type": "integer",
                        "description": "The minimum password length.\n",
                        "deprecationMessage": "Will be removed in favor of using attributes parameter"
                    },
                    "name": {
                        "type": "string",
                        "description": "The auth method name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The resource type.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryAuthMethodOidc:BoundaryAuthMethodOidc": {
            "description": "The OIDC auth method resource allows you to configure a Boundary auth_method_oidc.\n",
            "properties": {
                "accountClaimMaps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Account claim maps for the to_claim of sub.\n"
                },
                "allowedAudiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Audiences for which the provider responses will be allowed\n"
                },
                "apiUrlPrefix": {
                    "type": "string",
                    "description": "The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller.\n"
                },
                "callbackUrl": {
                    "type": "string",
                    "description": "The URL that should be provided to the IdP for callbacks.\n"
                },
                "claimsScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Claims scopes.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID assigned to this auth method from the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The secret key assigned to this auth method from the provider. Once set, only the hash will be kept and the original value can be removed from configuration.\n"
                },
                "clientSecretHmac": {
                    "type": "string",
                    "description": "The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "disableDiscoveredConfigValidation": {
                    "type": "boolean",
                    "description": "Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time.\n"
                },
                "idpCaCerts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of CA certificates to trust when validating the IdP's token signatures.\n"
                },
                "isPrimaryForScope": {
                    "type": "boolean",
                    "description": "When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an OIDC account.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The issuer corresponding to the provider, which must match the issuer field in generated tokens.\n"
                },
                "maxAge": {
                    "type": "integer",
                    "description": "The max age to provide to the provider, indicating how much time is allowed to have passed since the last authentication before the user is challenged again.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n"
                },
                "signingAlgorithms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed signing algorithms for the provider's issued tokens.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Can be one of 'inactive', 'active-private', or 'active-public'. Currently automatically set to active-public.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of auth method; hardcoded.\n"
                }
            },
            "required": [
                "callbackUrl",
                "clientSecretHmac",
                "name",
                "scopeId",
                "state"
            ],
            "inputProperties": {
                "accountClaimMaps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Account claim maps for the to_claim of sub.\n",
                    "willReplaceOnChanges": true
                },
                "allowedAudiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Audiences for which the provider responses will be allowed\n"
                },
                "apiUrlPrefix": {
                    "type": "string",
                    "description": "The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller.\n"
                },
                "callbackUrl": {
                    "type": "string",
                    "description": "The URL that should be provided to the IdP for callbacks.\n"
                },
                "claimsScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Claims scopes.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID assigned to this auth method from the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The secret key assigned to this auth method from the provider. Once set, only the hash will be kept and the original value can be removed from configuration.\n"
                },
                "clientSecretHmac": {
                    "type": "string",
                    "description": "The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "disableDiscoveredConfigValidation": {
                    "type": "boolean",
                    "description": "Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time.\n"
                },
                "idpCaCerts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of CA certificates to trust when validating the IdP's token signatures.\n"
                },
                "isPrimaryForScope": {
                    "type": "boolean",
                    "description": "When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an OIDC account.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The issuer corresponding to the provider, which must match the issuer field in generated tokens.\n"
                },
                "maxAge": {
                    "type": "integer",
                    "description": "The max age to provide to the provider, indicating how much time is allowed to have passed since the last authentication before the user is challenged again.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n",
                    "willReplaceOnChanges": true
                },
                "signingAlgorithms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed signing algorithms for the provider's issued tokens.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Can be one of 'inactive', 'active-private', or 'active-public'. Currently automatically set to active-public.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of auth method; hardcoded.\n"
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryAuthMethodOidc resources.\n",
                "properties": {
                    "accountClaimMaps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Account claim maps for the to_claim of sub.\n",
                        "willReplaceOnChanges": true
                    },
                    "allowedAudiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Audiences for which the provider responses will be allowed\n"
                    },
                    "apiUrlPrefix": {
                        "type": "string",
                        "description": "The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller.\n"
                    },
                    "callbackUrl": {
                        "type": "string",
                        "description": "The URL that should be provided to the IdP for callbacks.\n"
                    },
                    "claimsScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Claims scopes.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "The client ID assigned to this auth method from the provider.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "The secret key assigned to this auth method from the provider. Once set, only the hash will be kept and the original value can be removed from configuration.\n"
                    },
                    "clientSecretHmac": {
                        "type": "string",
                        "description": "The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The auth method description.\n"
                    },
                    "disableDiscoveredConfigValidation": {
                        "type": "boolean",
                        "description": "Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time.\n"
                    },
                    "idpCaCerts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of CA certificates to trust when validating the IdP's token signatures.\n"
                    },
                    "isPrimaryForScope": {
                        "type": "boolean",
                        "description": "When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an OIDC account.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The issuer corresponding to the provider, which must match the issuer field in generated tokens.\n"
                    },
                    "maxAge": {
                        "type": "integer",
                        "description": "The max age to provide to the provider, indicating how much time is allowed to have passed since the last authentication before the user is challenged again.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The auth method name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "signingAlgorithms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Allowed signing algorithms for the provider's issued tokens.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Can be one of 'inactive', 'active-private', or 'active-public'. Currently automatically set to active-public.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of auth method; hardcoded.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryAuthMethodPassword:BoundaryAuthMethodPassword": {
            "description": "The auth method resource allows you to configure a Boundary auth_method_password.\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "minLoginNameLength": {
                    "type": "integer",
                    "description": "The minimum login name length.\n"
                },
                "minPasswordLength": {
                    "type": "integer",
                    "description": "The minimum password length.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The resource type, hardcoded per resource\n"
                }
            },
            "required": [
                "minLoginNameLength",
                "minPasswordLength",
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "minLoginNameLength": {
                    "type": "integer",
                    "description": "The minimum login name length.\n"
                },
                "minPasswordLength": {
                    "type": "integer",
                    "description": "The minimum password length.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The resource type, hardcoded per resource\n"
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryAuthMethodPassword resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The auth method description.\n"
                    },
                    "minLoginNameLength": {
                        "type": "integer",
                        "description": "The minimum login name length.\n"
                    },
                    "minPasswordLength": {
                        "type": "integer",
                        "description": "The minimum password length.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The auth method name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The resource type, hardcoded per resource\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryCredentialLibraryVault:BoundaryCredentialLibraryVault": {
            "description": "The credential library for Vault resource allows you to configure a Boundary credential library for Vault.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.BoundaryScope(\"project\", {\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst fooBoundaryCredentialStoreVault = new boundary.BoundaryCredentialStoreVault(\"fooBoundaryCredentialStoreVault\", {\n    description: \"My first Vault credential store!\",\n    address: \"http://127.0.0.1:8200\",\n    token: \"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n    scopeId: project.id,\n});\nconst fooBoundaryCredentialLibraryVault = new boundary.BoundaryCredentialLibraryVault(\"fooBoundaryCredentialLibraryVault\", {\n    description: \"My first Vault credential library!\",\n    credentialStoreId: fooBoundaryCredentialStoreVault.id,\n    path: \"my/secret/foo\",\n    httpMethod: \"GET\",\n});\nconst bar = new boundary.BoundaryCredentialLibraryVault(\"bar\", {\n    description: \"My second Vault credential library!\",\n    credentialStoreId: fooBoundaryCredentialStoreVault.id,\n    path: \"my/secret/bar\",\n    httpMethod: \"POST\",\n    httpRequestBody: `{\n  \"key\": \"Value\",\n}\n`,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.BoundaryScope(\"project\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nfoo_boundary_credential_store_vault = boundary.BoundaryCredentialStoreVault(\"fooBoundaryCredentialStoreVault\",\n    description=\"My first Vault credential store!\",\n    address=\"http://127.0.0.1:8200\",\n    token=\"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n    scope_id=project.id)\nfoo_boundary_credential_library_vault = boundary.BoundaryCredentialLibraryVault(\"fooBoundaryCredentialLibraryVault\",\n    description=\"My first Vault credential library!\",\n    credential_store_id=foo_boundary_credential_store_vault.id,\n    path=\"my/secret/foo\",\n    http_method=\"GET\")\nbar = boundary.BoundaryCredentialLibraryVault(\"bar\",\n    description=\"My second Vault credential library!\",\n    credential_store_id=foo_boundary_credential_store_vault.id,\n    path=\"my/secret/bar\",\n    http_method=\"POST\",\n    http_request_body=\"\"\"{\n  \"key\": \"Value\",\n}\n\"\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.BoundaryScope(\"project\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var fooBoundaryCredentialStoreVault = new Boundary.BoundaryCredentialStoreVault(\"fooBoundaryCredentialStoreVault\", new()\n    {\n        Description = \"My first Vault credential store!\",\n        Address = \"http://127.0.0.1:8200\",\n        Token = \"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n        ScopeId = project.Id,\n    });\n\n    var fooBoundaryCredentialLibraryVault = new Boundary.BoundaryCredentialLibraryVault(\"fooBoundaryCredentialLibraryVault\", new()\n    {\n        Description = \"My first Vault credential library!\",\n        CredentialStoreId = fooBoundaryCredentialStoreVault.Id,\n        Path = \"my/secret/foo\",\n        HttpMethod = \"GET\",\n    });\n\n    var bar = new Boundary.BoundaryCredentialLibraryVault(\"bar\", new()\n    {\n        Description = \"My second Vault credential library!\",\n        CredentialStoreId = fooBoundaryCredentialStoreVault.Id,\n        Path = \"my/secret/bar\",\n        HttpMethod = \"POST\",\n        HttpRequestBody = @\"{\n  \"\"key\"\": \"\"Value\"\",\n}\n\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewBoundaryScope(ctx, \"project\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfooBoundaryCredentialStoreVault, err := boundary.NewBoundaryCredentialStoreVault(ctx, \"fooBoundaryCredentialStoreVault\", \u0026boundary.BoundaryCredentialStoreVaultArgs{\n\t\t\tDescription: pulumi.String(\"My first Vault credential store!\"),\n\t\t\tAddress:     pulumi.String(\"http://127.0.0.1:8200\"),\n\t\t\tToken:       pulumi.String(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryCredentialLibraryVault(ctx, \"fooBoundaryCredentialLibraryVault\", \u0026boundary.BoundaryCredentialLibraryVaultArgs{\n\t\t\tDescription:       pulumi.String(\"My first Vault credential library!\"),\n\t\t\tCredentialStoreId: fooBoundaryCredentialStoreVault.ID(),\n\t\t\tPath:              pulumi.String(\"my/secret/foo\"),\n\t\t\tHttpMethod:        pulumi.String(\"GET\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryCredentialLibraryVault(ctx, \"bar\", \u0026boundary.BoundaryCredentialLibraryVaultArgs{\n\t\t\tDescription:       pulumi.String(\"My second Vault credential library!\"),\n\t\t\tCredentialStoreId: fooBoundaryCredentialStoreVault.ID(),\n\t\t\tPath:              pulumi.String(\"my/secret/bar\"),\n\t\t\tHttpMethod:        pulumi.String(\"POST\"),\n\t\t\tHttpRequestBody:   pulumi.String(fmt.Sprintf(\"{\\n  \\\"key\\\": \\\"Value\\\",\\n}\\n\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryCredentialStoreVault;\nimport com.pulumi.boundary.BoundaryCredentialStoreVaultArgs;\nimport com.pulumi.boundary.BoundaryCredentialLibraryVault;\nimport com.pulumi.boundary.BoundaryCredentialLibraryVaultArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new BoundaryScope(\"project\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var fooBoundaryCredentialStoreVault = new BoundaryCredentialStoreVault(\"fooBoundaryCredentialStoreVault\", BoundaryCredentialStoreVaultArgs.builder()        \n            .description(\"My first Vault credential store!\")\n            .address(\"http://127.0.0.1:8200\")\n            .token(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\")\n            .scopeId(project.id())\n            .build());\n\n        var fooBoundaryCredentialLibraryVault = new BoundaryCredentialLibraryVault(\"fooBoundaryCredentialLibraryVault\", BoundaryCredentialLibraryVaultArgs.builder()        \n            .description(\"My first Vault credential library!\")\n            .credentialStoreId(fooBoundaryCredentialStoreVault.id())\n            .path(\"my/secret/foo\")\n            .httpMethod(\"GET\")\n            .build());\n\n        var bar = new BoundaryCredentialLibraryVault(\"bar\", BoundaryCredentialLibraryVaultArgs.builder()        \n            .description(\"My second Vault credential library!\")\n            .credentialStoreId(fooBoundaryCredentialStoreVault.id())\n            .path(\"my/secret/bar\")\n            .httpMethod(\"POST\")\n            .httpRequestBody(\"\"\"\n{\n  \"key\": \"Value\",\n}\n            \"\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  fooBoundaryCredentialStoreVault:\n    type: boundary:BoundaryCredentialStoreVault\n    properties:\n      description: My first Vault credential store!\n      address: http://127.0.0.1:8200\n      # change to Vault address\n      token: s.0ufRo6XEGU2jOqnIr7OlFYP5\n      # change to valid Vault token\n      scopeId: ${project.id}\n  fooBoundaryCredentialLibraryVault:\n    type: boundary:BoundaryCredentialLibraryVault\n    properties:\n      description: My first Vault credential library!\n      credentialStoreId: ${fooBoundaryCredentialStoreVault.id}\n      path: my/secret/foo\n      # change to Vault backend path\n      httpMethod: GET\n  bar:\n    type: boundary:BoundaryCredentialLibraryVault\n    properties:\n      description: My second Vault credential library!\n      credentialStoreId: ${fooBoundaryCredentialStoreVault.id}\n      path: my/secret/bar\n      # change to Vault backend path\n      httpMethod: POST\n      httpRequestBody: |\n        {\n          \"key\": \"Value\",\n        }\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryCredentialLibraryVault:BoundaryCredentialLibraryVault foo \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "credentialStoreId": {
                    "type": "string",
                    "description": "The ID of the credential store that this library belongs to.\n"
                },
                "credentialType": {
                    "type": "string",
                    "description": "The type of credential the library generates.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The Vault credential library description.\n"
                },
                "httpMethod": {
                    "type": "string",
                    "description": "The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'\n"
                },
                "httpRequestBody": {
                    "type": "string",
                    "description": "The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `http_method` is set to `POST`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Vault credential library name. Defaults to the resource name.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path in Vault to request credentials from.\n"
                }
            },
            "required": [
                "credentialStoreId",
                "name",
                "path"
            ],
            "inputProperties": {
                "credentialStoreId": {
                    "type": "string",
                    "description": "The ID of the credential store that this library belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "credentialType": {
                    "type": "string",
                    "description": "The type of credential the library generates.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The Vault credential library description.\n"
                },
                "httpMethod": {
                    "type": "string",
                    "description": "The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'\n"
                },
                "httpRequestBody": {
                    "type": "string",
                    "description": "The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `http_method` is set to `POST`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Vault credential library name. Defaults to the resource name.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path in Vault to request credentials from.\n"
                }
            },
            "requiredInputs": [
                "credentialStoreId",
                "path"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryCredentialLibraryVault resources.\n",
                "properties": {
                    "credentialStoreId": {
                        "type": "string",
                        "description": "The ID of the credential store that this library belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "credentialType": {
                        "type": "string",
                        "description": "The type of credential the library generates.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The Vault credential library description.\n"
                    },
                    "httpMethod": {
                        "type": "string",
                        "description": "The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'\n"
                    },
                    "httpRequestBody": {
                        "type": "string",
                        "description": "The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `http_method` is set to `POST`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Vault credential library name. Defaults to the resource name.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "The path in Vault to request credentials from.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryCredentialSshPrivateKey:BoundaryCredentialSshPrivateKey": {
            "description": "The SSH private key credential resource allows you to configure a credential using a username, private key and optional passphrase.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\nimport * as fs from \"fs\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"global scope\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.BoundaryScope(\"project\", {\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst exampleBoundaryCredentialStoreStatic = new boundary.BoundaryCredentialStoreStatic(\"exampleBoundaryCredentialStoreStatic\", {\n    description: \"My first static credential store!\",\n    scopeId: project.id,\n});\nconst exampleBoundaryCredentialSshPrivateKey = new boundary.BoundaryCredentialSshPrivateKey(\"exampleBoundaryCredentialSshPrivateKey\", {\n    description: \"My first ssh private key credential!\",\n    credentialStoreId: exampleBoundaryCredentialStoreStatic.id,\n    username: \"my-username\",\n    privateKey: fs.readFileSync(\"~/.ssh/id_rsa\"),\n    privateKeyPassphrase: \"optional-passphrase\",\n});\n// change to the passphrase of the Private Key if required\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"global scope\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.BoundaryScope(\"project\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nexample_boundary_credential_store_static = boundary.BoundaryCredentialStoreStatic(\"exampleBoundaryCredentialStoreStatic\",\n    description=\"My first static credential store!\",\n    scope_id=project.id)\nexample_boundary_credential_ssh_private_key = boundary.BoundaryCredentialSshPrivateKey(\"exampleBoundaryCredentialSshPrivateKey\",\n    description=\"My first ssh private key credential!\",\n    credential_store_id=example_boundary_credential_store_static.id,\n    username=\"my-username\",\n    private_key=(lambda path: open(path).read())(\"~/.ssh/id_rsa\"),\n    private_key_passphrase=\"optional-passphrase\")\n# change to the passphrase of the Private Key if required\n```\n```csharp\nusing System.Collections.Generic;\nusing System.IO;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"global scope\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.BoundaryScope(\"project\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var exampleBoundaryCredentialStoreStatic = new Boundary.BoundaryCredentialStoreStatic(\"exampleBoundaryCredentialStoreStatic\", new()\n    {\n        Description = \"My first static credential store!\",\n        ScopeId = project.Id,\n    });\n\n    var exampleBoundaryCredentialSshPrivateKey = new Boundary.BoundaryCredentialSshPrivateKey(\"exampleBoundaryCredentialSshPrivateKey\", new()\n    {\n        Description = \"My first ssh private key credential!\",\n        CredentialStoreId = exampleBoundaryCredentialStoreStatic.Id,\n        Username = \"my-username\",\n        PrivateKey = File.ReadAllText(\"~/.ssh/id_rsa\"),\n        PrivateKeyPassphrase = \"optional-passphrase\",\n    });\n\n    // change to the passphrase of the Private Key if required\n});\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"global scope\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewBoundaryScope(ctx, \"project\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleBoundaryCredentialStoreStatic, err := boundary.NewBoundaryCredentialStoreStatic(ctx, \"exampleBoundaryCredentialStoreStatic\", \u0026boundary.BoundaryCredentialStoreStaticArgs{\n\t\t\tDescription: pulumi.String(\"My first static credential store!\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryCredentialSshPrivateKey(ctx, \"exampleBoundaryCredentialSshPrivateKey\", \u0026boundary.BoundaryCredentialSshPrivateKeyArgs{\n\t\t\tDescription:          pulumi.String(\"My first ssh private key credential!\"),\n\t\t\tCredentialStoreId:    exampleBoundaryCredentialStoreStatic.ID(),\n\t\t\tUsername:             pulumi.String(\"my-username\"),\n\t\t\tPrivateKey:           readFileOrPanic(\"~/.ssh/id_rsa\"),\n\t\t\tPrivateKeyPassphrase: pulumi.String(\"optional-passphrase\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryCredentialStoreStatic;\nimport com.pulumi.boundary.BoundaryCredentialStoreStaticArgs;\nimport com.pulumi.boundary.BoundaryCredentialSshPrivateKey;\nimport com.pulumi.boundary.BoundaryCredentialSshPrivateKeyArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"global scope\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new BoundaryScope(\"project\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var exampleBoundaryCredentialStoreStatic = new BoundaryCredentialStoreStatic(\"exampleBoundaryCredentialStoreStatic\", BoundaryCredentialStoreStaticArgs.builder()        \n            .description(\"My first static credential store!\")\n            .scopeId(project.id())\n            .build());\n\n        var exampleBoundaryCredentialSshPrivateKey = new BoundaryCredentialSshPrivateKey(\"exampleBoundaryCredentialSshPrivateKey\", BoundaryCredentialSshPrivateKeyArgs.builder()        \n            .description(\"My first ssh private key credential!\")\n            .credentialStoreId(exampleBoundaryCredentialStoreStatic.id())\n            .username(\"my-username\")\n            .privateKey(Files.readString(Paths.get(\"~/.ssh/id_rsa\")))\n            .privateKeyPassphrase(\"optional-passphrase\")\n            .build());\n\n    }\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryCredentialSshPrivateKey:BoundaryCredentialSshPrivateKey example_ssh_private_key \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "credentialStoreId": {
                    "type": "string",
                    "description": "ID of the credential store this credential belongs to.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the credential. Defaults to the resource name.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key associated with the credential.\n"
                },
                "privateKeyHmac": {
                    "type": "string",
                    "description": "The private key hmac.\n"
                },
                "privateKeyPassphrase": {
                    "type": "string",
                    "description": "The passphrase of the private key associated with the credential.\n"
                },
                "privateKeyPassphraseHmac": {
                    "type": "string",
                    "description": "The private key passphrase hmac.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with the credential.\n"
                }
            },
            "required": [
                "credentialStoreId",
                "name",
                "privateKey",
                "privateKeyHmac",
                "privateKeyPassphraseHmac",
                "username"
            ],
            "inputProperties": {
                "credentialStoreId": {
                    "type": "string",
                    "description": "ID of the credential store this credential belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the credential. Defaults to the resource name.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key associated with the credential.\n"
                },
                "privateKeyPassphrase": {
                    "type": "string",
                    "description": "The passphrase of the private key associated with the credential.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with the credential.\n"
                }
            },
            "requiredInputs": [
                "credentialStoreId",
                "privateKey",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryCredentialSshPrivateKey resources.\n",
                "properties": {
                    "credentialStoreId": {
                        "type": "string",
                        "description": "ID of the credential store this credential belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the credential.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the credential. Defaults to the resource name.\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "The private key associated with the credential.\n"
                    },
                    "privateKeyHmac": {
                        "type": "string",
                        "description": "The private key hmac.\n"
                    },
                    "privateKeyPassphrase": {
                        "type": "string",
                        "description": "The passphrase of the private key associated with the credential.\n"
                    },
                    "privateKeyPassphraseHmac": {
                        "type": "string",
                        "description": "The private key passphrase hmac.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with the credential.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryCredentialStoreStatic:BoundaryCredentialStoreStatic": {
            "description": "The static credential store resource allows you to configure a Boundary static credential store.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"global scope\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.BoundaryScope(\"project\", {\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst example = new boundary.BoundaryCredentialStoreStatic(\"example\", {\n    description: \"My first static credential store!\",\n    scopeId: project.id,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"global scope\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.BoundaryScope(\"project\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nexample = boundary.BoundaryCredentialStoreStatic(\"example\",\n    description=\"My first static credential store!\",\n    scope_id=project.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"global scope\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.BoundaryScope(\"project\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var example = new Boundary.BoundaryCredentialStoreStatic(\"example\", new()\n    {\n        Description = \"My first static credential store!\",\n        ScopeId = project.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"global scope\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewBoundaryScope(ctx, \"project\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryCredentialStoreStatic(ctx, \"example\", \u0026boundary.BoundaryCredentialStoreStaticArgs{\n\t\t\tDescription: pulumi.String(\"My first static credential store!\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryCredentialStoreStatic;\nimport com.pulumi.boundary.BoundaryCredentialStoreStaticArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"global scope\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new BoundaryScope(\"project\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var example = new BoundaryCredentialStoreStatic(\"example\", BoundaryCredentialStoreStaticArgs.builder()        \n            .description(\"My first static credential store!\")\n            .scopeId(project.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: global scope\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  example:\n    type: boundary:BoundaryCredentialStoreStatic\n    properties:\n      description: My first static credential store!\n      scopeId: ${project.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryCredentialStoreStatic:BoundaryCredentialStoreStatic example_static_credential_store \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The static credential store description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The static credential store name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for this credential store.\n"
                }
            },
            "required": [
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The static credential store description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The static credential store name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for this credential store.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryCredentialStoreStatic resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The static credential store description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The static credential store name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope for this credential store.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryCredentialStoreVault:BoundaryCredentialStoreVault": {
            "description": "The credential store for Vault resource allows you to configure a Boundary credential store for Vault.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.BoundaryScope(\"project\", {\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst example = new boundary.BoundaryCredentialStoreVault(\"example\", {\n    description: \"My first Vault credential store!\",\n    address: \"http://127.0.0.1:8200\",\n    token: \"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n    scopeId: project.id,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.BoundaryScope(\"project\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nexample = boundary.BoundaryCredentialStoreVault(\"example\",\n    description=\"My first Vault credential store!\",\n    address=\"http://127.0.0.1:8200\",\n    token=\"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n    scope_id=project.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.BoundaryScope(\"project\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var example = new Boundary.BoundaryCredentialStoreVault(\"example\", new()\n    {\n        Description = \"My first Vault credential store!\",\n        Address = \"http://127.0.0.1:8200\",\n        Token = \"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n        ScopeId = project.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewBoundaryScope(ctx, \"project\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryCredentialStoreVault(ctx, \"example\", \u0026boundary.BoundaryCredentialStoreVaultArgs{\n\t\t\tDescription: pulumi.String(\"My first Vault credential store!\"),\n\t\t\tAddress:     pulumi.String(\"http://127.0.0.1:8200\"),\n\t\t\tToken:       pulumi.String(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryCredentialStoreVault;\nimport com.pulumi.boundary.BoundaryCredentialStoreVaultArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new BoundaryScope(\"project\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var example = new BoundaryCredentialStoreVault(\"example\", BoundaryCredentialStoreVaultArgs.builder()        \n            .description(\"My first Vault credential store!\")\n            .address(\"http://127.0.0.1:8200\")\n            .token(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\")\n            .scopeId(project.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  example:\n    type: boundary:BoundaryCredentialStoreVault\n    properties:\n      description: My first Vault credential store!\n      address: http://127.0.0.1:8200\n      # change to Vault address\n      token: s.0ufRo6XEGU2jOqnIr7OlFYP5\n      # change to valid Vault token\n      scopeId: ${project.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryCredentialStoreVault:BoundaryCredentialStoreVault foo \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The address to Vault server. This should be a complete URL such as 'https://127.0.0.1:8200'\n"
                },
                "caCert": {
                    "type": "string",
                    "description": "A PEM-encoded CA certificate to verify the Vault server's TLS certificate.\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "A PEM-encoded client certificate to use for TLS authentication to the Vault server.\n"
                },
                "clientCertificateKey": {
                    "type": "string",
                    "description": "A PEM-encoded private key matching the client certificate from 'client_certificate'.\n"
                },
                "clientCertificateKeyHmac": {
                    "type": "string",
                    "description": "The Vault client certificate key hmac.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The Vault credential store description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Vault credential store name. Defaults to the resource name.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace within Vault to use.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for this credential store.\n"
                },
                "tlsServerName": {
                    "type": "string",
                    "description": "Name to use as the SNI host when connecting to Vault via TLS.\n"
                },
                "tlsSkipVerify": {
                    "type": "boolean",
                    "description": "Whether or not to skip TLS verification.\n"
                },
                "token": {
                    "type": "string",
                    "description": "A token used for accessing Vault.\n"
                },
                "tokenHmac": {
                    "type": "string",
                    "description": "The Vault token hmac.\n"
                }
            },
            "required": [
                "address",
                "clientCertificateKeyHmac",
                "name",
                "scopeId",
                "token",
                "tokenHmac"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "The address to Vault server. This should be a complete URL such as 'https://127.0.0.1:8200'\n"
                },
                "caCert": {
                    "type": "string",
                    "description": "A PEM-encoded CA certificate to verify the Vault server's TLS certificate.\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "A PEM-encoded client certificate to use for TLS authentication to the Vault server.\n"
                },
                "clientCertificateKey": {
                    "type": "string",
                    "description": "A PEM-encoded private key matching the client certificate from 'client_certificate'.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The Vault credential store description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Vault credential store name. Defaults to the resource name.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace within Vault to use.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for this credential store.\n",
                    "willReplaceOnChanges": true
                },
                "tlsServerName": {
                    "type": "string",
                    "description": "Name to use as the SNI host when connecting to Vault via TLS.\n"
                },
                "tlsSkipVerify": {
                    "type": "boolean",
                    "description": "Whether or not to skip TLS verification.\n"
                },
                "token": {
                    "type": "string",
                    "description": "A token used for accessing Vault.\n"
                }
            },
            "requiredInputs": [
                "address",
                "scopeId",
                "token"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryCredentialStoreVault resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address to Vault server. This should be a complete URL such as 'https://127.0.0.1:8200'\n"
                    },
                    "caCert": {
                        "type": "string",
                        "description": "A PEM-encoded CA certificate to verify the Vault server's TLS certificate.\n"
                    },
                    "clientCertificate": {
                        "type": "string",
                        "description": "A PEM-encoded client certificate to use for TLS authentication to the Vault server.\n"
                    },
                    "clientCertificateKey": {
                        "type": "string",
                        "description": "A PEM-encoded private key matching the client certificate from 'client_certificate'.\n"
                    },
                    "clientCertificateKeyHmac": {
                        "type": "string",
                        "description": "The Vault client certificate key hmac.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The Vault credential store description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Vault credential store name. Defaults to the resource name.\n"
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace within Vault to use.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope for this credential store.\n",
                        "willReplaceOnChanges": true
                    },
                    "tlsServerName": {
                        "type": "string",
                        "description": "Name to use as the SNI host when connecting to Vault via TLS.\n"
                    },
                    "tlsSkipVerify": {
                        "type": "boolean",
                        "description": "Whether or not to skip TLS verification.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "A token used for accessing Vault.\n"
                    },
                    "tokenHmac": {
                        "type": "string",
                        "description": "The Vault token hmac.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryCredentialUserName:BoundaryCredentialUserName": {
            "description": "The username/password credential resource allows you to configure a credential using a username and password pair.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"global scope\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.BoundaryScope(\"project\", {\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst exampleBoundaryCredentialStoreStatic = new boundary.BoundaryCredentialStoreStatic(\"exampleBoundaryCredentialStoreStatic\", {\n    description: \"My first static credential store!\",\n    scopeId: project.id,\n});\nconst exampleBoundaryCredentialUserName = new boundary.BoundaryCredentialUserName(\"exampleBoundaryCredentialUserName\", {\n    description: \"My first username password credential!\",\n    credentialStoreId: exampleBoundaryCredentialStoreStatic.id,\n    username: \"my-username\",\n    password: \"my-password\",\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"global scope\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.BoundaryScope(\"project\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nexample_boundary_credential_store_static = boundary.BoundaryCredentialStoreStatic(\"exampleBoundaryCredentialStoreStatic\",\n    description=\"My first static credential store!\",\n    scope_id=project.id)\nexample_boundary_credential_user_name = boundary.BoundaryCredentialUserName(\"exampleBoundaryCredentialUserName\",\n    description=\"My first username password credential!\",\n    credential_store_id=example_boundary_credential_store_static.id,\n    username=\"my-username\",\n    password=\"my-password\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"global scope\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.BoundaryScope(\"project\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var exampleBoundaryCredentialStoreStatic = new Boundary.BoundaryCredentialStoreStatic(\"exampleBoundaryCredentialStoreStatic\", new()\n    {\n        Description = \"My first static credential store!\",\n        ScopeId = project.Id,\n    });\n\n    var exampleBoundaryCredentialUserName = new Boundary.BoundaryCredentialUserName(\"exampleBoundaryCredentialUserName\", new()\n    {\n        Description = \"My first username password credential!\",\n        CredentialStoreId = exampleBoundaryCredentialStoreStatic.Id,\n        Username = \"my-username\",\n        Password = \"my-password\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"global scope\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewBoundaryScope(ctx, \"project\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texampleBoundaryCredentialStoreStatic, err := boundary.NewBoundaryCredentialStoreStatic(ctx, \"exampleBoundaryCredentialStoreStatic\", \u0026boundary.BoundaryCredentialStoreStaticArgs{\n\t\t\tDescription: pulumi.String(\"My first static credential store!\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryCredentialUserName(ctx, \"exampleBoundaryCredentialUserName\", \u0026boundary.BoundaryCredentialUserNameArgs{\n\t\t\tDescription:       pulumi.String(\"My first username password credential!\"),\n\t\t\tCredentialStoreId: exampleBoundaryCredentialStoreStatic.ID(),\n\t\t\tUsername:          pulumi.String(\"my-username\"),\n\t\t\tPassword:          pulumi.String(\"my-password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryCredentialStoreStatic;\nimport com.pulumi.boundary.BoundaryCredentialStoreStaticArgs;\nimport com.pulumi.boundary.BoundaryCredentialUserName;\nimport com.pulumi.boundary.BoundaryCredentialUserNameArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"global scope\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new BoundaryScope(\"project\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var exampleBoundaryCredentialStoreStatic = new BoundaryCredentialStoreStatic(\"exampleBoundaryCredentialStoreStatic\", BoundaryCredentialStoreStaticArgs.builder()        \n            .description(\"My first static credential store!\")\n            .scopeId(project.id())\n            .build());\n\n        var exampleBoundaryCredentialUserName = new BoundaryCredentialUserName(\"exampleBoundaryCredentialUserName\", BoundaryCredentialUserNameArgs.builder()        \n            .description(\"My first username password credential!\")\n            .credentialStoreId(exampleBoundaryCredentialStoreStatic.id())\n            .username(\"my-username\")\n            .password(\"my-password\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: global scope\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  exampleBoundaryCredentialStoreStatic:\n    type: boundary:BoundaryCredentialStoreStatic\n    properties:\n      description: My first static credential store!\n      scopeId: ${project.id}\n  exampleBoundaryCredentialUserName:\n    type: boundary:BoundaryCredentialUserName\n    properties:\n      description: My first username password credential!\n      credentialStoreId: ${exampleBoundaryCredentialStoreStatic.id}\n      username: my-username\n      password: my-password\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryCredentialUserName:BoundaryCredentialUserName example_username_password \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "credentialStoreId": {
                    "type": "string",
                    "description": "The credential store in which to save this username/password credential.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this username/password credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this username/password credential. Defaults to the resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of this username/password credential.\n"
                },
                "passwordHmac": {
                    "type": "string",
                    "description": "The password hmac.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of this username/password credential.\n"
                }
            },
            "required": [
                "credentialStoreId",
                "name",
                "password",
                "passwordHmac",
                "username"
            ],
            "inputProperties": {
                "credentialStoreId": {
                    "type": "string",
                    "description": "The credential store in which to save this username/password credential.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of this username/password credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this username/password credential. Defaults to the resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of this username/password credential.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of this username/password credential.\n"
                }
            },
            "requiredInputs": [
                "credentialStoreId",
                "password",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryCredentialUserName resources.\n",
                "properties": {
                    "credentialStoreId": {
                        "type": "string",
                        "description": "The credential store in which to save this username/password credential.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this username/password credential.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this username/password credential. Defaults to the resource name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of this username/password credential.\n"
                    },
                    "passwordHmac": {
                        "type": "string",
                        "description": "The password hmac.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of this username/password credential.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryGroup:BoundaryGroup": {
            "description": "The group resource allows you to configure a Boundary group.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst foo = new boundary.BoundaryUser(\"foo\", {\n    description: \"foo user\",\n    scopeId: org.id,\n});\nconst example = new boundary.BoundaryGroup(\"example\", {\n    description: \"My first group!\",\n    memberIds: [foo.id],\n    scopeId: org.id,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nfoo = boundary.BoundaryUser(\"foo\",\n    description=\"foo user\",\n    scope_id=org.id)\nexample = boundary.BoundaryGroup(\"example\",\n    description=\"My first group!\",\n    member_ids=[foo.id],\n    scope_id=org.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var foo = new Boundary.BoundaryUser(\"foo\", new()\n    {\n        Description = \"foo user\",\n        ScopeId = org.Id,\n    });\n\n    var example = new Boundary.BoundaryGroup(\"example\", new()\n    {\n        Description = \"My first group!\",\n        MemberIds = new[]\n        {\n            foo.Id,\n        },\n        ScopeId = org.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfoo, err := boundary.NewBoundaryUser(ctx, \"foo\", \u0026boundary.BoundaryUserArgs{\n\t\t\tDescription: pulumi.String(\"foo user\"),\n\t\t\tScopeId:     org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryGroup(ctx, \"example\", \u0026boundary.BoundaryGroupArgs{\n\t\t\tDescription: pulumi.String(\"My first group!\"),\n\t\t\tMemberIds: pulumi.StringArray{\n\t\t\t\tfoo.ID(),\n\t\t\t},\n\t\t\tScopeId: org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryUser;\nimport com.pulumi.boundary.BoundaryUserArgs;\nimport com.pulumi.boundary.BoundaryGroup;\nimport com.pulumi.boundary.BoundaryGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var foo = new BoundaryUser(\"foo\", BoundaryUserArgs.builder()        \n            .description(\"foo user\")\n            .scopeId(org.id())\n            .build());\n\n        var example = new BoundaryGroup(\"example\", BoundaryGroupArgs.builder()        \n            .description(\"My first group!\")\n            .memberIds(foo.id())\n            .scopeId(org.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  foo:\n    type: boundary:BoundaryUser\n    properties:\n      description: foo user\n      scopeId: ${org.id}\n  example:\n    type: boundary:BoundaryGroup\n    properties:\n      description: My first group!\n      memberIds:\n        - ${foo.id}\n      scopeId: ${org.id}\n```\n\nUsage for project-specific group:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.BoundaryScope(\"project\", {\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst foo = new boundary.BoundaryUser(\"foo\", {\n    description: \"foo user\",\n    scopeId: org.id,\n});\nconst example = new boundary.BoundaryGroup(\"example\", {\n    description: \"My first group!\",\n    memberIds: [foo.id],\n    scopeId: project.id,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.BoundaryScope(\"project\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nfoo = boundary.BoundaryUser(\"foo\",\n    description=\"foo user\",\n    scope_id=org.id)\nexample = boundary.BoundaryGroup(\"example\",\n    description=\"My first group!\",\n    member_ids=[foo.id],\n    scope_id=project.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.BoundaryScope(\"project\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var foo = new Boundary.BoundaryUser(\"foo\", new()\n    {\n        Description = \"foo user\",\n        ScopeId = org.Id,\n    });\n\n    var example = new Boundary.BoundaryGroup(\"example\", new()\n    {\n        Description = \"My first group!\",\n        MemberIds = new[]\n        {\n            foo.Id,\n        },\n        ScopeId = project.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewBoundaryScope(ctx, \"project\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfoo, err := boundary.NewBoundaryUser(ctx, \"foo\", \u0026boundary.BoundaryUserArgs{\n\t\t\tDescription: pulumi.String(\"foo user\"),\n\t\t\tScopeId:     org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryGroup(ctx, \"example\", \u0026boundary.BoundaryGroupArgs{\n\t\t\tDescription: pulumi.String(\"My first group!\"),\n\t\t\tMemberIds: pulumi.StringArray{\n\t\t\t\tfoo.ID(),\n\t\t\t},\n\t\t\tScopeId: project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryUser;\nimport com.pulumi.boundary.BoundaryUserArgs;\nimport com.pulumi.boundary.BoundaryGroup;\nimport com.pulumi.boundary.BoundaryGroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new BoundaryScope(\"project\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var foo = new BoundaryUser(\"foo\", BoundaryUserArgs.builder()        \n            .description(\"foo user\")\n            .scopeId(org.id())\n            .build());\n\n        var example = new BoundaryGroup(\"example\", BoundaryGroupArgs.builder()        \n            .description(\"My first group!\")\n            .memberIds(foo.id())\n            .scopeId(project.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  foo:\n    type: boundary:BoundaryUser\n    properties:\n      description: foo user\n      scopeId: ${org.id}\n  example:\n    type: boundary:BoundaryGroup\n    properties:\n      description: My first group!\n      memberIds:\n        - ${foo.id}\n      scopeId: ${project.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryGroup:BoundaryGroup foo \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "memberIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Resource IDs for group members, these are most likely boundary users.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n"
                }
            },
            "required": [
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "memberIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Resource IDs for group members, these are most likely boundary users.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryGroup resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The group description.\n"
                    },
                    "memberIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Resource IDs for group members, these are most likely boundary users.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryHost:BoundaryHost": {
            "description": "Deprecated: use `boundary.BoundaryHostStatic` instead.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.BoundaryScope(\"project\", {\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst static = new boundary.BoundaryHostCatalog(\"static\", {\n    description: \"My first host catalog!\",\n    type: \"static\",\n    scopeId: project.id,\n});\nconst example = new boundary.BoundaryHost(\"example\", {\n    type: \"static\",\n    description: \"My first host!\",\n    address: \"10.0.0.1\",\n    hostCatalogId: static.id,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.BoundaryScope(\"project\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nstatic = boundary.BoundaryHostCatalog(\"static\",\n    description=\"My first host catalog!\",\n    type=\"static\",\n    scope_id=project.id)\nexample = boundary.BoundaryHost(\"example\",\n    type=\"static\",\n    description=\"My first host!\",\n    address=\"10.0.0.1\",\n    host_catalog_id=static.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.BoundaryScope(\"project\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var @static = new Boundary.BoundaryHostCatalog(\"static\", new()\n    {\n        Description = \"My first host catalog!\",\n        Type = \"static\",\n        ScopeId = project.Id,\n    });\n\n    var example = new Boundary.BoundaryHost(\"example\", new()\n    {\n        Type = \"static\",\n        Description = \"My first host!\",\n        Address = \"10.0.0.1\",\n        HostCatalogId = @static.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewBoundaryScope(ctx, \"project\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tstatic, err := boundary.NewBoundaryHostCatalog(ctx, \"static\", \u0026boundary.BoundaryHostCatalogArgs{\n\t\t\tDescription: pulumi.String(\"My first host catalog!\"),\n\t\t\tType:        pulumi.String(\"static\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryHost(ctx, \"example\", \u0026boundary.BoundaryHostArgs{\n\t\t\tType:          pulumi.String(\"static\"),\n\t\t\tDescription:   pulumi.String(\"My first host!\"),\n\t\t\tAddress:       pulumi.String(\"10.0.0.1\"),\n\t\t\tHostCatalogId: static.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryHostCatalog;\nimport com.pulumi.boundary.BoundaryHostCatalogArgs;\nimport com.pulumi.boundary.BoundaryHost;\nimport com.pulumi.boundary.BoundaryHostArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new BoundaryScope(\"project\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var static_ = new BoundaryHostCatalog(\"static\", BoundaryHostCatalogArgs.builder()        \n            .description(\"My first host catalog!\")\n            .type(\"static\")\n            .scopeId(project.id())\n            .build());\n\n        var example = new BoundaryHost(\"example\", BoundaryHostArgs.builder()        \n            .type(\"static\")\n            .description(\"My first host!\")\n            .address(\"10.0.0.1\")\n            .hostCatalogId(static_.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  static:\n    type: boundary:BoundaryHostCatalog\n    properties:\n      description: My first host catalog!\n      type: static\n      scopeId: ${project.id}\n  example:\n    type: boundary:BoundaryHost\n    properties:\n      type: static\n      description: My first host!\n      address: 10.0.0.1\n      hostCatalogId: ${static.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryHost:BoundaryHost foo \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host description.\n"
                },
                "hostCatalogId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The host name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host\n"
                }
            },
            "required": [
                "hostCatalogId",
                "name",
                "type"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host description.\n"
                },
                "hostCatalogId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The host name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostCatalogId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryHost resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The host description.\n"
                    },
                    "hostCatalogId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host name. Defaults to the resource name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of host\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryHostCatalog:BoundaryHostCatalog": {
            "description": "Deprecated: use `boundary.BoundaryHostCatalogStatic` instead.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: boundary_scope.global.id,\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.BoundaryScope(\"project\", {\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst example = new boundary.BoundaryHostCatalog(\"example\", {\n    description: \"My first host catalog!\",\n    type: \"Static\",\n    scopeId: project.id,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=boundary_scope[\"global\"][\"id\"],\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.BoundaryScope(\"project\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nexample = boundary.BoundaryHostCatalog(\"example\",\n    description=\"My first host catalog!\",\n    type=\"Static\",\n    scope_id=project.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = boundary_scope.Global.Id,\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.BoundaryScope(\"project\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var example = new Boundary.BoundaryHostCatalog(\"example\", new()\n    {\n        Description = \"My first host catalog!\",\n        Type = \"Static\",\n        ScopeId = project.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.Any(boundary_scope.Global.Id),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewBoundaryScope(ctx, \"project\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryHostCatalog(ctx, \"example\", \u0026boundary.BoundaryHostCatalogArgs{\n\t\t\tDescription: pulumi.String(\"My first host catalog!\"),\n\t\t\tType:        pulumi.String(\"Static\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryHostCatalog;\nimport com.pulumi.boundary.BoundaryHostCatalogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(boundary_scope.global().id())\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new BoundaryScope(\"project\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var example = new BoundaryHostCatalog(\"example\", BoundaryHostCatalogArgs.builder()        \n            .description(\"My first host catalog!\")\n            .type(\"Static\")\n            .scopeId(project.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${boundary_scope.global.id}\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  example:\n    type: boundary:BoundaryHostCatalog\n    properties:\n      description: My first host catalog!\n      type: Static\n      scopeId: ${project.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryHostCatalog:BoundaryHostCatalog foo \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The host catalog description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host catalog name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The host catalog type. Only `static` is supported.\n"
                }
            },
            "required": [
                "name",
                "scopeId",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The host catalog description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host catalog name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The host catalog type. Only `static` is supported.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryHostCatalog resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The host catalog description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host catalog name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The host catalog type. Only `static` is supported.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryHostCatalogPlugin:BoundaryHostCatalogPlugin": {
            "description": "The host catalog resource allows you to configure a Boundary plugin-type host catalog. Host catalogs are always part of a project, so a project resource should be used inline or you should have the project ID in hand to successfully configure a host catalog.\n",
            "properties": {
                "attributesJson": {
                    "type": "string",
                    "description": "The attributes for the host catalog. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the host catalog.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host catalog description.\n"
                },
                "internalForceUpdate": {
                    "type": "string",
                    "description": "Internal only. Used to force update so that we can always check the value of secrets.\n"
                },
                "internalHmacUsedForSecretsConfigHmac": {
                    "type": "string",
                    "description": "Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.\n"
                },
                "internalSecretsConfigHmac": {
                    "type": "string",
                    "description": "Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host catalog name. Defaults to the resource name.\n"
                },
                "pluginId": {
                    "type": "string",
                    "description": "The ID of the plugin that should back the resource. This or plugin_name must be defined.\n"
                },
                "pluginName": {
                    "type": "string",
                    "description": "The name of the plugin that should back the resource. This or plugin_id must be defined.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created.\n"
                },
                "secretsHmac": {
                    "type": "string",
                    "description": "The HMAC'd secrets value returned from the server.\n"
                },
                "secretsJson": {
                    "type": "string",
                    "description": "The secrets for the host catalog. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" to clear any existing values. NOTE: Unlike \"attributes_json\", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.\n"
                }
            },
            "required": [
                "internalForceUpdate",
                "internalHmacUsedForSecretsConfigHmac",
                "internalSecretsConfigHmac",
                "name",
                "pluginId",
                "pluginName",
                "scopeId",
                "secretsHmac"
            ],
            "inputProperties": {
                "attributesJson": {
                    "type": "string",
                    "description": "The attributes for the host catalog. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the host catalog.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host catalog description.\n"
                },
                "internalForceUpdate": {
                    "type": "string",
                    "description": "Internal only. Used to force update so that we can always check the value of secrets.\n"
                },
                "internalHmacUsedForSecretsConfigHmac": {
                    "type": "string",
                    "description": "Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.\n"
                },
                "internalSecretsConfigHmac": {
                    "type": "string",
                    "description": "Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host catalog name. Defaults to the resource name.\n"
                },
                "pluginId": {
                    "type": "string",
                    "description": "The ID of the plugin that should back the resource. This or plugin_name must be defined.\n",
                    "willReplaceOnChanges": true
                },
                "pluginName": {
                    "type": "string",
                    "description": "The name of the plugin that should back the resource. This or plugin_id must be defined.\n",
                    "willReplaceOnChanges": true
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created.\n",
                    "willReplaceOnChanges": true
                },
                "secretsHmac": {
                    "type": "string",
                    "description": "The HMAC'd secrets value returned from the server.\n"
                },
                "secretsJson": {
                    "type": "string",
                    "description": "The secrets for the host catalog. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" to clear any existing values. NOTE: Unlike \"attributes_json\", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.\n"
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryHostCatalogPlugin resources.\n",
                "properties": {
                    "attributesJson": {
                        "type": "string",
                        "description": "The attributes for the host catalog. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the host catalog.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The host catalog description.\n"
                    },
                    "internalForceUpdate": {
                        "type": "string",
                        "description": "Internal only. Used to force update so that we can always check the value of secrets.\n"
                    },
                    "internalHmacUsedForSecretsConfigHmac": {
                        "type": "string",
                        "description": "Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.\n"
                    },
                    "internalSecretsConfigHmac": {
                        "type": "string",
                        "description": "Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host catalog name. Defaults to the resource name.\n"
                    },
                    "pluginId": {
                        "type": "string",
                        "description": "The ID of the plugin that should back the resource. This or plugin_name must be defined.\n",
                        "willReplaceOnChanges": true
                    },
                    "pluginName": {
                        "type": "string",
                        "description": "The name of the plugin that should back the resource. This or plugin_id must be defined.\n",
                        "willReplaceOnChanges": true
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created.\n",
                        "willReplaceOnChanges": true
                    },
                    "secretsHmac": {
                        "type": "string",
                        "description": "The HMAC'd secrets value returned from the server.\n"
                    },
                    "secretsJson": {
                        "type": "string",
                        "description": "The secrets for the host catalog. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" to clear any existing values. NOTE: Unlike \"attributes_json\", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryHostCatalogStatic:BoundaryHostCatalogStatic": {
            "description": "The static host catalog resource allows you to configure a Boundary static-type host catalog. Host catalogs are always part of a project, so a project resource should be used inline or you should have the project ID in hand to successfully configure a host catalog.\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The host catalog description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host catalog name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created.\n"
                }
            },
            "required": [
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The host catalog description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host catalog name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryHostCatalogStatic resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The host catalog description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host catalog name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryHostSet:BoundaryHostSet": {
            "description": "Deprecated: use `boundary.BoundaryHostSetStatic` instead.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryHostCatalog;\nimport com.pulumi.boundary.BoundaryHostCatalogArgs;\nimport com.pulumi.boundary.BoundaryHost;\nimport com.pulumi.boundary.BoundaryHostArgs;\nimport com.pulumi.boundary.BoundaryHostSet;\nimport com.pulumi.boundary.BoundaryHostSetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new BoundaryScope(\"project\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var static_ = new BoundaryHostCatalog(\"static\", BoundaryHostCatalogArgs.builder()        \n            .type(\"static\")\n            .scopeId(project.id())\n            .build());\n\n        var first = new BoundaryHost(\"first\", BoundaryHostArgs.builder()        \n            .type(\"static\")\n            .description(\"My first host!\")\n            .address(\"10.0.0.1\")\n            .hostCatalogId(static_.id())\n            .scopeId(project.id())\n            .build());\n\n        var second = new BoundaryHost(\"second\", BoundaryHostArgs.builder()        \n            .type(\"static\")\n            .description(\"My second host!\")\n            .address(\"10.0.0.2\")\n            .hostCatalogId(static_.id())\n            .scopeId(project.id())\n            .build());\n\n        var web = new BoundaryHostSet(\"web\", BoundaryHostSetArgs.builder()        \n            .hostCatalogId(static_.id())\n            .type(\"static\")\n            .hostIds(            \n                first.id(),\n                second.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  static:\n    type: boundary:BoundaryHostCatalog\n    properties:\n      type: static\n      scopeId: ${project.id}\n  first:\n    type: boundary:BoundaryHost\n    properties:\n      type: static\n      description: My first host!\n      address: 10.0.0.1\n      hostCatalogId: ${static.id}\n      scopeId: ${project.id}\n  second:\n    type: boundary:BoundaryHost\n    properties:\n      type: static\n      description: My second host!\n      address: 10.0.0.2\n      hostCatalogId: ${static.id}\n      scopeId: ${project.id}\n  web:\n    type: boundary:BoundaryHostSet\n    properties:\n      hostCatalogId: ${static.id}\n      type: static\n      hostIds:\n        - ${first.id}\n        - ${second.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryHostSet:BoundaryHostSet foo \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The host set description.\n"
                },
                "hostCatalogId": {
                    "type": "string",
                    "description": "The catalog for the host set.\n"
                },
                "hostIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of host IDs contained in this set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host set name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host set\n"
                }
            },
            "required": [
                "hostCatalogId",
                "name",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The host set description.\n"
                },
                "hostCatalogId": {
                    "type": "string",
                    "description": "The catalog for the host set.\n",
                    "willReplaceOnChanges": true
                },
                "hostIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of host IDs contained in this set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host set name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host set\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostCatalogId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryHostSet resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The host set description.\n"
                    },
                    "hostCatalogId": {
                        "type": "string",
                        "description": "The catalog for the host set.\n",
                        "willReplaceOnChanges": true
                    },
                    "hostIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of host IDs contained in this set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host set name. Defaults to the resource name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of host set\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryHostSetPlugin:BoundaryHostSetPlugin": {
            "description": "The host_set_plugin resource allows you to configure a Boundary host set. Host sets are always part of a host catalog, so a host catalog resource should be used inline or you should have the host catalog ID in hand to successfully configure a host set.\n",
            "properties": {
                "attributesJson": {
                    "type": "string",
                    "description": "The attributes for the host set. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the host set.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host set description.\n"
                },
                "hostCatalogId": {
                    "type": "string",
                    "description": "The catalog for the host set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host set name. Defaults to the resource name.\n"
                },
                "preferredEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ordered list of preferred endpoints.\n"
                },
                "syncIntervalSeconds": {
                    "type": "integer",
                    "description": "The value to set for the sync interval seconds.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host set\n"
                }
            },
            "required": [
                "hostCatalogId",
                "name"
            ],
            "inputProperties": {
                "attributesJson": {
                    "type": "string",
                    "description": "The attributes for the host set. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the host set.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host set description.\n"
                },
                "hostCatalogId": {
                    "type": "string",
                    "description": "The catalog for the host set.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The host set name. Defaults to the resource name.\n"
                },
                "preferredEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ordered list of preferred endpoints.\n"
                },
                "syncIntervalSeconds": {
                    "type": "integer",
                    "description": "The value to set for the sync interval seconds.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host set\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostCatalogId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryHostSetPlugin resources.\n",
                "properties": {
                    "attributesJson": {
                        "type": "string",
                        "description": "The attributes for the host set. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the host set.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The host set description.\n"
                    },
                    "hostCatalogId": {
                        "type": "string",
                        "description": "The catalog for the host set.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The host set name. Defaults to the resource name.\n"
                    },
                    "preferredEndpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ordered list of preferred endpoints.\n"
                    },
                    "syncIntervalSeconds": {
                        "type": "integer",
                        "description": "The value to set for the sync interval seconds.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of host set\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryHostSetStatic:BoundaryHostSetStatic": {
            "description": "The host_set_static resource allows you to configure a Boundary host set. Host sets are always part of a host catalog, so a host catalog resource should be used inline or you should have the host catalog ID in hand to successfully configure a host set.\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The host set description.\n"
                },
                "hostCatalogId": {
                    "type": "string",
                    "description": "The catalog for the host set.\n"
                },
                "hostIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of host IDs contained in this set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host set name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host set\n"
                }
            },
            "required": [
                "hostCatalogId",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The host set description.\n"
                },
                "hostCatalogId": {
                    "type": "string",
                    "description": "The catalog for the host set.\n",
                    "willReplaceOnChanges": true
                },
                "hostIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of host IDs contained in this set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host set name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host set\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostCatalogId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryHostSetStatic resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The host set description.\n"
                    },
                    "hostCatalogId": {
                        "type": "string",
                        "description": "The catalog for the host set.\n",
                        "willReplaceOnChanges": true
                    },
                    "hostIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of host IDs contained in this set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host set name. Defaults to the resource name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of host set\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryHostStatic:BoundaryHostStatic": {
            "description": "The static host resource allows you to configure a Boundary static host. Hosts are always part of a project, so a project resource should be used inline or you should have the project ID in hand to successfully configure a host.\n",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host description.\n"
                },
                "hostCatalogId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The host name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host\n"
                }
            },
            "required": [
                "hostCatalogId",
                "name"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host description.\n"
                },
                "hostCatalogId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The host name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostCatalogId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryHostStatic resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The host description.\n"
                    },
                    "hostCatalogId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host name. Defaults to the resource name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of host\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryManagedGroup:BoundaryManagedGroup": {
            "description": "The managed group resource allows you to configure a Boundary group.\n",
            "properties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The managed group description.\n"
                },
                "filter": {
                    "type": "string",
                    "description": "Boolean expression to filter the workers for this managed group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The managed group name. Defaults to the resource name.\n"
                }
            },
            "required": [
                "authMethodId",
                "filter",
                "name"
            ],
            "inputProperties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The managed group description.\n"
                },
                "filter": {
                    "type": "string",
                    "description": "Boolean expression to filter the workers for this managed group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The managed group name. Defaults to the resource name.\n"
                }
            },
            "requiredInputs": [
                "authMethodId",
                "filter"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryManagedGroup resources.\n",
                "properties": {
                    "authMethodId": {
                        "type": "string",
                        "description": "The resource ID for the auth method.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The managed group description.\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "Boolean expression to filter the workers for this managed group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The managed group name. Defaults to the resource name.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryRole:BoundaryRole": {
            "description": "The role resource allows you to configure a Boundary role.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nBasic usage:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst example = new boundary.BoundaryRole(\"example\", {\n    description: \"My first role!\",\n    scopeId: org.id,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nexample = boundary.BoundaryRole(\"example\",\n    description=\"My first role!\",\n    scope_id=org.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var example = new Boundary.BoundaryRole(\"example\", new()\n    {\n        Description = \"My first role!\",\n        ScopeId = org.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryRole(ctx, \"example\", \u0026boundary.BoundaryRoleArgs{\n\t\t\tDescription: pulumi.String(\"My first role!\"),\n\t\t\tScopeId:     org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryRole;\nimport com.pulumi.boundary.BoundaryRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var example = new BoundaryRole(\"example\", BoundaryRoleArgs.builder()        \n            .description(\"My first role!\")\n            .scopeId(org.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  example:\n    type: boundary:BoundaryRole\n    properties:\n      description: My first role!\n      scopeId: ${org.id}\n```\n\nUsage with a user resource:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst foo = new boundary.BoundaryUser(\"foo\", {scopeId: org.id});\nconst bar = new boundary.BoundaryUser(\"bar\", {scopeId: org.id});\nconst example = new boundary.BoundaryRole(\"example\", {\n    description: \"My first role!\",\n    principalIds: [\n        foo.id,\n        bar.id,\n    ],\n    scopeId: org.id,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nfoo = boundary.BoundaryUser(\"foo\", scope_id=org.id)\nbar = boundary.BoundaryUser(\"bar\", scope_id=org.id)\nexample = boundary.BoundaryRole(\"example\",\n    description=\"My first role!\",\n    principal_ids=[\n        foo.id,\n        bar.id,\n    ],\n    scope_id=org.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var foo = new Boundary.BoundaryUser(\"foo\", new()\n    {\n        ScopeId = org.Id,\n    });\n\n    var bar = new Boundary.BoundaryUser(\"bar\", new()\n    {\n        ScopeId = org.Id,\n    });\n\n    var example = new Boundary.BoundaryRole(\"example\", new()\n    {\n        Description = \"My first role!\",\n        PrincipalIds = new[]\n        {\n            foo.Id,\n            bar.Id,\n        },\n        ScopeId = org.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfoo, err := boundary.NewBoundaryUser(ctx, \"foo\", \u0026boundary.BoundaryUserArgs{\n\t\t\tScopeId: org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbar, err := boundary.NewBoundaryUser(ctx, \"bar\", \u0026boundary.BoundaryUserArgs{\n\t\t\tScopeId: org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryRole(ctx, \"example\", \u0026boundary.BoundaryRoleArgs{\n\t\t\tDescription: pulumi.String(\"My first role!\"),\n\t\t\tPrincipalIds: pulumi.StringArray{\n\t\t\t\tfoo.ID(),\n\t\t\t\tbar.ID(),\n\t\t\t},\n\t\t\tScopeId: org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryUser;\nimport com.pulumi.boundary.BoundaryUserArgs;\nimport com.pulumi.boundary.BoundaryRole;\nimport com.pulumi.boundary.BoundaryRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var foo = new BoundaryUser(\"foo\", BoundaryUserArgs.builder()        \n            .scopeId(org.id())\n            .build());\n\n        var bar = new BoundaryUser(\"bar\", BoundaryUserArgs.builder()        \n            .scopeId(org.id())\n            .build());\n\n        var example = new BoundaryRole(\"example\", BoundaryRoleArgs.builder()        \n            .description(\"My first role!\")\n            .principalIds(            \n                foo.id(),\n                bar.id())\n            .scopeId(org.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  foo:\n    type: boundary:BoundaryUser\n    properties:\n      scopeId: ${org.id}\n  bar:\n    type: boundary:BoundaryUser\n    properties:\n      scopeId: ${org.id}\n  example:\n    type: boundary:BoundaryRole\n    properties:\n      description: My first role!\n      principalIds:\n        - ${foo.id}\n        - ${bar.id}\n      scopeId: ${org.id}\n```\n\nUsage with user and grants resource:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst readonlyBoundaryUser = new boundary.BoundaryUser(\"readonlyBoundaryUser\", {\n    description: \"A readonly user\",\n    scopeId: org.id,\n});\nconst readonlyBoundaryRole = new boundary.BoundaryRole(\"readonlyBoundaryRole\", {\n    description: \"A readonly role\",\n    principalIds: [readonlyBoundaryUser.id],\n    grantStrings: [\"id=*;type=*;actions=read\"],\n    scopeId: org.id,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nreadonly_boundary_user = boundary.BoundaryUser(\"readonlyBoundaryUser\",\n    description=\"A readonly user\",\n    scope_id=org.id)\nreadonly_boundary_role = boundary.BoundaryRole(\"readonlyBoundaryRole\",\n    description=\"A readonly role\",\n    principal_ids=[readonly_boundary_user.id],\n    grant_strings=[\"id=*;type=*;actions=read\"],\n    scope_id=org.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var readonlyBoundaryUser = new Boundary.BoundaryUser(\"readonlyBoundaryUser\", new()\n    {\n        Description = \"A readonly user\",\n        ScopeId = org.Id,\n    });\n\n    var readonlyBoundaryRole = new Boundary.BoundaryRole(\"readonlyBoundaryRole\", new()\n    {\n        Description = \"A readonly role\",\n        PrincipalIds = new[]\n        {\n            readonlyBoundaryUser.Id,\n        },\n        GrantStrings = new[]\n        {\n            \"id=*;type=*;actions=read\",\n        },\n        ScopeId = org.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treadonlyBoundaryUser, err := boundary.NewBoundaryUser(ctx, \"readonlyBoundaryUser\", \u0026boundary.BoundaryUserArgs{\n\t\t\tDescription: pulumi.String(\"A readonly user\"),\n\t\t\tScopeId:     org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryRole(ctx, \"readonlyBoundaryRole\", \u0026boundary.BoundaryRoleArgs{\n\t\t\tDescription: pulumi.String(\"A readonly role\"),\n\t\t\tPrincipalIds: pulumi.StringArray{\n\t\t\t\treadonlyBoundaryUser.ID(),\n\t\t\t},\n\t\t\tGrantStrings: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"id=*;type=*;actions=read\"),\n\t\t\t},\n\t\t\tScopeId: org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryUser;\nimport com.pulumi.boundary.BoundaryUserArgs;\nimport com.pulumi.boundary.BoundaryRole;\nimport com.pulumi.boundary.BoundaryRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var readonlyBoundaryUser = new BoundaryUser(\"readonlyBoundaryUser\", BoundaryUserArgs.builder()        \n            .description(\"A readonly user\")\n            .scopeId(org.id())\n            .build());\n\n        var readonlyBoundaryRole = new BoundaryRole(\"readonlyBoundaryRole\", BoundaryRoleArgs.builder()        \n            .description(\"A readonly role\")\n            .principalIds(readonlyBoundaryUser.id())\n            .grantStrings(\"id=*;type=*;actions=read\")\n            .scopeId(org.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  readonlyBoundaryUser:\n    type: boundary:BoundaryUser\n    properties:\n      description: A readonly user\n      scopeId: ${org.id}\n  readonlyBoundaryRole:\n    type: boundary:BoundaryRole\n    properties:\n      description: A readonly role\n      principalIds:\n        - ${readonlyBoundaryUser.id}\n      grantStrings:\n        - id=*;type=*;actions=read\n      scopeId: ${org.id}\n```\n\nUsage for a project-specific role:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.BoundaryScope(\"project\", {\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst readonlyBoundaryUser = new boundary.BoundaryUser(\"readonlyBoundaryUser\", {\n    description: \"A readonly user\",\n    scopeId: org.id,\n});\nconst readonlyBoundaryRole = new boundary.BoundaryRole(\"readonlyBoundaryRole\", {\n    description: \"A readonly role\",\n    principalIds: [readonlyBoundaryUser.id],\n    grantStrings: [\"id=*;type=*;actions=read\"],\n    scopeId: project.id,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.BoundaryScope(\"project\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nreadonly_boundary_user = boundary.BoundaryUser(\"readonlyBoundaryUser\",\n    description=\"A readonly user\",\n    scope_id=org.id)\nreadonly_boundary_role = boundary.BoundaryRole(\"readonlyBoundaryRole\",\n    description=\"A readonly role\",\n    principal_ids=[readonly_boundary_user.id],\n    grant_strings=[\"id=*;type=*;actions=read\"],\n    scope_id=project.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.BoundaryScope(\"project\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var readonlyBoundaryUser = new Boundary.BoundaryUser(\"readonlyBoundaryUser\", new()\n    {\n        Description = \"A readonly user\",\n        ScopeId = org.Id,\n    });\n\n    var readonlyBoundaryRole = new Boundary.BoundaryRole(\"readonlyBoundaryRole\", new()\n    {\n        Description = \"A readonly role\",\n        PrincipalIds = new[]\n        {\n            readonlyBoundaryUser.Id,\n        },\n        GrantStrings = new[]\n        {\n            \"id=*;type=*;actions=read\",\n        },\n        ScopeId = project.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewBoundaryScope(ctx, \"project\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treadonlyBoundaryUser, err := boundary.NewBoundaryUser(ctx, \"readonlyBoundaryUser\", \u0026boundary.BoundaryUserArgs{\n\t\t\tDescription: pulumi.String(\"A readonly user\"),\n\t\t\tScopeId:     org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryRole(ctx, \"readonlyBoundaryRole\", \u0026boundary.BoundaryRoleArgs{\n\t\t\tDescription: pulumi.String(\"A readonly role\"),\n\t\t\tPrincipalIds: pulumi.StringArray{\n\t\t\t\treadonlyBoundaryUser.ID(),\n\t\t\t},\n\t\t\tGrantStrings: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"id=*;type=*;actions=read\"),\n\t\t\t},\n\t\t\tScopeId: project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryUser;\nimport com.pulumi.boundary.BoundaryUserArgs;\nimport com.pulumi.boundary.BoundaryRole;\nimport com.pulumi.boundary.BoundaryRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new BoundaryScope(\"project\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var readonlyBoundaryUser = new BoundaryUser(\"readonlyBoundaryUser\", BoundaryUserArgs.builder()        \n            .description(\"A readonly user\")\n            .scopeId(org.id())\n            .build());\n\n        var readonlyBoundaryRole = new BoundaryRole(\"readonlyBoundaryRole\", BoundaryRoleArgs.builder()        \n            .description(\"A readonly role\")\n            .principalIds(readonlyBoundaryUser.id())\n            .grantStrings(\"id=*;type=*;actions=read\")\n            .scopeId(project.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  readonlyBoundaryUser:\n    type: boundary:BoundaryUser\n    properties:\n      description: A readonly user\n      scopeId: ${org.id}\n  readonlyBoundaryRole:\n    type: boundary:BoundaryRole\n    properties:\n      description: A readonly role\n      principalIds:\n        - ${readonlyBoundaryUser.id}\n      grantStrings:\n        - id=*;type=*;actions=read\n      scopeId: ${project.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryRole:BoundaryRole foo \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The role description.\n"
                },
                "grantScopeId": {
                    "type": "string"
                },
                "grantStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of stringified grants for the role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The role name. Defaults to the resource name.\n"
                },
                "principalIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of principal (user or group) IDs to add as principals on the role.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n"
                }
            },
            "required": [
                "grantScopeId",
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The role description.\n"
                },
                "grantScopeId": {
                    "type": "string"
                },
                "grantStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of stringified grants for the role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The role name. Defaults to the resource name.\n"
                },
                "principalIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of principal (user or group) IDs to add as principals on the role.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryRole resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The role description.\n"
                    },
                    "grantScopeId": {
                        "type": "string"
                    },
                    "grantStrings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of stringified grants for the role.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The role name. Defaults to the resource name.\n"
                    },
                    "principalIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of principal (user or group) IDs to add as principals on the role.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryScope:BoundaryScope": {
            "description": "The scope resource allows you to configure a Boundary scope.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nCreating the global scope:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst global = new boundary.BoundaryScope(\"global\", {\n    globalScope: true,\n    scopeId: \"global\",\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\nglobal_ = boundary.BoundaryScope(\"global\",\n    global_scope=True,\n    scope_id=\"global\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @global = new Boundary.BoundaryScope(\"global\", new()\n    {\n        GlobalScope = true,\n        ScopeId = \"global\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := boundary.NewBoundaryScope(ctx, \"global\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tGlobalScope: pulumi.Bool(true),\n\t\t\tScopeId:     pulumi.String(\"global\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var global = new BoundaryScope(\"global\", BoundaryScopeArgs.builder()        \n            .globalScope(true)\n            .scopeId(\"global\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  global:\n    type: boundary:BoundaryScope\n    properties:\n      globalScope: true\n      scopeId: global\n```\n\nCreating an organization scope within global:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: boundary_scope.global.id,\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=boundary_scope[\"global\"][\"id\"],\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = boundary_scope.Global.Id,\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.Any(boundary_scope.Global.Id),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(boundary_scope.global().id())\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${boundary_scope.global.id}\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n```\n\nCreating an project scope within an organization:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst project = new boundary.BoundaryScope(\"project\", {\n    description: \"My first scope!\",\n    scopeId: boundary_scope.org.id,\n    autoCreateAdminRole: true,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\nproject = boundary.BoundaryScope(\"project\",\n    description=\"My first scope!\",\n    scope_id=boundary_scope[\"org\"][\"id\"],\n    auto_create_admin_role=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var project = new Boundary.BoundaryScope(\"project\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = boundary_scope.Org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := boundary.NewBoundaryScope(ctx, \"project\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             pulumi.Any(boundary_scope.Org.Id),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var project = new BoundaryScope(\"project\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(boundary_scope.org().id())\n            .autoCreateAdminRole(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  project:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${boundary_scope.org.id}\n      autoCreateAdminRole: true\n```\n\nCreating an organization scope with a managed role for administration (auto create role set false):\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: boundary_scope.global.id,\n});\nconst orgAdmin = new boundary.BoundaryRole(\"orgAdmin\", {\n    scopeId: boundary_scope.global.id,\n    grantScopeId: org.id,\n    grantStrings: [\"id=*;type=*;actions=*\"],\n    principalIds: [\"u_auth\"],\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=boundary_scope[\"global\"][\"id\"])\norg_admin = boundary.BoundaryRole(\"orgAdmin\",\n    scope_id=boundary_scope[\"global\"][\"id\"],\n    grant_scope_id=org.id,\n    grant_strings=[\"id=*;type=*;actions=*\"],\n    principal_ids=[\"u_auth\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = boundary_scope.Global.Id,\n    });\n\n    var orgAdmin = new Boundary.BoundaryRole(\"orgAdmin\", new()\n    {\n        ScopeId = boundary_scope.Global.Id,\n        GrantScopeId = org.Id,\n        GrantStrings = new[]\n        {\n            \"id=*;type=*;actions=*\",\n        },\n        PrincipalIds = new[]\n        {\n            \"u_auth\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription: pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:     pulumi.Any(boundary_scope.Global.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryRole(ctx, \"orgAdmin\", \u0026boundary.BoundaryRoleArgs{\n\t\t\tScopeId:      pulumi.Any(boundary_scope.Global.Id),\n\t\t\tGrantScopeId: org.ID(),\n\t\t\tGrantStrings: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"id=*;type=*;actions=*\"),\n\t\t\t},\n\t\t\tPrincipalIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"u_auth\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryRole;\nimport com.pulumi.boundary.BoundaryRoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(boundary_scope.global().id())\n            .build());\n\n        var orgAdmin = new BoundaryRole(\"orgAdmin\", BoundaryRoleArgs.builder()        \n            .scopeId(boundary_scope.global().id())\n            .grantScopeId(org.id())\n            .grantStrings(\"id=*;type=*;actions=*\")\n            .principalIds(\"u_auth\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${boundary_scope.global.id}\n  orgAdmin:\n    type: boundary:BoundaryRole\n    properties:\n      scopeId: ${boundary_scope.global.id}\n      grantScopeId: ${org.id}\n      grantStrings:\n        - id=*;type=*;actions=*\n      principalIds:\n        - u_auth\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryScope:BoundaryScope foo \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "autoCreateAdminRole": {
                    "type": "boolean",
                    "description": "If set, when a new scope is created, the provider will not disable the functionality that automatically creates a role\nin the new scope and gives permissions to manage the scope to the provider's user. Marking this true makes for simpler\nHCL but results in role resources that are unmanaged by Terraform.\n"
                },
                "autoCreateDefaultRole": {
                    "type": "boolean",
                    "description": "Only relevant when creating an org scope. If set, when a new scope is created, the provider will not disable the\nfunctionality that automatically creates a role in the new scope and gives listing of scopes and auth methods and the\nability to authenticate to the anonymous user. Marking this true makes for simpler HCL but results in role resources\nthat are unmanaged by Terraform.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The scope description.\n"
                },
                "globalScope": {
                    "type": "boolean",
                    "description": "Indicates that the scope containing this value is the global scope, which triggers some specialized behavior to allow it to be imported and managed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The scope name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID containing the sub scope resource.\n"
                }
            },
            "required": [
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "autoCreateAdminRole": {
                    "type": "boolean",
                    "description": "If set, when a new scope is created, the provider will not disable the functionality that automatically creates a role\nin the new scope and gives permissions to manage the scope to the provider's user. Marking this true makes for simpler\nHCL but results in role resources that are unmanaged by Terraform.\n"
                },
                "autoCreateDefaultRole": {
                    "type": "boolean",
                    "description": "Only relevant when creating an org scope. If set, when a new scope is created, the provider will not disable the\nfunctionality that automatically creates a role in the new scope and gives listing of scopes and auth methods and the\nability to authenticate to the anonymous user. Marking this true makes for simpler HCL but results in role resources\nthat are unmanaged by Terraform.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The scope description.\n"
                },
                "globalScope": {
                    "type": "boolean",
                    "description": "Indicates that the scope containing this value is the global scope, which triggers some specialized behavior to allow it to be imported and managed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The scope name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID containing the sub scope resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryScope resources.\n",
                "properties": {
                    "autoCreateAdminRole": {
                        "type": "boolean",
                        "description": "If set, when a new scope is created, the provider will not disable the functionality that automatically creates a role\nin the new scope and gives permissions to manage the scope to the provider's user. Marking this true makes for simpler\nHCL but results in role resources that are unmanaged by Terraform.\n"
                    },
                    "autoCreateDefaultRole": {
                        "type": "boolean",
                        "description": "Only relevant when creating an org scope. If set, when a new scope is created, the provider will not disable the\nfunctionality that automatically creates a role in the new scope and gives listing of scopes and auth methods and the\nability to authenticate to the anonymous user. Marking this true makes for simpler HCL but results in role resources\nthat are unmanaged by Terraform.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The scope description.\n"
                    },
                    "globalScope": {
                        "type": "boolean",
                        "description": "Indicates that the scope containing this value is the global scope, which triggers some specialized behavior to allow it to be imported and managed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The scope name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID containing the sub scope resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryTarget:BoundaryTarget": {
            "description": "The target resource allows you to configure a Boundary target.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryCredentialStoreVault;\nimport com.pulumi.boundary.BoundaryCredentialStoreVaultArgs;\nimport com.pulumi.boundary.BoundaryCredentialLibraryVault;\nimport com.pulumi.boundary.BoundaryCredentialLibraryVaultArgs;\nimport com.pulumi.boundary.BoundaryHostCatalog;\nimport com.pulumi.boundary.BoundaryHostCatalogArgs;\nimport com.pulumi.boundary.BoundaryHost;\nimport com.pulumi.boundary.BoundaryHostArgs;\nimport com.pulumi.boundary.BoundaryHostSet;\nimport com.pulumi.boundary.BoundaryHostSetArgs;\nimport com.pulumi.boundary.BoundaryTarget;\nimport com.pulumi.boundary.BoundaryTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var global = new BoundaryScope(\"global\", BoundaryScopeArgs.builder()        \n            .globalScope(true)\n            .scopeId(\"global\")\n            .build());\n\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(global.id())\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new BoundaryScope(\"project\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var fooBoundaryCredentialStoreVault = new BoundaryCredentialStoreVault(\"fooBoundaryCredentialStoreVault\", BoundaryCredentialStoreVaultArgs.builder()        \n            .description(\"My first Vault credential store!\")\n            .address(\"http://127.0.0.1:8200\")\n            .token(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\")\n            .scopeId(project.id())\n            .build());\n\n        var fooBoundaryCredentialLibraryVault = new BoundaryCredentialLibraryVault(\"fooBoundaryCredentialLibraryVault\", BoundaryCredentialLibraryVaultArgs.builder()        \n            .description(\"My first Vault credential library!\")\n            .credentialStoreId(fooBoundaryCredentialStoreVault.id())\n            .path(\"my/secret/foo\")\n            .httpMethod(\"GET\")\n            .credentialType(\"username_password\")\n            .build());\n\n        var fooBoundaryHostCatalog = new BoundaryHostCatalog(\"fooBoundaryHostCatalog\", BoundaryHostCatalogArgs.builder()        \n            .description(\"test catalog\")\n            .scopeId(project.id())\n            .type(\"static\")\n            .build());\n\n        var fooBoundaryHost = new BoundaryHost(\"fooBoundaryHost\", BoundaryHostArgs.builder()        \n            .type(\"static\")\n            .hostCatalogId(fooBoundaryHostCatalog.id())\n            .scopeId(project.id())\n            .address(\"10.0.0.1\")\n            .build());\n\n        var bar = new BoundaryHost(\"bar\", BoundaryHostArgs.builder()        \n            .type(\"static\")\n            .hostCatalogId(fooBoundaryHostCatalog.id())\n            .scopeId(project.id())\n            .address(\"10.0.0.1\")\n            .build());\n\n        var fooBoundaryHostSet = new BoundaryHostSet(\"fooBoundaryHostSet\", BoundaryHostSetArgs.builder()        \n            .type(\"static\")\n            .hostCatalogId(fooBoundaryHostCatalog.id())\n            .hostIds(            \n                fooBoundaryHost.id(),\n                bar.id())\n            .build());\n\n        var fooBoundaryTarget = new BoundaryTarget(\"fooBoundaryTarget\", BoundaryTargetArgs.builder()        \n            .description(\"Foo target\")\n            .type(\"tcp\")\n            .defaultPort(\"22\")\n            .scopeId(project.id())\n            .hostSourceIds(fooBoundaryHostSet.id())\n            .brokeredCredentialSourceIds(fooBoundaryCredentialLibraryVault.id())\n            .build());\n\n        var sshFoo = new BoundaryTarget(\"sshFoo\", BoundaryTargetArgs.builder()        \n            .description(\"Ssh target\")\n            .type(\"ssh\")\n            .defaultPort(\"22\")\n            .scopeId(project.id())\n            .hostSourceIds(fooBoundaryHostSet.id())\n            .injectedApplicationCredentialSourceIds(fooBoundaryCredentialLibraryVault.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  global:\n    type: boundary:BoundaryScope\n    properties:\n      globalScope: true\n      scopeId: global\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${global.id}\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  fooBoundaryCredentialStoreVault:\n    type: boundary:BoundaryCredentialStoreVault\n    properties:\n      description: My first Vault credential store!\n      address: http://127.0.0.1:8200\n      # change to Vault address\n      token: s.0ufRo6XEGU2jOqnIr7OlFYP5\n      # change to valid Vault token\n      scopeId: ${project.id}\n  fooBoundaryCredentialLibraryVault:\n    type: boundary:BoundaryCredentialLibraryVault\n    properties:\n      description: My first Vault credential library!\n      credentialStoreId: ${fooBoundaryCredentialStoreVault.id}\n      path: my/secret/foo\n      # change to Vault backend path\n      httpMethod: GET\n      credentialType: username_password\n  fooBoundaryHostCatalog:\n    type: boundary:BoundaryHostCatalog\n    properties:\n      description: test catalog\n      scopeId: ${project.id}\n      type: static\n  fooBoundaryHost:\n    type: boundary:BoundaryHost\n    properties:\n      type: static\n      hostCatalogId: ${fooBoundaryHostCatalog.id}\n      scopeId: ${project.id}\n      address: 10.0.0.1\n  bar:\n    type: boundary:BoundaryHost\n    properties:\n      type: static\n      hostCatalogId: ${fooBoundaryHostCatalog.id}\n      scopeId: ${project.id}\n      address: 10.0.0.1\n  fooBoundaryHostSet:\n    type: boundary:BoundaryHostSet\n    properties:\n      type: static\n      hostCatalogId: ${fooBoundaryHostCatalog.id}\n      hostIds:\n        - ${fooBoundaryHost.id}\n        - ${bar.id}\n  fooBoundaryTarget:\n    type: boundary:BoundaryTarget\n    properties:\n      description: Foo target\n      type: tcp\n      defaultPort: 22\n      scopeId: ${project.id}\n      hostSourceIds:\n        - ${fooBoundaryHostSet.id}\n      brokeredCredentialSourceIds:\n        - ${fooBoundaryCredentialLibraryVault.id}\n  sshFoo:\n    type: boundary:BoundaryTarget\n    properties:\n      description: Ssh target\n      type: ssh\n      defaultPort: 22\n      scopeId: ${project.id}\n      hostSourceIds:\n        - ${fooBoundaryHostSet.id}\n      injectedApplicationCredentialSourceIds:\n        - ${fooBoundaryCredentialLibraryVault.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryTarget:BoundaryTarget foo \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "brokeredCredentialSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of brokered credential source ID's.\n"
                },
                "defaultPort": {
                    "type": "integer",
                    "description": "The default port for this target.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The target description.\n"
                },
                "hostSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of host source ID's.\n"
                },
                "injectedApplicationCredentialSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of injected application credential source ID's.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The target name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n"
                },
                "sessionConnectionLimit": {
                    "type": "integer"
                },
                "sessionMaxSeconds": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "description": "The target resource type.\n"
                },
                "workerFilter": {
                    "type": "string",
                    "description": "Boolean expression to filter the workers for this target\n"
                }
            },
            "required": [
                "name",
                "scopeId",
                "sessionConnectionLimit",
                "sessionMaxSeconds",
                "type"
            ],
            "inputProperties": {
                "brokeredCredentialSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of brokered credential source ID's.\n"
                },
                "defaultPort": {
                    "type": "integer",
                    "description": "The default port for this target.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The target description.\n"
                },
                "hostSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of host source ID's.\n"
                },
                "injectedApplicationCredentialSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of injected application credential source ID's.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The target name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                    "willReplaceOnChanges": true
                },
                "sessionConnectionLimit": {
                    "type": "integer"
                },
                "sessionMaxSeconds": {
                    "type": "integer"
                },
                "type": {
                    "type": "string",
                    "description": "The target resource type.\n",
                    "willReplaceOnChanges": true
                },
                "workerFilter": {
                    "type": "string",
                    "description": "Boolean expression to filter the workers for this target\n"
                }
            },
            "requiredInputs": [
                "scopeId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryTarget resources.\n",
                "properties": {
                    "brokeredCredentialSourceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of brokered credential source ID's.\n"
                    },
                    "defaultPort": {
                        "type": "integer",
                        "description": "The default port for this target.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The target description.\n"
                    },
                    "hostSourceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of host source ID's.\n"
                    },
                    "injectedApplicationCredentialSourceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of injected application credential source ID's.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The target name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                        "willReplaceOnChanges": true
                    },
                    "sessionConnectionLimit": {
                        "type": "integer"
                    },
                    "sessionMaxSeconds": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string",
                        "description": "The target resource type.\n",
                        "willReplaceOnChanges": true
                    },
                    "workerFilter": {
                        "type": "string",
                        "description": "Boolean expression to filter the workers for this target\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/boundaryUser:BoundaryUser": {
            "description": "The user resource allows you to configure a Boundary user.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@katasec/boundary\";\n\nconst org = new boundary.BoundaryScope(\"org\", {\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst password = new boundary.BoundaryAuthMethod(\"password\", {\n    scopeId: org.id,\n    type: \"password\",\n});\nconst jeffBoundaryAccountPassword = new boundary.BoundaryAccountPassword(\"jeffBoundaryAccountPassword\", {\n    authMethodId: password.id,\n    type: \"password\",\n    loginName: \"jeff\",\n    password: `$uper$ecure`,\n});\nconst jeffBoundaryUser = new boundary.BoundaryUser(\"jeffBoundaryUser\", {\n    description: \"Jeff's user resource\",\n    accountIds: [jeffBoundaryAccountPassword.id],\n    scopeId: org.id,\n});\n```\n```python\nimport pulumi\nimport katasec_boundary as boundary\n\norg = boundary.BoundaryScope(\"org\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\npassword = boundary.BoundaryAuthMethod(\"password\",\n    scope_id=org.id,\n    type=\"password\")\njeff_boundary_account_password = boundary.BoundaryAccountPassword(\"jeffBoundaryAccountPassword\",\n    auth_method_id=password.id,\n    type=\"password\",\n    login_name=\"jeff\",\n    password=\"$uper$ecure\")\njeff_boundary_user = boundary.BoundaryUser(\"jeffBoundaryUser\",\n    description=\"Jeff's user resource\",\n    account_ids=[jeff_boundary_account_password.id],\n    scope_id=org.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Boundary = Katasec.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.BoundaryScope(\"org\", new()\n    {\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var password = new Boundary.BoundaryAuthMethod(\"password\", new()\n    {\n        ScopeId = org.Id,\n        Type = \"password\",\n    });\n\n    var jeffBoundaryAccountPassword = new Boundary.BoundaryAccountPassword(\"jeffBoundaryAccountPassword\", new()\n    {\n        AuthMethodId = password.Id,\n        Type = \"password\",\n        LoginName = \"jeff\",\n        Password = \"$uper$ecure\",\n    });\n\n    var jeffBoundaryUser = new Boundary.BoundaryUser(\"jeffBoundaryUser\", new()\n    {\n        Description = \"Jeff's user resource\",\n        AccountIds = new[]\n        {\n            jeffBoundaryAccountPassword.Id,\n        },\n        ScopeId = org.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/katasec/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewBoundaryScope(ctx, \"org\", \u0026boundary.BoundaryScopeArgs{\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tpassword, err := boundary.NewBoundaryAuthMethod(ctx, \"password\", \u0026boundary.BoundaryAuthMethodArgs{\n\t\t\tScopeId: org.ID(),\n\t\t\tType:    pulumi.String(\"password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjeffBoundaryAccountPassword, err := boundary.NewBoundaryAccountPassword(ctx, \"jeffBoundaryAccountPassword\", \u0026boundary.BoundaryAccountPasswordArgs{\n\t\t\tAuthMethodId: password.ID(),\n\t\t\tType:         pulumi.String(\"password\"),\n\t\t\tLoginName:    pulumi.String(\"jeff\"),\n\t\t\tPassword:     pulumi.String(fmt.Sprintf(\"$uper$ecure\")),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewBoundaryUser(ctx, \"jeffBoundaryUser\", \u0026boundary.BoundaryUserArgs{\n\t\t\tDescription: pulumi.String(\"Jeff's user resource\"),\n\t\t\tAccountIds: pulumi.StringArray{\n\t\t\t\tjeffBoundaryAccountPassword.ID(),\n\t\t\t},\n\t\t\tScopeId: org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryScope;\nimport com.pulumi.boundary.BoundaryScopeArgs;\nimport com.pulumi.boundary.BoundaryAuthMethod;\nimport com.pulumi.boundary.BoundaryAuthMethodArgs;\nimport com.pulumi.boundary.BoundaryAccountPassword;\nimport com.pulumi.boundary.BoundaryAccountPasswordArgs;\nimport com.pulumi.boundary.BoundaryUser;\nimport com.pulumi.boundary.BoundaryUserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new BoundaryScope(\"org\", BoundaryScopeArgs.builder()        \n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var password = new BoundaryAuthMethod(\"password\", BoundaryAuthMethodArgs.builder()        \n            .scopeId(org.id())\n            .type(\"password\")\n            .build());\n\n        var jeffBoundaryAccountPassword = new BoundaryAccountPassword(\"jeffBoundaryAccountPassword\", BoundaryAccountPasswordArgs.builder()        \n            .authMethodId(password.id())\n            .type(\"password\")\n            .loginName(\"jeff\")\n            .password(\"$uper$ecure\")\n            .build());\n\n        var jeffBoundaryUser = new BoundaryUser(\"jeffBoundaryUser\", BoundaryUserArgs.builder()        \n            .description(\"Jeff's user resource\")\n            .accountIds(jeffBoundaryAccountPassword.id())\n            .scopeId(org.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:BoundaryScope\n    properties:\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  password:\n    type: boundary:BoundaryAuthMethod\n    properties:\n      scopeId: ${org.id}\n      type: password\n  jeffBoundaryAccountPassword:\n    type: boundary:BoundaryAccountPassword\n    properties:\n      authMethodId: ${password.id}\n      type: password\n      loginName: jeff\n      password: $uper$ecure\n  jeffBoundaryUser:\n    type: boundary:BoundaryUser\n    properties:\n      description: Jeff's user resource\n      accountIds:\n        - ${jeffBoundaryAccountPassword.id}\n      scopeId: ${org.id}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n\n\n```sh\n $ pulumi import boundary:index/boundaryUser:BoundaryUser foo \u003cmy-id\u003e\n```\n\n ",
            "properties": {
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Account ID's to associate with this user resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The user description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The username. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n"
                }
            },
            "required": [
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Account ID's to associate with this user resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The user description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The username. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BoundaryUser resources.\n",
                "properties": {
                    "accountIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Account ID's to associate with this user resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The user description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The username. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    }
}